{
	"id": "f0b158ba4fa252c17736487c9e57653b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/WormholeRelayer/CCTPBase.sol": {
				"content": "// SPDX-License-Identifier: Apache 2\npragma solidity ^0.8.19;\n\nimport \"../interfaces/token/IERC20.sol\";\nimport \"../interfaces/cctp/ITokenMessenger.sol\";\nimport \"../interfaces/cctp/IMessageTransmitter.sol\";\n\nimport \"./Base.sol\";\n\nlibrary CCTPMessageLib {\n  // The second standardized key type is a CCTP Key representing a CCTP transfer of USDC\n  // (on the IWormholeRelayer interface)\n\n  // Note - the default delivery provider only will relay CCTP transfers that were sent\n  // in the same transaction that this message was emitted!\n  // (This will always be the case if 'CCTPSender' is used)\n\n  // encoded using abi.encodePacked(domain, nonce)\n  struct CCTPKey {\n    uint32 domain;\n    uint64 nonce;\n  }\n\n  // encoded using abi.encode(message, signature)\n  struct CCTPMessage {\n    bytes message;\n    bytes signature;\n  }\n}\n\nabstract contract CCTPBase is Base {\n  ITokenMessenger immutable circleTokenMessenger;\n  IMessageTransmitter immutable circleMessageTransmitter;\n  address immutable USDC;\n  address cctpConfigurationOwner;\n\n  constructor(\n    address _wormholeRelayer,\n    address _wormhole,\n    address _circleMessageTransmitter,\n    address _circleTokenMessenger,\n    address _USDC\n  ) Base(_wormholeRelayer, _wormhole) {\n    circleTokenMessenger = ITokenMessenger(_circleTokenMessenger);\n    circleMessageTransmitter = IMessageTransmitter(_circleMessageTransmitter);\n    USDC = _USDC;\n    cctpConfigurationOwner = msg.sender;\n  }\n}\n\nabstract contract CCTPSender is CCTPBase {\n  uint8 internal constant CONSISTENCY_LEVEL_FINALIZED = 15;\n\n  using CCTPMessageLib for *;\n\n  mapping(uint16 => uint32) public chainIdToCCTPDomain;\n\n  /**\n   * Sets the CCTP Domain corresponding to chain 'chain' to be 'cctpDomain'\n   * So that transfers of USDC to chain 'chain' use the target CCTP domain 'cctpDomain'\n   *\n   * This action can only be performed by 'cctpConfigurationOwner', who is set to be the deployer\n   *\n   * Currently, cctp domains are:\n   * Ethereum: Wormhole chain id 2, cctp domain 0\n   * Avalanche: Wormhole chain id 6, cctp domain 1\n   * Optimism: Wormhole chain id 24, cctp domain 2\n   * Arbitrum: Wormhole chain id 23, cctp domain 3\n   * Base: Wormhole chain id 30, cctp domain 6\n   *\n   * These can be set via:\n   * setCCTPDomain(2, 0);\n   * setCCTPDomain(6, 1);\n   * setCCTPDomain(24, 2);\n   * setCCTPDomain(23, 3);\n   * setCCTPDomain(30, 6);\n   */\n  function setCCTPDomain(uint16 chain, uint32 cctpDomain) public {\n    require(\n      msg.sender == cctpConfigurationOwner,\n      \"Not allowed to set CCTP Domain\"\n    );\n    chainIdToCCTPDomain[chain] = cctpDomain;\n  }\n\n  function getCCTPDomain(uint16 chain) internal view returns (uint32) {\n    return chainIdToCCTPDomain[chain];\n  }\n\n  /**\n   * transferUSDC wraps common boilerplate for sending tokens to another chain using IWormholeRelayer\n   * - approves the Circle TokenMessenger contract to spend 'amount' of USDC\n   * - calls Circle's 'depositForBurnWithCaller'\n   * - returns key for inclusion in WormholeRelayer `additionalVaas` argument\n   *\n   * Note: this requires that only the targetAddress can redeem transfers.\n   *\n   */\n\n  function transferUSDC(\n    uint256 amount,\n    uint16 targetChain,\n    address targetAddress\n  ) internal returns (MessageKey memory) {\n    IERC20(USDC).approve(address(circleTokenMessenger), amount);\n    bytes32 targetAddressBytes32 = addressToBytes32CCTP(targetAddress);\n    uint64 nonce = circleTokenMessenger.depositForBurnWithCaller(\n      amount,\n      getCCTPDomain(targetChain),\n      targetAddressBytes32,\n      USDC,\n      targetAddressBytes32\n    );\n    return MessageKey(CCTP_KEY_TYPE, abi.encodePacked(getCCTPDomain(wormhole.chainId()), nonce));\n  }\n\n  // Publishes a CCTP transfer of 'amount' of USDC\n  // and requests a delivery of the transfer along with 'payload' to 'targetAddress' on 'targetChain'\n  //\n  // The second step is done by publishing a wormhole message representing a request\n  // to call 'receiveWormholeMessages' on the address 'targetAddress' on chain 'targetChain'\n  // with the payload 'abi.encode(amount, payload)'\n  // (and we encode the amount so it can be checked on the target chain)\n  function sendUSDCWithPayloadToEvm(\n    uint16 targetChain,\n    address targetAddress,\n    bytes memory payload,\n    uint256 receiverValue,\n    uint256 gasLimit,\n    uint256 amount\n  ) internal returns (uint64 sequence) {\n    MessageKey[] memory messageKeys = new MessageKey[](1);\n    messageKeys[0] = transferUSDC(amount, targetChain, targetAddress);\n\n    bytes memory userPayload = abi.encode(amount, payload);\n    address defaultDeliveryProvider = wormholeRelayer.getDefaultDeliveryProvider();\n\n    (uint256 cost, ) = wormholeRelayer.quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit);\n\n    sequence = wormholeRelayer.sendToEvm{value: cost}(\n      targetChain,\n      targetAddress,\n      userPayload,\n      receiverValue,\n      0,\n      gasLimit,\n      targetChain,\n      address(0x0),\n      defaultDeliveryProvider,\n      messageKeys,\n      CONSISTENCY_LEVEL_FINALIZED\n    );\n  }\n\n  function addressToBytes32CCTP(address addr) private pure returns (bytes32) {\n    return bytes32(uint256(uint160(addr)));\n  }\n}\n\nabstract contract CCTPReceiver is CCTPBase {\n  function redeemUSDC(\n    bytes memory cctpMessage\n  ) internal returns (uint256 amount) {\n    (bytes memory message, bytes memory signature) = abi.decode(cctpMessage, (bytes, bytes));\n    uint256 beforeBalance = IERC20(USDC).balanceOf(address(this));\n    circleMessageTransmitter.receiveMessage(message, signature);\n    return IERC20(USDC).balanceOf(address(this)) - beforeBalance;\n  }\n\n  function receiveWormholeMessages(\n    bytes memory payload,\n    bytes[] memory additionalMessages,\n    bytes32 sourceAddress,\n    uint16 sourceChain,\n    bytes32 deliveryHash\n  ) external payable {\n    // Currently, 'sendUSDCWithPayloadToEVM' only sends one CCTP transfer\n    // That can be modified if the integrator desires to send multiple CCTP transfers\n    // in which case the following code would have to be modified to support\n    // redeeming these multiple transfers and checking that their 'amount's are accurate\n    require(\n      additionalMessages.length <= 1,\n      \"CCTP: At most one Message is supported\"\n    );\n\n    uint256 amountUSDCReceived;\n    if (additionalMessages.length == 1)\n      amountUSDCReceived = redeemUSDC(additionalMessages[0]);\n\n    (uint256 amount, bytes memory userPayload) = abi.decode(payload, (uint256, bytes));\n\n    // Check that the correct amount was received\n    // It is important to verify that the 'USDC' sent in by the relayer is the same amount\n    // that the sender sent in on the source chain\n    require(amount == amountUSDCReceived, \"Wrong amount received\");\n\n    receivePayloadAndUSDC(\n      userPayload,\n      amountUSDCReceived,\n      sourceAddress,\n      sourceChain,\n      deliveryHash\n    );\n  }\n\n  // Implement this function to handle in-bound deliveries that include a CCTP transfer\n  function receivePayloadAndUSDC(\n    bytes memory payload,\n    uint256 amountUSDCReceived,\n    bytes32 sourceAddress,\n    uint16 sourceChain,\n    bytes32 deliveryHash\n  ) internal virtual {}\n}\n"
			},
			"src/WormholeRelayer/Base.sol": {
				"content": "// SPDX-License-Identifier: Apache 2\npragma solidity ^0.8.19;\n\n//import \"https://github.com/wormhole-foundation/wormhole-solidity-sdk/blob/main/src/interfaces/IWormholeReceiver.sol\";\nimport \"../interfaces/IWormholeRelayer.sol\";\nimport \"../interfaces/IWormhole.sol\";\nimport \"../Utils.sol\";\nimport \"../interfaces/IWormholeReceiver.sol\";\n\n\nabstract contract Base {\n  IWormholeRelayer public immutable wormholeRelayer;\n  IWormhole public immutable wormhole;\n\n  address registrationOwner;\n  mapping(uint16 => bytes32) registeredSenders;\n\n  constructor(address _wormholeRelayer, address _wormhole) {\n    wormholeRelayer = IWormholeRelayer(_wormholeRelayer);\n    wormhole = IWormhole(_wormhole);\n    registrationOwner = msg.sender;\n  }\n\n  modifier onlyWormholeRelayer() {\n    require(\n      msg.sender == address(wormholeRelayer),\n      \"Msg.sender is not Wormhole Relayer\"\n    );\n    _;\n  }\n\n  modifier isRegisteredSender(uint16 sourceChain, bytes32 sourceAddress) {\n    require(\n      registeredSenders[sourceChain] == sourceAddress,\n      \"Not registered sender\"\n    );\n    _;\n  }\n\n  /**\n   * Sets the registered address for 'sourceChain' to 'sourceAddress'\n   * So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid\n   *\n   * Assumes only one sender per chain is valid\n   * Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\n   */\n  function setRegisteredSender(\n    uint16 sourceChain,\n    bytes32 sourceAddress\n  ) public {\n    require(\n      msg.sender == registrationOwner,\n      \"Not allowed to set registered sender\"\n    );\n    registeredSenders[sourceChain] = sourceAddress;\n  }\n}\n"
			},
			"src/interfaces/cctp/IMessageTransmitter.sol": {
				"content": "// SPDX-License-Identifier: Apache 2\n// Copyright (c) 2022, Circle Internet Financial Limited.\n//\n// stripped, flattened version of:\n//   https://github.com/circlefin/evm-cctp-contracts/blob/master/src/MessageTransmitter.sol\n\npragma solidity ^0.8.0;\n\nimport {IOwnable2Step} from \"./shared/IOwnable2Step.sol\";\nimport {IPausable} from \"./shared/IPausable.sol\";\n\ninterface IAttestable {\n  event AttesterEnabled(address indexed attester);\n  event AttesterDisabled(address indexed attester);\n\n  event SignatureThresholdUpdated(uint256 oldSignatureThreshold, uint256 newSignatureThreshold);\n  event AttesterManagerUpdated(\n    address indexed previousAttesterManager,\n    address indexed newAttesterManager\n  );\n\n  function attesterManager() external view returns (address);\n  function isEnabledAttester(address attester) external view returns (bool);\n  function getNumEnabledAttesters() external view returns (uint256);\n  function getEnabledAttester(uint256 index) external view returns (address);\n\n  function updateAttesterManager(address newAttesterManager) external;\n  function setSignatureThreshold(uint256 newSignatureThreshold) external;\n  function enableAttester(address attester) external;\n  function disableAttester(address attester) external;\n}\n\ninterface IMessageTransmitter is IAttestable, IPausable, IOwnable2Step {\n  event MessageSent(bytes message);\n\n  event MessageReceived(\n    address indexed caller,\n    uint32 sourceDomain,\n    uint64 indexed nonce,\n    bytes32 sender,\n    bytes messageBody\n  );\n\n  function localDomain() external view returns (uint32);\n  function version() external view returns (uint32);\n  function maxMessageBodySize() external view returns (uint256);\n  function nextAvailableNonce() external view returns (uint64);\n  function usedNonces(bytes32 nonce) external view returns (bool);\n\n  function sendMessage(\n    uint32 destinationDomain,\n    bytes32 recipient,\n    bytes calldata messageBody\n  ) external returns (uint64);\n\n  function sendMessageWithCaller(\n    uint32 destinationDomain,\n    bytes32 recipient,\n    bytes32 destinationCaller,\n    bytes calldata messageBody\n  ) external returns (uint64);\n\n  function replaceMessage(\n    bytes calldata originalMessage,\n    bytes calldata originalAttestation,\n    bytes calldata newMessageBody,\n    bytes32 newDestinationCaller\n  ) external;\n\n  function receiveMessage(\n    bytes calldata message,\n    bytes calldata attestation\n  ) external returns (bool success);\n\n  function setMaxMessageBodySize(uint256 newMaxMessageBodySize) external;\n}\n"
			},
			"src/interfaces/cctp/ITokenMessenger.sol": {
				"content": "// SPDX-License-Identifier: Apache 2\n// Copyright (c) 2022, Circle Internet Financial Limited.\n//\n// stripped version of:\n//   https://github.com/circlefin/evm-cctp-contracts/blob/master/src/MessageTransmitter.sol\n\npragma solidity ^0.8.0;\n\nimport {IOwnable2Step} from \"./shared/IOwnable2Step.sol\";\n\nimport {IMessageTransmitter} from \"./IMessageTransmitter.sol\";\nimport {ITokenMinter} from \"./ITokenMinter.sol\";\n\ninterface ITokenMessenger is IOwnable2Step {\n  event DepositForBurn(\n    uint64 indexed nonce,\n    address indexed burnToken,\n    uint256 amount,\n    address indexed depositor,\n    bytes32 mintRecipient,\n    uint32 destinationDomain,\n    bytes32 destinationTokenMessenger,\n    bytes32 destinationCaller\n  );\n\n  event MintAndWithdraw(address indexed mintRecipient, uint256 amount, address indexed mintToken);\n\n  event RemoteTokenMessengerAdded(uint32 domain, bytes32 tokenMessenger);\n  event RemoteTokenMessengerRemoved(uint32 domain, bytes32 tokenMessenger);\n\n  event LocalMinterAdded(address localMinter);\n  event LocalMinterRemoved(address localMinter);\n\n  function messageBodyVersion() external view returns (uint32);\n  function localMessageTransmitter() external view returns (IMessageTransmitter);\n  function localMinter() external view returns (ITokenMinter);\n  function remoteTokenMessengers(uint32 domain) external view returns (bytes32);\n\n  function depositForBurn(\n    uint256 amount,\n    uint32 destinationDomain,\n    bytes32 mintRecipient,\n    address burnToken\n  ) external returns (uint64 nonce);\n\n  function depositForBurnWithCaller(\n    uint256 amount,\n    uint32 destinationDomain,\n    bytes32 mintRecipient,\n    address burnToken,\n    bytes32 destinationCaller\n  ) external returns (uint64 nonce);\n\n  function replaceDepositForBurn(\n    bytes calldata originalMessage,\n    bytes calldata originalAttestation,\n    bytes32 newDestinationCaller,\n    bytes32 newMintRecipient\n  ) external;\n\n  function handleReceiveMessage(\n    uint32 remoteDomain,\n    bytes32 sender,\n    bytes calldata messageBody\n  ) external returns (bool);\n\n  function addRemoteTokenMessenger(uint32 domain, bytes32 tokenMessenger) external;\n  function removeRemoteTokenMessenger(uint32 domain) external;\n\n  function addLocalMinter(address newLocalMinter) external;\n  function removeLocalMinter() external;\n}"
			},
			"src/interfaces/token/IERC20.sol": {
				"content": "// SPDX-License-Identifier: Apache 2\n\npragma solidity ^0.8.0;\n\n//https://eips.ethereum.org/EIPS/eip-20\ninterface IERC20 {\n  event Transfer(address indexed from, address indexed to, uint256 value);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n\n  function totalSupply() external view returns (uint256);\n  function balanceOf(address account) external view returns (uint256);\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  function transfer(address to, uint256 amount) external returns (bool);\n  function approve(address spender, uint256 amount) external returns (bool);\n  function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"src/interfaces/cctp/ITokenMinter.sol": {
				"content": "// SPDX-License-Identifier: Apache 2\n// Copyright (c) 2022, Circle Internet Financial Limited.\n//stripped version of:\n//https://github.com/circlefin/evm-cctp-contracts/blob/master/src/interfaces/ITokenMinter.sol\n\npragma solidity ^0.8.0;\n\nimport {IOwnable2Step} from \"./shared/IOwnable2Step.sol\";\nimport {IPausable} from \"./shared/IPausable.sol\";\n\ninterface ITokenController {\n  event TokenPairLinked(address localToken, uint32 remoteDomain, bytes32 remoteToken);\n  event TokenPairUnlinked(address localToken, uint32 remoteDomain, bytes32 remoteToken);\n\n  event SetBurnLimitPerMessage(address indexed token, uint256 burnLimitPerMessage);\n  event SetTokenController(address tokenController);\n\n  function burnLimitsPerMessage(address token) external view returns (uint256);\n  function remoteTokensToLocalTokens(bytes32 sourceIdHash) external view returns (address);\n  function tokenController() external view returns (address);\n\n  function linkTokenPair(address localToken, uint32 remoteDomain, bytes32 remoteToken) external;\n  function unlinkTokenPair(address localToken, uint32 remoteDomain, bytes32 remoteToken) external;\n  function setMaxBurnAmountPerMessage(address localToken, uint256 burnLimitPerMessage) external;\n}\n\ninterface ITokenMinter is ITokenController, IPausable, IOwnable2Step {\n  event LocalTokenMessengerAdded(address localTokenMessenger);\n  event LocalTokenMessengerRemoved(address localTokenMessenger);\n\n  function localTokenMessenger() external view returns (address);\n  function getLocalToken(uint32 remoteDomain, bytes32 remoteToken) external view returns (address);\n\n  function mint(uint32 sourceDomain, bytes32 burnToken, address to, uint256 amount) external;\n  function burn(address burnToken, uint256 burnAmount) external;\n\n  function addLocalTokenMessenger(address newLocalTokenMessenger) external;\n  function removeLocalTokenMessenger() external;\n  function setTokenController(address newTokenController) external;\n}\n"
			},
			"src/interfaces/cctp/shared/IOwnable2Step.sol": {
				"content": "// SPDX-License-Identifier: Apache 2\n// Copyright (c) 2022, Circle Internet Financial Limited.\n//\n// stripped, flattened version of:\n//   https://github.com/circlefin/evm-cctp-contracts/blob/master/src/roles/Ownable2Step.sol\n\npragma solidity ^0.8.0;\n\ninterface IOwnable2Step {\n  event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  function transferOwnership(address newOwner) external;\n  function acceptOwnership() external;\n\n  function owner() external view returns (address);\n  function pendingOwner() external view returns (address);\n}\n"
			},
			"src/interfaces/cctp/shared/IPausable.sol": {
				"content": "// SPDX-License-Identifier: Apache 2\n// Copyright (c) 2022, Circle Internet Financial Limited.\n//\n// stripped version of:\n//   https://github.com/circlefin/evm-cctp-contracts/blob/master/src/roles/Pausable.sol\n\npragma solidity ^0.8.0;\n\ninterface IPausable {\n  event Pause();\n  event Unpause();\n  event PauserChanged(address indexed newAddress);\n\n  function paused() external view returns (bool);\n  function pauser() external view returns (address);\n\n  function pause() external;\n  function unpause() external;\n  function updatePauser(address newPauser) external;\n}\n"
			},
			"src/interfaces/IWormholeReceiver.sol": {
				"content": "// SPDX-License-Identifier: Apache 2\n\npragma solidity ^0.8.0;\n\n/**\n * @notice Interface for a contract which can receive Wormhole messages.\n */\ninterface IWormholeReceiver {\n  /**\n   * @notice When a `send` is performed with this contract as the target, this function will be\n   *     invoked by the WormholeRelayer contract\n   *\n   * NOTE: This function should be restricted such that only the Wormhole Relayer contract can call it.\n   *\n   * We also recommend that this function checks that `sourceChain` and `sourceAddress` are indeed who\n   *       you expect to have requested the calling of `send` on the source chain\n   *\n   * The invocation of this function corresponding to the `send` request will have msg.value equal\n   *   to the receiverValue specified in the send request.\n   *\n   * If the invocation of this function reverts or exceeds the gas limit\n   *   specified by the send requester, this delivery will result in a `ReceiverFailure`.\n   *\n   * @param payload - an arbitrary message which was included in the delivery by the\n   *     requester. This message's signature will already have been verified (as long as msg.sender is the Wormhole Relayer contract)\n   * @param additionalMessages - Additional messages which were requested to be included in this delivery.\n   *      Note: There are no contract-level guarantees that the messages in this array are what was requested\n   *      so **you should verify any sensitive information given here!**\n   *\n   *      For example, if a 'VaaKey' was specified on the source chain, then MAKE SURE the corresponding message here\n   *      has valid signatures (by calling `parseAndVerifyVM(message)` on the Wormhole core contract)\n   *\n   *      This field can be used to perform and relay TokenBridge or CCTP transfers, and there are example\n   *      usages of this at\n   *         https://github.com/wormhole-foundation/hello-token\n   *         https://github.com/wormhole-foundation/hello-cctp\n   *\n   * @param sourceAddress - the (wormhole format) address on the sending chain which requested\n   *     this delivery.\n   * @param sourceChain - the wormhole chain ID where this delivery was requested.\n   * @param deliveryHash - the VAA hash of the deliveryVAA.\n   *\n   */\n  function receiveWormholeMessages(\n    bytes memory payload,\n    bytes[] memory additionalMessages,\n    bytes32 sourceAddress,\n    uint16 sourceChain,\n    bytes32 deliveryHash\n  ) external payable;\n}\n"
			},
			"src/Utils.sol": {
				"content": "\n// SPDX-License-Identifier: Apache 2\npragma solidity ^0.8.19;\n\nerror NotAnEvmAddress(bytes32);\n\nfunction toUniversalAddress(address addr) pure returns (bytes32 universalAddr) {\n  universalAddr = bytes32(uint256(uint160(addr)));\n}\n\nfunction fromUniversalAddress(bytes32 universalAddr) pure returns (address addr) {\n  if (bytes12(universalAddr) != 0)\n    revert NotAnEvmAddress(universalAddr);\n\n  assembly (\"memory-safe\") {\n    addr := universalAddr\n  }\n}\n\n/**\n * Reverts with a given buffer data.\n * Meant to be used to easily bubble up errors from low level calls when they fail.\n */\nfunction reRevert(bytes memory err) pure {\n  assembly (\"memory-safe\") {\n    revert(add(err, 32), mload(err))\n  }\n}\n"
			},
			"src/interfaces/IWormhole.sol": {
				"content": "// SPDX-License-Identifier: Apache 2\n\npragma solidity ^0.8.0;\n\ninterface IWormhole {\n  struct GuardianSet {\n    address[] keys;\n    uint32 expirationTime;\n  }\n\n  struct Signature {\n    bytes32 r;\n    bytes32 s;\n    uint8 v;\n    uint8 guardianIndex;\n  }\n\n  struct VM {\n    uint8 version;\n    uint32 timestamp;\n    uint32 nonce;\n    uint16 emitterChainId;\n    bytes32 emitterAddress;\n    uint64 sequence;\n    uint8 consistencyLevel;\n    bytes payload;\n    uint32 guardianSetIndex;\n    Signature[] signatures;\n    bytes32 hash;\n  }\n\n  struct ContractUpgrade {\n    bytes32 module;\n    uint8 action;\n    uint16 chain;\n    address newContract;\n  }\n\n  struct GuardianSetUpgrade {\n    bytes32 module;\n    uint8 action;\n    uint16 chain;\n    GuardianSet newGuardianSet;\n    uint32 newGuardianSetIndex;\n  }\n\n  struct SetMessageFee {\n    bytes32 module;\n    uint8 action;\n    uint16 chain;\n    uint256 messageFee;\n  }\n\n  struct TransferFees {\n    bytes32 module;\n    uint8 action;\n    uint16 chain;\n    uint256 amount;\n    bytes32 recipient;\n  }\n\n  struct RecoverChainId {\n    bytes32 module;\n    uint8 action;\n    uint256 evmChainId;\n    uint16 newChainId;\n  }\n\n  event LogMessagePublished(\n    address indexed sender,\n    uint64 sequence,\n    uint32 nonce,\n    bytes payload,\n    uint8 consistencyLevel\n  );\n\n  event ContractUpgraded(address indexed oldContract, address indexed newContract);\n\n  event GuardianSetAdded(uint32 indexed index);\n\n  function publishMessage(uint32 nonce, bytes memory payload, uint8 consistencyLevel)\n    external\n    payable\n    returns (uint64 sequence);\n\n  function initialize() external;\n\n  function parseAndVerifyVM(bytes calldata encodedVM)\n    external\n    view\n    returns (VM memory vm, bool valid, string memory reason);\n\n  function verifyVM(VM memory vm) external view returns (bool valid, string memory reason);\n\n  function verifySignatures(\n    bytes32 hash,\n    Signature[] memory signatures,\n    GuardianSet memory guardianSet\n  ) external pure returns (bool valid, string memory reason);\n\n  function parseVM(bytes memory encodedVM) external pure returns (VM memory vm);\n\n  function quorum(\n    uint256 numGuardians\n  ) external pure returns (uint256 numSignaturesRequiredForQuorum);\n\n  function getGuardianSet(uint32 index) external view returns (GuardianSet memory);\n\n  function getCurrentGuardianSetIndex() external view returns (uint32);\n\n  function getGuardianSetExpiry() external view returns (uint32);\n\n  function governanceActionIsConsumed(bytes32 hash) external view returns (bool);\n\n  function isInitialized(address impl) external view returns (bool);\n\n  function chainId() external view returns (uint16);\n\n  function isFork() external view returns (bool);\n\n  function governanceChainId() external view returns (uint16);\n\n  function governanceContract() external view returns (bytes32);\n\n  function messageFee() external view returns (uint256);\n\n  function evmChainId() external view returns (uint256);\n\n  function nextSequence(address emitter) external view returns (uint64);\n\n  function parseContractUpgrade(\n    bytes memory encodedUpgrade\n  ) external pure returns (ContractUpgrade memory cu);\n\n  function parseGuardianSetUpgrade(\n    bytes memory encodedUpgrade\n  ) external pure returns (GuardianSetUpgrade memory gsu);\n\n  function parseSetMessageFee(\n    bytes memory encodedSetMessageFee\n  ) external pure returns (SetMessageFee memory smf);\n\n  function parseTransferFees(\n    bytes memory encodedTransferFees\n  ) external pure returns (TransferFees memory tf);\n\n  function parseRecoverChainId(\n    bytes memory encodedRecoverChainId\n  ) external pure returns (RecoverChainId memory rci);\n\n  function submitContractUpgrade(bytes memory _vm) external;\n\n  function submitSetMessageFee(bytes memory _vm) external;\n\n  function submitNewGuardianSet(bytes memory _vm) external;\n\n  function submitTransferFees(bytes memory _vm) external;\n\n  function submitRecoverChainId(bytes memory _vm) external;\n}\n"
			},
			"src/interfaces/IWormholeRelayer.sol": {
				"content": "// SPDX-License-Identifier: Apache 2\n\npragma solidity ^0.8.0;\n\n/**\n * @title WormholeRelayer\n * @author\n * @notice This project allows developers to build cross-chain applications powered by Wormhole without needing to\n * write and run their own relaying infrastructure\n *\n * We implement the IWormholeRelayer interface that allows users to request a delivery provider to relay a payload (and/or additional messages)\n * to a chain and address of their choice.\n */\n\n/**\n * @notice VaaKey identifies a wormhole message\n *\n * @custom:member chainId Wormhole chain ID of the chain where this VAA was emitted from\n * @custom:member emitterAddress Address of the emitter of the VAA, in Wormhole bytes32 format\n * @custom:member sequence Sequence number of the VAA\n */\nstruct VaaKey {\n  uint16 chainId;\n  bytes32 emitterAddress;\n  uint64 sequence;\n}\n\n// 0-127 are reserved for standardized KeyTypes, 128-255 are for custom use\nuint8 constant VAA_KEY_TYPE = 1;\nuint8 constant CCTP_KEY_TYPE = 2;\n\nstruct MessageKey {\n  uint8 keyType; // 0-127 are reserved for standardized KeyTypes, 128-255 are for custom use\n  bytes encodedKey;\n}\n\ninterface IWormholeRelayerBase {\n  event SendEvent(\n    uint64 indexed sequence,\n    uint256 deliveryQuote,\n    uint256 paymentForExtraReceiverValue\n  );\n\n  function getRegisteredWormholeRelayerContract(\n    uint16 chainId\n  ) external view returns (bytes32);\n\n  /**\n   * @notice Returns true if a delivery has been attempted for the given deliveryHash\n   * Note: invalid deliveries where the tx reverts are not considered attempted\n   */\n  function deliveryAttempted(\n    bytes32 deliveryHash\n  ) external view returns (bool attempted);\n\n  /**\n   * @notice block number at which a delivery was successfully executed\n   */\n  function deliverySuccessBlock(\n    bytes32 deliveryHash\n  ) external view returns (uint256 blockNumber);\n\n  /**\n   * @notice block number of the latest attempt to execute a delivery that failed\n   */\n  function deliveryFailureBlock(\n    bytes32 deliveryHash\n  ) external view returns (uint256 blockNumber);\n}\n\n/**\n * @title IWormholeRelayerSend\n * @notice The interface to request deliveries\n */\ninterface IWormholeRelayerSend is IWormholeRelayerBase {\n  /**\n   * @notice Publishes an instruction for the default delivery provider\n   * to relay a payload to the address `targetAddress` on chain `targetChain`\n   * with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\n   *\n   * `targetAddress` must implement the IWormholeReceiver interface\n   *\n   * This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\n   *\n   * Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendPayloadToEvm` function\n   * with `refundChain` and `refundAddress` as parameters\n   *\n   * @param targetChain in Wormhole Chain ID format\n   * @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n   * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n   * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n   * @param gasLimit gas limit with which to call `targetAddress`.\n   * @return sequence sequence number of published VAA containing delivery instructions\n   */\n  function sendPayloadToEvm(\n    uint16 targetChain,\n    address targetAddress,\n    bytes memory payload,\n    uint256 receiverValue,\n    uint256 gasLimit\n  ) external payable returns (uint64 sequence);\n\n  /**\n   * @notice Publishes an instruction for the default delivery provider\n   * to relay a payload to the address `targetAddress` on chain `targetChain`\n   * with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\n   *\n   * Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n   * `targetAddress` must implement the IWormholeReceiver interface\n   *\n   * This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\n   *\n   * @param targetChain in Wormhole Chain ID format\n   * @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n   * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n   * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n   * @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\n   *        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\n   * @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n   * @param refundAddress The address on `refundChain` to deliver any refund to\n   * @return sequence sequence number of published VAA containing delivery instructions\n   */\n  function sendPayloadToEvm(\n    uint16 targetChain,\n    address targetAddress,\n    bytes memory payload,\n    uint256 receiverValue,\n    uint256 gasLimit,\n    uint16 refundChain,\n    address refundAddress\n  ) external payable returns (uint64 sequence);\n\n  /**\n   * @notice Publishes an instruction for the default delivery provider\n   * to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\n   * with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\n   *\n   * `targetAddress` must implement the IWormholeReceiver interface\n   *\n   * This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\n   *\n   * Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendVaasToEvm` function\n   * with `refundChain` and `refundAddress` as parameters\n   *\n   * @param targetChain in Wormhole Chain ID format\n   * @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n   * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n   * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n   * @param gasLimit gas limit with which to call `targetAddress`.\n   * @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\n   * @return sequence sequence number of published VAA containing delivery instructions\n   */\n  function sendVaasToEvm(\n    uint16 targetChain,\n    address targetAddress,\n    bytes memory payload,\n    uint256 receiverValue,\n    uint256 gasLimit,\n    VaaKey[] memory vaaKeys\n  ) external payable returns (uint64 sequence);\n\n  /**\n   * @notice Publishes an instruction for the default delivery provider\n   * to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\n   * with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\n   *\n   * Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n   * `targetAddress` must implement the IWormholeReceiver interface\n   *\n   * This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\n   *\n   * @param targetChain in Wormhole Chain ID format\n   * @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n   * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n   * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n   * @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\n   *        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\n   * @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\n   * @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n   * @param refundAddress The address on `refundChain` to deliver any refund to\n   * @return sequence sequence number of published VAA containing delivery instructions\n   */\n  function sendVaasToEvm(\n    uint16 targetChain,\n    address targetAddress,\n    bytes memory payload,\n    uint256 receiverValue,\n    uint256 gasLimit,\n    VaaKey[] memory vaaKeys,\n    uint16 refundChain,\n    address refundAddress\n  ) external payable returns (uint64 sequence);\n\n  /**\n   * @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\n   * to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\n   * with gas limit `gasLimit` and `msg.value` equal to\n   * receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\n   *\n   * Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n   * `targetAddress` must implement the IWormholeReceiver interface\n   *\n   * This function must be called with `msg.value` equal to\n   * quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue\n   *\n   * @param targetChain in Wormhole Chain ID format\n   * @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n   * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n   * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n   * @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\n   *        (in addition to the `receiverValue` specified)\n   * @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\n   *        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\n   * @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n   * @param refundAddress The address on `refundChain` to deliver any refund to\n   * @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n   * @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\n   * @param consistencyLevel Consistency level with which to publish the delivery instructions - see\n   *        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\n   * @return sequence sequence number of published VAA containing delivery instructions\n   */\n  function sendToEvm(\n    uint16 targetChain,\n    address targetAddress,\n    bytes memory payload,\n    uint256 receiverValue,\n    uint256 paymentForExtraReceiverValue,\n    uint256 gasLimit,\n    uint16 refundChain,\n    address refundAddress,\n    address deliveryProviderAddress,\n    VaaKey[] memory vaaKeys,\n    uint8 consistencyLevel\n  ) external payable returns (uint64 sequence);\n\n  /**\n   * @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\n   * to relay a payload and external messages specified by `messageKeys` to the address `targetAddress` on chain `targetChain`\n   * with gas limit `gasLimit` and `msg.value` equal to\n   * receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\n   *\n   * Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n   * `targetAddress` must implement the IWormholeReceiver interface\n   *\n   * This function must be called with `msg.value` equal to\n   * quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue\n   *\n   * Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected\n   * DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\n   *\n   * @param targetChain in Wormhole Chain ID format\n   * @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n   * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n   * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n   * @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\n   *        (in addition to the `receiverValue` specified)\n   * @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\n   *        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\n   * @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n   * @param refundAddress The address on `refundChain` to deliver any refund to\n   * @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n   * @param messageKeys Additional messagess to pass in as parameter in call to `targetAddress`\n   * @param consistencyLevel Consistency level with which to publish the delivery instructions - see\n   *        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\n   * @return sequence sequence number of published VAA containing delivery instructions\n   */\n  function sendToEvm(\n    uint16 targetChain,\n    address targetAddress,\n    bytes memory payload,\n    uint256 receiverValue,\n    uint256 paymentForExtraReceiverValue,\n    uint256 gasLimit,\n    uint16 refundChain,\n    address refundAddress,\n    address deliveryProviderAddress,\n    MessageKey[] memory messageKeys,\n    uint8 consistencyLevel\n  ) external payable returns (uint64 sequence);\n\n  /**\n   * @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\n   * to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\n   * with `msg.value` equal to\n   * receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\n   *\n   * Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n   * `targetAddress` must implement the IWormholeReceiver interface\n   *\n   * This function must be called with `msg.value` equal to\n   * quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue\n   *\n   * @param targetChain in Wormhole Chain ID format\n   * @param targetAddress address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\n   * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n   * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n   * @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\n   *        (in addition to the `receiverValue` specified)\n   * @param encodedExecutionParameters encoded information on how to execute delivery that may impact pricing\n   *        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\n   * @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n   * @param refundAddress The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\n   * @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n   * @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\n   * @param consistencyLevel Consistency level with which to publish the delivery instructions - see\n   *        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\n   * @return sequence sequence number of published VAA containing delivery instructions\n   */\n  function send(\n    uint16 targetChain,\n    bytes32 targetAddress,\n    bytes memory payload,\n    uint256 receiverValue,\n    uint256 paymentForExtraReceiverValue,\n    bytes memory encodedExecutionParameters,\n    uint16 refundChain,\n    bytes32 refundAddress,\n    address deliveryProviderAddress,\n    VaaKey[] memory vaaKeys,\n    uint8 consistencyLevel\n  ) external payable returns (uint64 sequence);\n\n  /**\n   * @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\n   * to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\n   * with `msg.value` equal to\n   * receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\n   *\n   * Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n   * `targetAddress` must implement the IWormholeReceiver interface\n   *\n   * This function must be called with `msg.value` equal to\n   * quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue\n   *\n   * Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected\n   * DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\n   *\n   * @param targetChain in Wormhole Chain ID format\n   * @param targetAddress address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\n   * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n   * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n   * @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\n   *        (in addition to the `receiverValue` specified)\n   * @param encodedExecutionParameters encoded information on how to execute delivery that may impact pricing\n   *        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\n   * @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n   * @param refundAddress The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\n   * @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n   * @param messageKeys Additional messagess to pass in as parameter in call to `targetAddress`\n   * @param consistencyLevel Consistency level with which to publish the delivery instructions - see\n   *        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\n   * @return sequence sequence number of published VAA containing delivery instructions\n   */\n  function send(\n    uint16 targetChain,\n    bytes32 targetAddress,\n    bytes memory payload,\n    uint256 receiverValue,\n    uint256 paymentForExtraReceiverValue,\n    bytes memory encodedExecutionParameters,\n    uint16 refundChain,\n    bytes32 refundAddress,\n    address deliveryProviderAddress,\n    MessageKey[] memory messageKeys,\n    uint8 consistencyLevel\n  ) external payable returns (uint64 sequence);\n\n  /**\n   * @notice Requests a previously published delivery instruction to be redelivered\n   * (e.g. with a different delivery provider)\n   *\n   * This function must be called with `msg.value` equal to\n   * quoteEVMDeliveryPrice(targetChain, newReceiverValue, newGasLimit, newDeliveryProviderAddress)\n   *\n   *  @notice *** This will only be able to succeed if the following is true **\n   *         - newGasLimit >= gas limit of the old instruction\n   *         - newReceiverValue >= receiver value of the old instruction\n   *         - newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`\n   *\n   * @param deliveryVaaKey VaaKey identifying the wormhole message containing the\n   *        previously published delivery instructions\n   * @param targetChain The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\n   * @param newReceiverValue new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n   * @param newGasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\n   *        `targetChainRefundPerGasUnused` rate quoted by the delivery provider, to the refund chain and address specified in the original request\n   * @param newDeliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n   * @return sequence sequence number of published VAA containing redelivery instructions\n   *\n   * @notice *** This will only be able to succeed if the following is true **\n   *         - newGasLimit >= gas limit of the old instruction\n   *         - newReceiverValue >= receiver value of the old instruction\n   */\n  function resendToEvm(\n    VaaKey memory deliveryVaaKey,\n    uint16 targetChain,\n    uint256 newReceiverValue,\n    uint256 newGasLimit,\n    address newDeliveryProviderAddress\n  ) external payable returns (uint64 sequence);\n\n  /**\n   * @notice Requests a previously published delivery instruction to be redelivered\n   *\n   *\n   * This function must be called with `msg.value` equal to\n   * quoteDeliveryPrice(targetChain, newReceiverValue, newEncodedExecutionParameters, newDeliveryProviderAddress)\n   *\n   * @param deliveryVaaKey VaaKey identifying the wormhole message containing the\n   *        previously published delivery instructions\n   * @param targetChain The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\n   * @param newReceiverValue new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n   * @param newEncodedExecutionParameters new encoded information on how to execute delivery that may impact pricing\n   *        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\n   * @param newDeliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n   * @return sequence sequence number of published VAA containing redelivery instructions\n   *\n   *  @notice *** This will only be able to succeed if the following is true **\n   *         - (For EVM_V1) newGasLimit >= gas limit of the old instruction\n   *         - newReceiverValue >= receiver value of the old instruction\n   *         - (For EVM_V1) newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`\n   */\n  function resend(\n    VaaKey memory deliveryVaaKey,\n    uint16 targetChain,\n    uint256 newReceiverValue,\n    bytes memory newEncodedExecutionParameters,\n    address newDeliveryProviderAddress\n  ) external payable returns (uint64 sequence);\n\n  /**\n   * @notice Returns the price to request a relay to chain `targetChain`, using the default delivery provider\n   *\n   * @param targetChain in Wormhole Chain ID format\n   * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n   * @param gasLimit gas limit with which to call `targetAddress`.\n   * @return nativePriceQuote Price, in units of current chain currency, that the delivery provider charges to perform the relay\n   * @return targetChainRefundPerGasUnused amount of target chain currency that will be refunded per unit of gas unused,\n   *         if a refundAddress is specified.\n   *         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a\n   *         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.\n   *         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain.\n   */\n  function quoteEVMDeliveryPrice(\n    uint16 targetChain,\n    uint256 receiverValue,\n    uint256 gasLimit\n  )\n    external\n    view\n    returns (\n        uint256 nativePriceQuote,\n        uint256 targetChainRefundPerGasUnused\n    );\n\n  /**\n   * @notice Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\n   *\n   * @param targetChain in Wormhole Chain ID format\n   * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n   * @param gasLimit gas limit with which to call `targetAddress`.\n   * @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n   * @return nativePriceQuote Price, in units of current chain currency, that the delivery provider charges to perform the relay\n   * @return targetChainRefundPerGasUnused amount of target chain currency that will be refunded per unit of gas unused,\n   *         if a refundAddress is specified\n   *         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a\n   *         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.\n   *         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain.\n   */\n  function quoteEVMDeliveryPrice(\n    uint16 targetChain,\n    uint256 receiverValue,\n    uint256 gasLimit,\n    address deliveryProviderAddress\n  )\n    external\n    view\n    returns (\n        uint256 nativePriceQuote,\n        uint256 targetChainRefundPerGasUnused\n    );\n\n  /**\n   * @notice Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\n   *\n   * @param targetChain in Wormhole Chain ID format\n   * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n   * @param encodedExecutionParameters encoded information on how to execute delivery that may impact pricing\n   *        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\n   * @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n   * @return nativePriceQuote Price, in units of current chain currency, that the delivery provider charges to perform the relay\n   * @return encodedExecutionInfo encoded information on how the delivery will be executed\n   *        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` and `targetChainRefundPerGasUnused`\n   *             (which is the amount of target chain currency that will be refunded per unit of gas unused,\n   *              if a refundAddress is specified)\n   */\n  function quoteDeliveryPrice(\n    uint16 targetChain,\n    uint256 receiverValue,\n    bytes memory encodedExecutionParameters,\n    address deliveryProviderAddress\n  )\n    external\n    view\n    returns (uint256 nativePriceQuote, bytes memory encodedExecutionInfo);\n\n  /**\n   * @notice Returns the (extra) amount of target chain currency that `targetAddress`\n   * will be called with, if the `paymentForExtraReceiverValue` field is set to `currentChainAmount`\n   *\n   * @param targetChain in Wormhole Chain ID format\n   * @param currentChainAmount The value that `paymentForExtraReceiverValue` will be set to\n   * @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n   * @return targetChainAmount The amount such that if `targetAddress` will be called with `msg.value` equal to\n   *         receiverValue + targetChainAmount\n   */\n  function quoteNativeForChain(\n    uint16 targetChain,\n    uint256 currentChainAmount,\n    address deliveryProviderAddress\n  ) external view returns (uint256 targetChainAmount);\n\n  /**\n   * @notice Returns the address of the current default delivery provider\n   * @return deliveryProvider The address of (the default delivery provider)'s contract on this source\n   *   chain. This must be a contract that implements IDeliveryProvider.\n   */\n  function getDefaultDeliveryProvider()\n    external\n    view\n    returns (address deliveryProvider);\n}\n\n/**\n * @title IWormholeRelayerDelivery\n * @notice The interface to execute deliveries. Only relevant for Delivery Providers\n */\ninterface IWormholeRelayerDelivery is IWormholeRelayerBase {\n  enum DeliveryStatus {\n    SUCCESS,\n    RECEIVER_FAILURE\n  }\n\n  enum RefundStatus {\n    REFUND_SENT,\n    REFUND_FAIL,\n    CROSS_CHAIN_REFUND_SENT,\n    CROSS_CHAIN_REFUND_FAIL_PROVIDER_NOT_SUPPORTED,\n    CROSS_CHAIN_REFUND_FAIL_NOT_ENOUGH,\n    NO_REFUND_REQUESTED\n  }\n\n  /**\n   * @custom:member recipientContract - The target contract address\n   * @custom:member sourceChain - The chain which this delivery was requested from (in wormhole\n   *     ChainID format)\n   * @custom:member sequence - The wormhole sequence number of the delivery VAA on the source chain\n   *     corresponding to this delivery request\n   * @custom:member deliveryVaaHash - The hash of the delivery VAA corresponding to this delivery\n   *     request\n   * @custom:member gasUsed - The amount of gas that was used to call your target contract\n   * @custom:member status:\n   *   - RECEIVER_FAILURE, if the target contract reverts\n   *   - SUCCESS, if the target contract doesn't revert\n   * @custom:member additionalStatusInfo:\n   *   - If status is SUCCESS, then this is empty.\n   *   - If status is RECEIVER_FAILURE, this is `RETURNDATA_TRUNCATION_THRESHOLD` bytes of the\n   *       return data (i.e. potentially truncated revert reason information).\n   * @custom:member refundStatus - Result of the refund. REFUND_SUCCESS or REFUND_FAIL are for\n   *     refunds where targetChain=refundChain; the others are for targetChain!=refundChain,\n   *     where a cross chain refund is necessary, or if the default code path is used where no refund is requested (NO_REFUND_REQUESTED)\n   * @custom:member overridesInfo:\n   *   - If not an override: empty bytes array\n   *   - Otherwise: An encoded `DeliveryOverride`\n   */\n  event Delivery(\n    address indexed recipientContract,\n    uint16 indexed sourceChain,\n    uint64 indexed sequence,\n    bytes32 deliveryVaaHash,\n    DeliveryStatus status,\n    uint256 gasUsed,\n    RefundStatus refundStatus,\n    bytes additionalStatusInfo,\n    bytes overridesInfo\n  );\n\n  /**\n   * @notice The delivery provider calls `deliver` to relay messages as described by one delivery instruction\n   *\n   * The delivery provider must pass in the specified (by VaaKeys[]) signed wormhole messages (VAAs) from the source chain\n   * as well as the signed wormhole message with the delivery instructions (the delivery VAA)\n   *\n   * The messages will be relayed to the target address (with the specified gas limit and receiver value) iff the following checks are met:\n   * - the delivery VAA has a valid signature\n   * - the delivery VAA's emitter is one of these WormholeRelayer contracts\n   * - the delivery provider passed in at least enough of this chain's currency as msg.value (enough meaning the maximum possible refund)\n   * - the instruction's target chain is this chain\n   * - the relayed signed VAAs match the descriptions in container.messages (the VAA hashes match, or the emitter address, sequence number pair matches, depending on the description given)\n   *\n   * @param encodedVMs - An array of signed wormhole messages (all from the same source chain\n   *     transaction)\n   * @param encodedDeliveryVAA - Signed wormhole message from the source chain's WormholeRelayer\n   *     contract with payload being the encoded delivery instruction container\n   * @param relayerRefundAddress - The address to which any refunds to the delivery provider\n   *     should be sent\n   * @param deliveryOverrides - Optional overrides field which must be either an empty bytes array or\n   *     an encoded DeliveryOverride struct\n   */\n  function deliver(\n    bytes[] memory encodedVMs,\n    bytes memory encodedDeliveryVAA,\n    address payable relayerRefundAddress,\n    bytes memory deliveryOverrides\n  ) external payable;\n}\n\ninterface IWormholeRelayer is IWormholeRelayerDelivery, IWormholeRelayerSend {}\n\n/*\n *  Errors thrown by IWormholeRelayer contract\n */\n\n// Bound chosen by the following formula: `memoryWord * 4 + selectorSize`.\n// This means that an error identifier plus four fixed size arguments should be available to developers.\n// In the case of a `require` revert with error message, this should provide 2 memory word's worth of data.\nuint256 constant RETURNDATA_TRUNCATION_THRESHOLD = 132;\n\n//When msg.value was not equal to `delivery provider's quoted delivery price` + `paymentForExtraReceiverValue`\nerror InvalidMsgValue(uint256 msgValue, uint256 totalFee);\n\nerror RequestedGasLimitTooLow();\n\nerror DeliveryProviderDoesNotSupportTargetChain(\n  address relayer,\n  uint16 chainId\n);\nerror DeliveryProviderCannotReceivePayment();\nerror DeliveryProviderDoesNotSupportMessageKeyType(uint8 keyType);\n\n//When calling `delivery()` a second time even though a delivery is already in progress\nerror ReentrantDelivery(address msgSender, address lockedBy);\n\nerror InvalidPayloadId(uint8 parsed, uint8 expected);\nerror InvalidPayloadLength(uint256 received, uint256 expected);\nerror InvalidVaaKeyType(uint8 parsed);\nerror TooManyMessageKeys(uint256 numMessageKeys);\n\nerror InvalidDeliveryVaa(string reason);\n//When the delivery VAA (signed wormhole message with delivery instructions) was not emitted by the\n//  registered WormholeRelayer contract\nerror InvalidEmitter(bytes32 emitter, bytes32 registered, uint16 chainId);\nerror MessageKeysLengthDoesNotMatchMessagesLength(uint256 keys, uint256 vaas);\nerror VaaKeysDoNotMatchVaas(uint8 index);\n//When someone tries to call an external function of the WormholeRelayer that is only intended to be\n//  called by the WormholeRelayer itself (to allow retroactive reverts for atomicity)\nerror RequesterNotWormholeRelayer();\n\n//When trying to relay a `DeliveryInstruction` to any other chain but the one it was specified for\nerror TargetChainIsNotThisChain(uint16 targetChain);\n//When a `DeliveryOverride` contains a gas limit that's less than the original\nerror InvalidOverrideGasLimit();\n//When a `DeliveryOverride` contains a receiver value that's less than the original\nerror InvalidOverrideReceiverValue();\n//When a `DeliveryOverride` contains a 'refund per unit of gas unused' that's less than the original\nerror InvalidOverrideRefundPerGasUnused();\n\n//When the delivery provider doesn't pass in sufficient funds (i.e. msg.value does not cover the\n// maximum possible refund to the user)\nerror InsufficientRelayerFunds(uint256 msgValue, uint256 minimum);\n\n//When a bytes32 field can't be converted into a 20 byte EVM address, because the 12 padding bytes\n//  are non-zero (see Utils.sol)\n//error NotAnEvmAddress(bytes32);\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"src/WormholeRelayer/Base.sol": {
				"Base": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/WormholeRelayer/Base.sol\":\"Base\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/Utils.sol\":{\"keccak256\":\"0x1d421687ee6a489fef6a77c5a3655108adda57b60ac9d3d311824ab1b0a8ecad\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://17400d873b2a88b3f8566cdbd32bf2840f8d849c1226744cd7aa834af0b2ffd1\",\"dweb:/ipfs/QmTYUPYJZrbkaUUEGc2mCxNrA3Q4Zv7TTXWfvo79nSFM5c\"]},\"src/WormholeRelayer/Base.sol\":{\"keccak256\":\"0x4f7d7f3d64d6a5e08bec73bc652c4ad1e78667eb38a9c74880b12c4abc3ba36e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://6999e6eb2a70e3cb4b997c2eaa1faf5144ed2963e264989c54b4b788cba39703\",\"dweb:/ipfs/QmNnLJGABapzHqhBQB7sMZXa663XYwnfB1ZYihWQQw3kHf\"]},\"src/interfaces/IWormhole.sol\":{\"keccak256\":\"0xb8dafb6b01a693ea79536abc1ca055aff2f72e918329403ac261e6429db12206\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://c52009a321ee86ce2a222f7ebd560a93210d7990525053895af5353323a77099\",\"dweb:/ipfs/QmT3gE2nKsYiSuUg2EeiHoHN6BRWks549Yjej1qdvipjCT\"]},\"src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x9d5560e3673b9e920f9865454fd88138f02d3a68097c20f30d50304398d102e3\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://f0952a2e8d352254b6abcc320a0ed87bf12e990b804462d32471c429f141a187\",\"dweb:/ipfs/QmWD8nqYGF1Y26zTvfAzAZFvYiEW8eTdkNZcYMy5KqPXpZ\"]},\"src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0x4a73a6cf88f501da70652d3b550ad599a5b75e028e82fb3315729882d97add9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://4552bc84e8c7f92c7b4eddd71ab7fe5273b265c90d1cbf5b901fa48dcbc383ec\",\"dweb:/ipfs/QmemXDq6UTMmfsg8vheB2NvUvXTgbXX9mYcxPM3z9MLqUG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 68,
								"contract": "src/WormholeRelayer/Base.sol:Base",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 72,
								"contract": "src/WormholeRelayer/Base.sol:Base",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint16,t_bytes32)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				}
			},
			"src/WormholeRelayer/CCTPBase.sol": {
				"CCTPBase": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/WormholeRelayer/CCTPBase.sol\":\"CCTPBase\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/Utils.sol\":{\"keccak256\":\"0x1d421687ee6a489fef6a77c5a3655108adda57b60ac9d3d311824ab1b0a8ecad\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://17400d873b2a88b3f8566cdbd32bf2840f8d849c1226744cd7aa834af0b2ffd1\",\"dweb:/ipfs/QmTYUPYJZrbkaUUEGc2mCxNrA3Q4Zv7TTXWfvo79nSFM5c\"]},\"src/WormholeRelayer/Base.sol\":{\"keccak256\":\"0x4f7d7f3d64d6a5e08bec73bc652c4ad1e78667eb38a9c74880b12c4abc3ba36e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://6999e6eb2a70e3cb4b997c2eaa1faf5144ed2963e264989c54b4b788cba39703\",\"dweb:/ipfs/QmNnLJGABapzHqhBQB7sMZXa663XYwnfB1ZYihWQQw3kHf\"]},\"src/WormholeRelayer/CCTPBase.sol\":{\"keccak256\":\"0xffb429d1bd744930556f77029fb066478ab333a50f3df4115ec33040b2eabec3\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://33125d0a8dee5807ce8e073cb6a62882d2a0bb5beaf891888252599575be40c5\",\"dweb:/ipfs/QmcZZX5NGAsjc36nF5Q7QM6297UrYmjXqqVfV39Bj5LQXN\"]},\"src/interfaces/IWormhole.sol\":{\"keccak256\":\"0xb8dafb6b01a693ea79536abc1ca055aff2f72e918329403ac261e6429db12206\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://c52009a321ee86ce2a222f7ebd560a93210d7990525053895af5353323a77099\",\"dweb:/ipfs/QmT3gE2nKsYiSuUg2EeiHoHN6BRWks549Yjej1qdvipjCT\"]},\"src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x9d5560e3673b9e920f9865454fd88138f02d3a68097c20f30d50304398d102e3\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://f0952a2e8d352254b6abcc320a0ed87bf12e990b804462d32471c429f141a187\",\"dweb:/ipfs/QmWD8nqYGF1Y26zTvfAzAZFvYiEW8eTdkNZcYMy5KqPXpZ\"]},\"src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0x4a73a6cf88f501da70652d3b550ad599a5b75e028e82fb3315729882d97add9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://4552bc84e8c7f92c7b4eddd71ab7fe5273b265c90d1cbf5b901fa48dcbc383ec\",\"dweb:/ipfs/QmemXDq6UTMmfsg8vheB2NvUvXTgbXX9mYcxPM3z9MLqUG\"]},\"src/interfaces/cctp/IMessageTransmitter.sol\":{\"keccak256\":\"0x8736b2a5ff5324bc690e1878eeda9d7e7556520c6d76ce9a4f4fc7c48b57574f\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://afd602e25284682e26d3ab48820aeae6f8f836e7017d3924caa628a54356f27c\",\"dweb:/ipfs/QmW9P5jqggVW9hbaXx8xxKjvFY1q5yCNCiUYopMMxSBk7n\"]},\"src/interfaces/cctp/ITokenMessenger.sol\":{\"keccak256\":\"0x979aaeba90813930d383f90c6e0a793e043d46ac8f802cc0d1008699194194e9\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://de48971bbac71f0396d3b0e3885f9fc72d33dded2d10b3993588450ab9de85ce\",\"dweb:/ipfs/QmcUHyg5wSMY5cHFCenTu99QNT4W7UJB85B928iVzkwnds\"]},\"src/interfaces/cctp/ITokenMinter.sol\":{\"keccak256\":\"0x015329fe60852bdfcf92f4dff542dffda525cbd7d74626709f0f8c7347a8d181\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://f62c0c2d25333d745ecdc288ee3f1c69e60d684c963c04f5d8bb1be110ef5189\",\"dweb:/ipfs/QmdZRnUKDXzD6xP1b91YJyYQvdgH7sFfkro8AQyFVXXzhQ\"]},\"src/interfaces/cctp/shared/IOwnable2Step.sol\":{\"keccak256\":\"0x3a28d75b5fc6308f2669672c0758447d081627902ce516faebc4774ded78d76e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://dca33ea2f95ae7752a315283b6df7d474f99b656fe5b2859fe6fea38328f196b\",\"dweb:/ipfs/QmevQThqioPtJ7E95z7hLdFQaPUUmdSq11Dm3gE9vwJa4x\"]},\"src/interfaces/cctp/shared/IPausable.sol\":{\"keccak256\":\"0xf877d8d6754f0a931dbabf9ae1a2ab0ca6bf78bb71f36304c5f100f8819b2d16\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://65d9141d8a4c1fc1ac5f3a4fdad32dfc1345fb2db148b7b653f1585e0f24f1fd\",\"dweb:/ipfs/QmZHJwn5NCseNHjY8b8FU3PzWDFpVFhvxyrP9b75GfDNkM\"]},\"src/interfaces/token/IERC20.sol\":{\"keccak256\":\"0xe75b807a38a1f24481fcc5783ec1c2cee288a6bf4475f4cdc1363b408fb34f56\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://dfa2f3989344e0196482a471af69b582123a9671a088386c77d63cf3ab567fcc\",\"dweb:/ipfs/QmPAxkdauaxByqPbsXqLtNMikRm45bdA1jnRRuwBBcCXbP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 68,
								"contract": "src/WormholeRelayer/CCTPBase.sol:CCTPBase",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 72,
								"contract": "src/WormholeRelayer/CCTPBase.sol:CCTPBase",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint16,t_bytes32)"
							},
							{
								"astId": 182,
								"contract": "src/WormholeRelayer/CCTPBase.sol:CCTPBase",
								"label": "cctpConfigurationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				},
				"CCTPMessageLib": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/WormholeRelayer/CCTPBase.sol\":229:824  library CCTPMessageLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/WormholeRelayer/CCTPBase.sol\":229:824  library CCTPMessageLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122033f5f62fb1b0f711d4489bf118b769dbf1656a5d1076cfe57fef5dd2a76473ce64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122033f5f62fb1b0f711d4489bf118b769dbf1656a5d1076cfe57fef5dd2a76473ce64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER CREATE2 0xF6 0x2F 0xB1 0xB0 0xF7 GT 0xD4 BASEFEE SWAP12 CALL XOR 0xB7 PUSH10 0xDBF1656A5D1076CFE57F 0xEF TSTORE 0xD2 0xA7 PUSH5 0x73CE64736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "229:595:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122033f5f62fb1b0f711d4489bf118b769dbf1656a5d1076cfe57fef5dd2a76473ce64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER CREATE2 0xF6 0x2F 0xB1 0xB0 0xF7 GT 0xD4 BASEFEE SWAP12 CALL XOR 0xB7 PUSH10 0xDBF1656A5D1076CFE57F 0xEF TSTORE 0xD2 0xA7 PUSH5 0x73CE64736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "229:595:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 229,
									"end": 824,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 229,
									"end": 824,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 229,
									"end": 824,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 229,
									"end": 824,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 229,
									"end": 824,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 229,
									"end": 824,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 229,
									"end": 824,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 229,
									"end": 824,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 229,
									"end": 824,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 229,
									"end": 824,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 229,
									"end": 824,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 229,
									"end": 824,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 229,
									"end": 824,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 229,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 229,
									"end": 824,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 229,
									"end": 824,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 229,
									"end": 824,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 229,
									"end": 824,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 229,
									"end": 824,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 229,
									"end": 824,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 229,
									"end": 824,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 229,
									"end": 824,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 229,
									"end": 824,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 229,
									"end": 824,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 229,
									"end": 824,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 229,
									"end": 824,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 229,
									"end": 824,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 229,
									"end": 824,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 229,
									"end": 824,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 229,
									"end": 824,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 229,
									"end": 824,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 229,
									"end": 824,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 229,
									"end": 824,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 229,
									"end": 824,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 229,
									"end": 824,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122033f5f62fb1b0f711d4489bf118b769dbf1656a5d1076cfe57fef5dd2a76473ce64736f6c634300081a0033",
									".code": [
										{
											"begin": 229,
											"end": 824,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 229,
											"end": 824,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 229,
											"end": 824,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 229,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 229,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 229,
											"end": 824,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 229,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 229,
											"end": 824,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 229,
											"end": 824,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"src/Utils.sol",
								"src/WormholeRelayer/Base.sol",
								"src/WormholeRelayer/CCTPBase.sol",
								"src/interfaces/IWormhole.sol",
								"src/interfaces/IWormholeReceiver.sol",
								"src/interfaces/IWormholeRelayer.sol",
								"src/interfaces/cctp/IMessageTransmitter.sol",
								"src/interfaces/cctp/ITokenMessenger.sol",
								"src/interfaces/cctp/ITokenMinter.sol",
								"src/interfaces/cctp/shared/IOwnable2Step.sol",
								"src/interfaces/cctp/shared/IPausable.sol",
								"src/interfaces/token/IERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/WormholeRelayer/CCTPBase.sol\":\"CCTPMessageLib\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/Utils.sol\":{\"keccak256\":\"0x1d421687ee6a489fef6a77c5a3655108adda57b60ac9d3d311824ab1b0a8ecad\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://17400d873b2a88b3f8566cdbd32bf2840f8d849c1226744cd7aa834af0b2ffd1\",\"dweb:/ipfs/QmTYUPYJZrbkaUUEGc2mCxNrA3Q4Zv7TTXWfvo79nSFM5c\"]},\"src/WormholeRelayer/Base.sol\":{\"keccak256\":\"0x4f7d7f3d64d6a5e08bec73bc652c4ad1e78667eb38a9c74880b12c4abc3ba36e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://6999e6eb2a70e3cb4b997c2eaa1faf5144ed2963e264989c54b4b788cba39703\",\"dweb:/ipfs/QmNnLJGABapzHqhBQB7sMZXa663XYwnfB1ZYihWQQw3kHf\"]},\"src/WormholeRelayer/CCTPBase.sol\":{\"keccak256\":\"0xffb429d1bd744930556f77029fb066478ab333a50f3df4115ec33040b2eabec3\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://33125d0a8dee5807ce8e073cb6a62882d2a0bb5beaf891888252599575be40c5\",\"dweb:/ipfs/QmcZZX5NGAsjc36nF5Q7QM6297UrYmjXqqVfV39Bj5LQXN\"]},\"src/interfaces/IWormhole.sol\":{\"keccak256\":\"0xb8dafb6b01a693ea79536abc1ca055aff2f72e918329403ac261e6429db12206\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://c52009a321ee86ce2a222f7ebd560a93210d7990525053895af5353323a77099\",\"dweb:/ipfs/QmT3gE2nKsYiSuUg2EeiHoHN6BRWks549Yjej1qdvipjCT\"]},\"src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x9d5560e3673b9e920f9865454fd88138f02d3a68097c20f30d50304398d102e3\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://f0952a2e8d352254b6abcc320a0ed87bf12e990b804462d32471c429f141a187\",\"dweb:/ipfs/QmWD8nqYGF1Y26zTvfAzAZFvYiEW8eTdkNZcYMy5KqPXpZ\"]},\"src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0x4a73a6cf88f501da70652d3b550ad599a5b75e028e82fb3315729882d97add9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://4552bc84e8c7f92c7b4eddd71ab7fe5273b265c90d1cbf5b901fa48dcbc383ec\",\"dweb:/ipfs/QmemXDq6UTMmfsg8vheB2NvUvXTgbXX9mYcxPM3z9MLqUG\"]},\"src/interfaces/cctp/IMessageTransmitter.sol\":{\"keccak256\":\"0x8736b2a5ff5324bc690e1878eeda9d7e7556520c6d76ce9a4f4fc7c48b57574f\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://afd602e25284682e26d3ab48820aeae6f8f836e7017d3924caa628a54356f27c\",\"dweb:/ipfs/QmW9P5jqggVW9hbaXx8xxKjvFY1q5yCNCiUYopMMxSBk7n\"]},\"src/interfaces/cctp/ITokenMessenger.sol\":{\"keccak256\":\"0x979aaeba90813930d383f90c6e0a793e043d46ac8f802cc0d1008699194194e9\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://de48971bbac71f0396d3b0e3885f9fc72d33dded2d10b3993588450ab9de85ce\",\"dweb:/ipfs/QmcUHyg5wSMY5cHFCenTu99QNT4W7UJB85B928iVzkwnds\"]},\"src/interfaces/cctp/ITokenMinter.sol\":{\"keccak256\":\"0x015329fe60852bdfcf92f4dff542dffda525cbd7d74626709f0f8c7347a8d181\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://f62c0c2d25333d745ecdc288ee3f1c69e60d684c963c04f5d8bb1be110ef5189\",\"dweb:/ipfs/QmdZRnUKDXzD6xP1b91YJyYQvdgH7sFfkro8AQyFVXXzhQ\"]},\"src/interfaces/cctp/shared/IOwnable2Step.sol\":{\"keccak256\":\"0x3a28d75b5fc6308f2669672c0758447d081627902ce516faebc4774ded78d76e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://dca33ea2f95ae7752a315283b6df7d474f99b656fe5b2859fe6fea38328f196b\",\"dweb:/ipfs/QmevQThqioPtJ7E95z7hLdFQaPUUmdSq11Dm3gE9vwJa4x\"]},\"src/interfaces/cctp/shared/IPausable.sol\":{\"keccak256\":\"0xf877d8d6754f0a931dbabf9ae1a2ab0ca6bf78bb71f36304c5f100f8819b2d16\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://65d9141d8a4c1fc1ac5f3a4fdad32dfc1345fb2db148b7b653f1585e0f24f1fd\",\"dweb:/ipfs/QmZHJwn5NCseNHjY8b8FU3PzWDFpVFhvxyrP9b75GfDNkM\"]},\"src/interfaces/token/IERC20.sol\":{\"keccak256\":\"0xe75b807a38a1f24481fcc5783ec1c2cee288a6bf4475f4cdc1363b408fb34f56\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://dfa2f3989344e0196482a471af69b582123a9671a088386c77d63cf3ab567fcc\",\"dweb:/ipfs/QmPAxkdauaxByqPbsXqLtNMikRm45bdA1jnRRuwBBcCXbP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"CCTPReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "bytes[]",
									"name": "additionalMessages",
									"type": "bytes[]"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								},
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "receiveWormholeMessages",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": "529dca32",
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"additionalMessages\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"receiveWormholeMessages\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/WormholeRelayer/CCTPBase.sol\":\"CCTPReceiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/Utils.sol\":{\"keccak256\":\"0x1d421687ee6a489fef6a77c5a3655108adda57b60ac9d3d311824ab1b0a8ecad\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://17400d873b2a88b3f8566cdbd32bf2840f8d849c1226744cd7aa834af0b2ffd1\",\"dweb:/ipfs/QmTYUPYJZrbkaUUEGc2mCxNrA3Q4Zv7TTXWfvo79nSFM5c\"]},\"src/WormholeRelayer/Base.sol\":{\"keccak256\":\"0x4f7d7f3d64d6a5e08bec73bc652c4ad1e78667eb38a9c74880b12c4abc3ba36e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://6999e6eb2a70e3cb4b997c2eaa1faf5144ed2963e264989c54b4b788cba39703\",\"dweb:/ipfs/QmNnLJGABapzHqhBQB7sMZXa663XYwnfB1ZYihWQQw3kHf\"]},\"src/WormholeRelayer/CCTPBase.sol\":{\"keccak256\":\"0xffb429d1bd744930556f77029fb066478ab333a50f3df4115ec33040b2eabec3\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://33125d0a8dee5807ce8e073cb6a62882d2a0bb5beaf891888252599575be40c5\",\"dweb:/ipfs/QmcZZX5NGAsjc36nF5Q7QM6297UrYmjXqqVfV39Bj5LQXN\"]},\"src/interfaces/IWormhole.sol\":{\"keccak256\":\"0xb8dafb6b01a693ea79536abc1ca055aff2f72e918329403ac261e6429db12206\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://c52009a321ee86ce2a222f7ebd560a93210d7990525053895af5353323a77099\",\"dweb:/ipfs/QmT3gE2nKsYiSuUg2EeiHoHN6BRWks549Yjej1qdvipjCT\"]},\"src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x9d5560e3673b9e920f9865454fd88138f02d3a68097c20f30d50304398d102e3\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://f0952a2e8d352254b6abcc320a0ed87bf12e990b804462d32471c429f141a187\",\"dweb:/ipfs/QmWD8nqYGF1Y26zTvfAzAZFvYiEW8eTdkNZcYMy5KqPXpZ\"]},\"src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0x4a73a6cf88f501da70652d3b550ad599a5b75e028e82fb3315729882d97add9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://4552bc84e8c7f92c7b4eddd71ab7fe5273b265c90d1cbf5b901fa48dcbc383ec\",\"dweb:/ipfs/QmemXDq6UTMmfsg8vheB2NvUvXTgbXX9mYcxPM3z9MLqUG\"]},\"src/interfaces/cctp/IMessageTransmitter.sol\":{\"keccak256\":\"0x8736b2a5ff5324bc690e1878eeda9d7e7556520c6d76ce9a4f4fc7c48b57574f\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://afd602e25284682e26d3ab48820aeae6f8f836e7017d3924caa628a54356f27c\",\"dweb:/ipfs/QmW9P5jqggVW9hbaXx8xxKjvFY1q5yCNCiUYopMMxSBk7n\"]},\"src/interfaces/cctp/ITokenMessenger.sol\":{\"keccak256\":\"0x979aaeba90813930d383f90c6e0a793e043d46ac8f802cc0d1008699194194e9\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://de48971bbac71f0396d3b0e3885f9fc72d33dded2d10b3993588450ab9de85ce\",\"dweb:/ipfs/QmcUHyg5wSMY5cHFCenTu99QNT4W7UJB85B928iVzkwnds\"]},\"src/interfaces/cctp/ITokenMinter.sol\":{\"keccak256\":\"0x015329fe60852bdfcf92f4dff542dffda525cbd7d74626709f0f8c7347a8d181\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://f62c0c2d25333d745ecdc288ee3f1c69e60d684c963c04f5d8bb1be110ef5189\",\"dweb:/ipfs/QmdZRnUKDXzD6xP1b91YJyYQvdgH7sFfkro8AQyFVXXzhQ\"]},\"src/interfaces/cctp/shared/IOwnable2Step.sol\":{\"keccak256\":\"0x3a28d75b5fc6308f2669672c0758447d081627902ce516faebc4774ded78d76e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://dca33ea2f95ae7752a315283b6df7d474f99b656fe5b2859fe6fea38328f196b\",\"dweb:/ipfs/QmevQThqioPtJ7E95z7hLdFQaPUUmdSq11Dm3gE9vwJa4x\"]},\"src/interfaces/cctp/shared/IPausable.sol\":{\"keccak256\":\"0xf877d8d6754f0a931dbabf9ae1a2ab0ca6bf78bb71f36304c5f100f8819b2d16\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://65d9141d8a4c1fc1ac5f3a4fdad32dfc1345fb2db148b7b653f1585e0f24f1fd\",\"dweb:/ipfs/QmZHJwn5NCseNHjY8b8FU3PzWDFpVFhvxyrP9b75GfDNkM\"]},\"src/interfaces/token/IERC20.sol\":{\"keccak256\":\"0xe75b807a38a1f24481fcc5783ec1c2cee288a6bf4475f4cdc1363b408fb34f56\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://dfa2f3989344e0196482a471af69b582123a9671a088386c77d63cf3ab567fcc\",\"dweb:/ipfs/QmPAxkdauaxByqPbsXqLtNMikRm45bdA1jnRRuwBBcCXbP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 68,
								"contract": "src/WormholeRelayer/CCTPBase.sol:CCTPReceiver",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 72,
								"contract": "src/WormholeRelayer/CCTPBase.sol:CCTPReceiver",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint16,t_bytes32)"
							},
							{
								"astId": 182,
								"contract": "src/WormholeRelayer/CCTPBase.sol:CCTPReceiver",
								"label": "cctpConfigurationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				},
				"CCTPSender": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"name": "chainIdToCCTPDomain",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "chain",
									"type": "uint16"
								},
								{
									"internalType": "uint32",
									"name": "cctpDomain",
									"type": "uint32"
								}
							],
							"name": "setCCTPDomain",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"chainIdToCCTPDomain(uint16)": "3a57cd63",
							"setCCTPDomain(uint16,uint32)": "c6a4fd1c",
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"chainIdToCCTPDomain\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chain\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"cctpDomain\",\"type\":\"uint32\"}],\"name\":\"setCCTPDomain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setCCTPDomain(uint16,uint32)\":{\"notice\":\"Sets the CCTP Domain corresponding to chain 'chain' to be 'cctpDomain' So that transfers of USDC to chain 'chain' use the target CCTP domain 'cctpDomain' This action can only be performed by 'cctpConfigurationOwner', who is set to be the deployer Currently, cctp domains are: Ethereum: Wormhole chain id 2, cctp domain 0 Avalanche: Wormhole chain id 6, cctp domain 1 Optimism: Wormhole chain id 24, cctp domain 2 Arbitrum: Wormhole chain id 23, cctp domain 3 Base: Wormhole chain id 30, cctp domain 6 These can be set via: setCCTPDomain(2, 0); setCCTPDomain(6, 1); setCCTPDomain(24, 2); setCCTPDomain(23, 3); setCCTPDomain(30, 6);\"},\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/WormholeRelayer/CCTPBase.sol\":\"CCTPSender\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/Utils.sol\":{\"keccak256\":\"0x1d421687ee6a489fef6a77c5a3655108adda57b60ac9d3d311824ab1b0a8ecad\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://17400d873b2a88b3f8566cdbd32bf2840f8d849c1226744cd7aa834af0b2ffd1\",\"dweb:/ipfs/QmTYUPYJZrbkaUUEGc2mCxNrA3Q4Zv7TTXWfvo79nSFM5c\"]},\"src/WormholeRelayer/Base.sol\":{\"keccak256\":\"0x4f7d7f3d64d6a5e08bec73bc652c4ad1e78667eb38a9c74880b12c4abc3ba36e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://6999e6eb2a70e3cb4b997c2eaa1faf5144ed2963e264989c54b4b788cba39703\",\"dweb:/ipfs/QmNnLJGABapzHqhBQB7sMZXa663XYwnfB1ZYihWQQw3kHf\"]},\"src/WormholeRelayer/CCTPBase.sol\":{\"keccak256\":\"0xffb429d1bd744930556f77029fb066478ab333a50f3df4115ec33040b2eabec3\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://33125d0a8dee5807ce8e073cb6a62882d2a0bb5beaf891888252599575be40c5\",\"dweb:/ipfs/QmcZZX5NGAsjc36nF5Q7QM6297UrYmjXqqVfV39Bj5LQXN\"]},\"src/interfaces/IWormhole.sol\":{\"keccak256\":\"0xb8dafb6b01a693ea79536abc1ca055aff2f72e918329403ac261e6429db12206\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://c52009a321ee86ce2a222f7ebd560a93210d7990525053895af5353323a77099\",\"dweb:/ipfs/QmT3gE2nKsYiSuUg2EeiHoHN6BRWks549Yjej1qdvipjCT\"]},\"src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x9d5560e3673b9e920f9865454fd88138f02d3a68097c20f30d50304398d102e3\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://f0952a2e8d352254b6abcc320a0ed87bf12e990b804462d32471c429f141a187\",\"dweb:/ipfs/QmWD8nqYGF1Y26zTvfAzAZFvYiEW8eTdkNZcYMy5KqPXpZ\"]},\"src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0x4a73a6cf88f501da70652d3b550ad599a5b75e028e82fb3315729882d97add9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://4552bc84e8c7f92c7b4eddd71ab7fe5273b265c90d1cbf5b901fa48dcbc383ec\",\"dweb:/ipfs/QmemXDq6UTMmfsg8vheB2NvUvXTgbXX9mYcxPM3z9MLqUG\"]},\"src/interfaces/cctp/IMessageTransmitter.sol\":{\"keccak256\":\"0x8736b2a5ff5324bc690e1878eeda9d7e7556520c6d76ce9a4f4fc7c48b57574f\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://afd602e25284682e26d3ab48820aeae6f8f836e7017d3924caa628a54356f27c\",\"dweb:/ipfs/QmW9P5jqggVW9hbaXx8xxKjvFY1q5yCNCiUYopMMxSBk7n\"]},\"src/interfaces/cctp/ITokenMessenger.sol\":{\"keccak256\":\"0x979aaeba90813930d383f90c6e0a793e043d46ac8f802cc0d1008699194194e9\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://de48971bbac71f0396d3b0e3885f9fc72d33dded2d10b3993588450ab9de85ce\",\"dweb:/ipfs/QmcUHyg5wSMY5cHFCenTu99QNT4W7UJB85B928iVzkwnds\"]},\"src/interfaces/cctp/ITokenMinter.sol\":{\"keccak256\":\"0x015329fe60852bdfcf92f4dff542dffda525cbd7d74626709f0f8c7347a8d181\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://f62c0c2d25333d745ecdc288ee3f1c69e60d684c963c04f5d8bb1be110ef5189\",\"dweb:/ipfs/QmdZRnUKDXzD6xP1b91YJyYQvdgH7sFfkro8AQyFVXXzhQ\"]},\"src/interfaces/cctp/shared/IOwnable2Step.sol\":{\"keccak256\":\"0x3a28d75b5fc6308f2669672c0758447d081627902ce516faebc4774ded78d76e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://dca33ea2f95ae7752a315283b6df7d474f99b656fe5b2859fe6fea38328f196b\",\"dweb:/ipfs/QmevQThqioPtJ7E95z7hLdFQaPUUmdSq11Dm3gE9vwJa4x\"]},\"src/interfaces/cctp/shared/IPausable.sol\":{\"keccak256\":\"0xf877d8d6754f0a931dbabf9ae1a2ab0ca6bf78bb71f36304c5f100f8819b2d16\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://65d9141d8a4c1fc1ac5f3a4fdad32dfc1345fb2db148b7b653f1585e0f24f1fd\",\"dweb:/ipfs/QmZHJwn5NCseNHjY8b8FU3PzWDFpVFhvxyrP9b75GfDNkM\"]},\"src/interfaces/token/IERC20.sol\":{\"keccak256\":\"0xe75b807a38a1f24481fcc5783ec1c2cee288a6bf4475f4cdc1363b408fb34f56\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://dfa2f3989344e0196482a471af69b582123a9671a088386c77d63cf3ab567fcc\",\"dweb:/ipfs/QmPAxkdauaxByqPbsXqLtNMikRm45bdA1jnRRuwBBcCXbP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 68,
								"contract": "src/WormholeRelayer/CCTPBase.sol:CCTPSender",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 72,
								"contract": "src/WormholeRelayer/CCTPBase.sol:CCTPSender",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint16,t_bytes32)"
							},
							{
								"astId": 182,
								"contract": "src/WormholeRelayer/CCTPBase.sol:CCTPSender",
								"label": "cctpConfigurationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 233,
								"contract": "src/WormholeRelayer/CCTPBase.sol:CCTPSender",
								"label": "chainIdToCCTPDomain",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint16,t_uint32)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_mapping(t_uint16,t_uint32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => uint32)",
								"numberOfBytes": "32",
								"value": "t_uint32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setCCTPDomain(uint16,uint32)": {
								"notice": "Sets the CCTP Domain corresponding to chain 'chain' to be 'cctpDomain' So that transfers of USDC to chain 'chain' use the target CCTP domain 'cctpDomain' This action can only be performed by 'cctpConfigurationOwner', who is set to be the deployer Currently, cctp domains are: Ethereum: Wormhole chain id 2, cctp domain 0 Avalanche: Wormhole chain id 6, cctp domain 1 Optimism: Wormhole chain id 24, cctp domain 2 Arbitrum: Wormhole chain id 23, cctp domain 3 Base: Wormhole chain id 30, cctp domain 6 These can be set via: setCCTPDomain(2, 0); setCCTPDomain(6, 1); setCCTPDomain(24, 2); setCCTPDomain(23, 3); setCCTPDomain(30, 6);"
							},
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				}
			},
			"src/interfaces/IWormhole.sol": {
				"IWormhole": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldContract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newContract",
									"type": "address"
								}
							],
							"name": "ContractUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "index",
									"type": "uint32"
								}
							],
							"name": "GuardianSetAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "LogMessagePublished",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "chainId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "evmChainId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentGuardianSetIndex",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "index",
									"type": "uint32"
								}
							],
							"name": "getGuardianSet",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address[]",
											"name": "keys",
											"type": "address[]"
										},
										{
											"internalType": "uint32",
											"name": "expirationTime",
											"type": "uint32"
										}
									],
									"internalType": "struct IWormhole.GuardianSet",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getGuardianSetExpiry",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								}
							],
							"name": "governanceActionIsConsumed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceChainId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceContract",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isFork",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "impl",
									"type": "address"
								}
							],
							"name": "isInitialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "messageFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "emitter",
									"type": "address"
								}
							],
							"name": "nextSequence",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVM",
									"type": "bytes"
								}
							],
							"name": "parseAndVerifyVM",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "version",
											"type": "uint8"
										},
										{
											"internalType": "uint32",
											"name": "timestamp",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "nonce",
											"type": "uint32"
										},
										{
											"internalType": "uint16",
											"name": "emitterChainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										},
										{
											"internalType": "uint8",
											"name": "consistencyLevel",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "payload",
											"type": "bytes"
										},
										{
											"internalType": "uint32",
											"name": "guardianSetIndex",
											"type": "uint32"
										},
										{
											"components": [
												{
													"internalType": "bytes32",
													"name": "r",
													"type": "bytes32"
												},
												{
													"internalType": "bytes32",
													"name": "s",
													"type": "bytes32"
												},
												{
													"internalType": "uint8",
													"name": "v",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "guardianIndex",
													"type": "uint8"
												}
											],
											"internalType": "struct IWormhole.Signature[]",
											"name": "signatures",
											"type": "tuple[]"
										},
										{
											"internalType": "bytes32",
											"name": "hash",
											"type": "bytes32"
										}
									],
									"internalType": "struct IWormhole.VM",
									"name": "vm",
									"type": "tuple"
								},
								{
									"internalType": "bool",
									"name": "valid",
									"type": "bool"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedUpgrade",
									"type": "bytes"
								}
							],
							"name": "parseContractUpgrade",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint16",
											"name": "chain",
											"type": "uint16"
										},
										{
											"internalType": "address",
											"name": "newContract",
											"type": "address"
										}
									],
									"internalType": "struct IWormhole.ContractUpgrade",
									"name": "cu",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedUpgrade",
									"type": "bytes"
								}
							],
							"name": "parseGuardianSetUpgrade",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint16",
											"name": "chain",
											"type": "uint16"
										},
										{
											"components": [
												{
													"internalType": "address[]",
													"name": "keys",
													"type": "address[]"
												},
												{
													"internalType": "uint32",
													"name": "expirationTime",
													"type": "uint32"
												}
											],
											"internalType": "struct IWormhole.GuardianSet",
											"name": "newGuardianSet",
											"type": "tuple"
										},
										{
											"internalType": "uint32",
											"name": "newGuardianSetIndex",
											"type": "uint32"
										}
									],
									"internalType": "struct IWormhole.GuardianSetUpgrade",
									"name": "gsu",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedRecoverChainId",
									"type": "bytes"
								}
							],
							"name": "parseRecoverChainId",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "evmChainId",
											"type": "uint256"
										},
										{
											"internalType": "uint16",
											"name": "newChainId",
											"type": "uint16"
										}
									],
									"internalType": "struct IWormhole.RecoverChainId",
									"name": "rci",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedSetMessageFee",
									"type": "bytes"
								}
							],
							"name": "parseSetMessageFee",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint16",
											"name": "chain",
											"type": "uint16"
										},
										{
											"internalType": "uint256",
											"name": "messageFee",
											"type": "uint256"
										}
									],
									"internalType": "struct IWormhole.SetMessageFee",
									"name": "smf",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedTransferFees",
									"type": "bytes"
								}
							],
							"name": "parseTransferFees",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint16",
											"name": "chain",
											"type": "uint16"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "recipient",
											"type": "bytes32"
										}
									],
									"internalType": "struct IWormhole.TransferFees",
									"name": "tf",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVM",
									"type": "bytes"
								}
							],
							"name": "parseVM",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "version",
											"type": "uint8"
										},
										{
											"internalType": "uint32",
											"name": "timestamp",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "nonce",
											"type": "uint32"
										},
										{
											"internalType": "uint16",
											"name": "emitterChainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										},
										{
											"internalType": "uint8",
											"name": "consistencyLevel",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "payload",
											"type": "bytes"
										},
										{
											"internalType": "uint32",
											"name": "guardianSetIndex",
											"type": "uint32"
										},
										{
											"components": [
												{
													"internalType": "bytes32",
													"name": "r",
													"type": "bytes32"
												},
												{
													"internalType": "bytes32",
													"name": "s",
													"type": "bytes32"
												},
												{
													"internalType": "uint8",
													"name": "v",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "guardianIndex",
													"type": "uint8"
												}
											],
											"internalType": "struct IWormhole.Signature[]",
											"name": "signatures",
											"type": "tuple[]"
										},
										{
											"internalType": "bytes32",
											"name": "hash",
											"type": "bytes32"
										}
									],
									"internalType": "struct IWormhole.VM",
									"name": "vm",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "publishMessage",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numGuardians",
									"type": "uint256"
								}
							],
							"name": "quorum",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "numSignaturesRequiredForQuorum",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_vm",
									"type": "bytes"
								}
							],
							"name": "submitContractUpgrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_vm",
									"type": "bytes"
								}
							],
							"name": "submitNewGuardianSet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_vm",
									"type": "bytes"
								}
							],
							"name": "submitRecoverChainId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_vm",
									"type": "bytes"
								}
							],
							"name": "submitSetMessageFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_vm",
									"type": "bytes"
								}
							],
							"name": "submitTransferFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								},
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "guardianIndex",
											"type": "uint8"
										}
									],
									"internalType": "struct IWormhole.Signature[]",
									"name": "signatures",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "address[]",
											"name": "keys",
											"type": "address[]"
										},
										{
											"internalType": "uint32",
											"name": "expirationTime",
											"type": "uint32"
										}
									],
									"internalType": "struct IWormhole.GuardianSet",
									"name": "guardianSet",
									"type": "tuple"
								}
							],
							"name": "verifySignatures",
							"outputs": [
								{
									"internalType": "bool",
									"name": "valid",
									"type": "bool"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "version",
											"type": "uint8"
										},
										{
											"internalType": "uint32",
											"name": "timestamp",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "nonce",
											"type": "uint32"
										},
										{
											"internalType": "uint16",
											"name": "emitterChainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										},
										{
											"internalType": "uint8",
											"name": "consistencyLevel",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "payload",
											"type": "bytes"
										},
										{
											"internalType": "uint32",
											"name": "guardianSetIndex",
											"type": "uint32"
										},
										{
											"components": [
												{
													"internalType": "bytes32",
													"name": "r",
													"type": "bytes32"
												},
												{
													"internalType": "bytes32",
													"name": "s",
													"type": "bytes32"
												},
												{
													"internalType": "uint8",
													"name": "v",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "guardianIndex",
													"type": "uint8"
												}
											],
											"internalType": "struct IWormhole.Signature[]",
											"name": "signatures",
											"type": "tuple[]"
										},
										{
											"internalType": "bytes32",
											"name": "hash",
											"type": "bytes32"
										}
									],
									"internalType": "struct IWormhole.VM",
									"name": "vm",
									"type": "tuple"
								}
							],
							"name": "verifyVM",
							"outputs": [
								{
									"internalType": "bool",
									"name": "valid",
									"type": "bool"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"chainId()": "9a8a0592",
							"evmChainId()": "64d42b17",
							"getCurrentGuardianSetIndex()": "1cfe7951",
							"getGuardianSet(uint32)": "f951975a",
							"getGuardianSetExpiry()": "eb8d3f12",
							"governanceActionIsConsumed(bytes32)": "2c3c02a4",
							"governanceChainId()": "fbe3c2cd",
							"governanceContract()": "b172b222",
							"initialize()": "8129fc1c",
							"isFork()": "e039f224",
							"isInitialized(address)": "d60b347f",
							"messageFee()": "1a90a219",
							"nextSequence(address)": "4cf842b5",
							"parseAndVerifyVM(bytes)": "c0fd8bde",
							"parseContractUpgrade(bytes)": "4fdc60fa",
							"parseGuardianSetUpgrade(bytes)": "04ca84cf",
							"parseRecoverChainId(bytes)": "cb4cfea8",
							"parseSetMessageFee(bytes)": "515f3247",
							"parseTransferFees(bytes)": "0319e59c",
							"parseVM(bytes)": "a9e11893",
							"publishMessage(uint32,bytes,uint8)": "b19a437e",
							"quorum(uint256)": "f8ce560a",
							"submitContractUpgrade(bytes)": "5cb8cae2",
							"submitNewGuardianSet(bytes)": "6606b4e0",
							"submitRecoverChainId(bytes)": "178149e7",
							"submitSetMessageFee(bytes)": "f42bc641",
							"submitTransferFees(bytes)": "93df337e",
							"verifySignatures(bytes32,(bytes32,bytes32,uint8,uint8)[],(address[],uint32))": "a0cce1b3",
							"verifyVM((uint8,uint32,uint32,uint16,bytes32,uint64,uint8,bytes,uint32,(bytes32,bytes32,uint8,uint8)[],bytes32))": "875be02a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"GuardianSetAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"LogMessagePublished\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"evmChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentGuardianSetIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"getGuardianSet\",\"outputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"keys\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"expirationTime\",\"type\":\"uint32\"}],\"internalType\":\"struct IWormhole.GuardianSet\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGuardianSetExpiry\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"governanceActionIsConsumed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFork\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"nextSequence\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"parseAndVerifyVM\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"emitterChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"guardianSetIndex\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"guardianIndex\",\"type\":\"uint8\"}],\"internalType\":\"struct IWormhole.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IWormhole.VM\",\"name\":\"vm\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedUpgrade\",\"type\":\"bytes\"}],\"name\":\"parseContractUpgrade\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"internalType\":\"struct IWormhole.ContractUpgrade\",\"name\":\"cu\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedUpgrade\",\"type\":\"bytes\"}],\"name\":\"parseGuardianSetUpgrade\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chain\",\"type\":\"uint16\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"keys\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"expirationTime\",\"type\":\"uint32\"}],\"internalType\":\"struct IWormhole.GuardianSet\",\"name\":\"newGuardianSet\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"newGuardianSetIndex\",\"type\":\"uint32\"}],\"internalType\":\"struct IWormhole.GuardianSetUpgrade\",\"name\":\"gsu\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedRecoverChainId\",\"type\":\"bytes\"}],\"name\":\"parseRecoverChainId\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"evmChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"newChainId\",\"type\":\"uint16\"}],\"internalType\":\"struct IWormhole.RecoverChainId\",\"name\":\"rci\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedSetMessageFee\",\"type\":\"bytes\"}],\"name\":\"parseSetMessageFee\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"messageFee\",\"type\":\"uint256\"}],\"internalType\":\"struct IWormhole.SetMessageFee\",\"name\":\"smf\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedTransferFees\",\"type\":\"bytes\"}],\"name\":\"parseTransferFees\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"}],\"internalType\":\"struct IWormhole.TransferFees\",\"name\":\"tf\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"parseVM\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"emitterChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"guardianSetIndex\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"guardianIndex\",\"type\":\"uint8\"}],\"internalType\":\"struct IWormhole.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IWormhole.VM\",\"name\":\"vm\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"publishMessage\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numGuardians\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"numSignaturesRequiredForQuorum\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_vm\",\"type\":\"bytes\"}],\"name\":\"submitContractUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_vm\",\"type\":\"bytes\"}],\"name\":\"submitNewGuardianSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_vm\",\"type\":\"bytes\"}],\"name\":\"submitRecoverChainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_vm\",\"type\":\"bytes\"}],\"name\":\"submitSetMessageFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_vm\",\"type\":\"bytes\"}],\"name\":\"submitTransferFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"guardianIndex\",\"type\":\"uint8\"}],\"internalType\":\"struct IWormhole.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"keys\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"expirationTime\",\"type\":\"uint32\"}],\"internalType\":\"struct IWormhole.GuardianSet\",\"name\":\"guardianSet\",\"type\":\"tuple\"}],\"name\":\"verifySignatures\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"emitterChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"guardianSetIndex\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"guardianIndex\",\"type\":\"uint8\"}],\"internalType\":\"struct IWormhole.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IWormhole.VM\",\"name\":\"vm\",\"type\":\"tuple\"}],\"name\":\"verifyVM\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IWormhole.sol\":\"IWormhole\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IWormhole.sol\":{\"keccak256\":\"0xb8dafb6b01a693ea79536abc1ca055aff2f72e918329403ac261e6429db12206\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://c52009a321ee86ce2a222f7ebd560a93210d7990525053895af5353323a77099\",\"dweb:/ipfs/QmT3gE2nKsYiSuUg2EeiHoHN6BRWks549Yjej1qdvipjCT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/IWormholeReceiver.sol": {
				"IWormholeReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "bytes[]",
									"name": "additionalMessages",
									"type": "bytes[]"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								},
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "receiveWormholeMessages",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": {
								"params": {
									"additionalMessages": "- Additional messages which were requested to be included in this delivery.      Note: There are no contract-level guarantees that the messages in this array are what was requested      so **you should verify any sensitive information given here!**      For example, if a 'VaaKey' was specified on the source chain, then MAKE SURE the corresponding message here      has valid signatures (by calling `parseAndVerifyVM(message)` on the Wormhole core contract)      This field can be used to perform and relay TokenBridge or CCTP transfers, and there are example      usages of this at         https://github.com/wormhole-foundation/hello-token         https://github.com/wormhole-foundation/hello-cctp",
									"deliveryHash": "- the VAA hash of the deliveryVAA.",
									"payload": "- an arbitrary message which was included in the delivery by the     requester. This message's signature will already have been verified (as long as msg.sender is the Wormhole Relayer contract)",
									"sourceAddress": "- the (wormhole format) address on the sending chain which requested     this delivery.",
									"sourceChain": "- the wormhole chain ID where this delivery was requested."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": "529dca32"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"additionalMessages\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"receiveWormholeMessages\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)\":{\"params\":{\"additionalMessages\":\"- Additional messages which were requested to be included in this delivery.      Note: There are no contract-level guarantees that the messages in this array are what was requested      so **you should verify any sensitive information given here!**      For example, if a 'VaaKey' was specified on the source chain, then MAKE SURE the corresponding message here      has valid signatures (by calling `parseAndVerifyVM(message)` on the Wormhole core contract)      This field can be used to perform and relay TokenBridge or CCTP transfers, and there are example      usages of this at         https://github.com/wormhole-foundation/hello-token         https://github.com/wormhole-foundation/hello-cctp\",\"deliveryHash\":\"- the VAA hash of the deliveryVAA.\",\"payload\":\"- an arbitrary message which was included in the delivery by the     requester. This message's signature will already have been verified (as long as msg.sender is the Wormhole Relayer contract)\",\"sourceAddress\":\"- the (wormhole format) address on the sending chain which requested     this delivery.\",\"sourceChain\":\"- the wormhole chain ID where this delivery was requested.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)\":{\"notice\":\"When a `send` is performed with this contract as the target, this function will be     invoked by the WormholeRelayer contract NOTE: This function should be restricted such that only the Wormhole Relayer contract can call it. We also recommend that this function checks that `sourceChain` and `sourceAddress` are indeed who       you expect to have requested the calling of `send` on the source chain The invocation of this function corresponding to the `send` request will have msg.value equal   to the receiverValue specified in the send request. If the invocation of this function reverts or exceeds the gas limit   specified by the send requester, this delivery will result in a `ReceiverFailure`.\"}},\"notice\":\"Interface for a contract which can receive Wormhole messages.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IWormholeReceiver.sol\":\"IWormholeReceiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x9d5560e3673b9e920f9865454fd88138f02d3a68097c20f30d50304398d102e3\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://f0952a2e8d352254b6abcc320a0ed87bf12e990b804462d32471c429f141a187\",\"dweb:/ipfs/QmWD8nqYGF1Y26zTvfAzAZFvYiEW8eTdkNZcYMy5KqPXpZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": {
								"notice": "When a `send` is performed with this contract as the target, this function will be     invoked by the WormholeRelayer contract NOTE: This function should be restricted such that only the Wormhole Relayer contract can call it. We also recommend that this function checks that `sourceChain` and `sourceAddress` are indeed who       you expect to have requested the calling of `send` on the source chain The invocation of this function corresponding to the `send` request will have msg.value equal   to the receiverValue specified in the send request. If the invocation of this function reverts or exceeds the gas limit   specified by the send requester, this delivery will result in a `ReceiverFailure`."
							}
						},
						"notice": "Interface for a contract which can receive Wormhole messages.",
						"version": 1
					}
				}
			},
			"src/interfaces/IWormholeRelayer.sol": {
				"IWormholeRelayer": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientContract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "deliveryVaaHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "enum IWormholeRelayerDelivery.DeliveryStatus",
									"name": "status",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "gasUsed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum IWormholeRelayerDelivery.RefundStatus",
									"name": "refundStatus",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "additionalStatusInfo",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "overridesInfo",
									"type": "bytes"
								}
							],
							"name": "Delivery",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "deliveryQuote",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								}
							],
							"name": "SendEvent",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "encodedVMs",
									"type": "bytes[]"
								},
								{
									"internalType": "bytes",
									"name": "encodedDeliveryVAA",
									"type": "bytes"
								},
								{
									"internalType": "address payable",
									"name": "relayerRefundAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "deliveryOverrides",
									"type": "bytes"
								}
							],
							"name": "deliver",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryAttempted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "attempted",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryFailureBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliverySuccessBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDefaultDeliveryProvider",
							"outputs": [
								{
									"internalType": "address",
									"name": "deliveryProvider",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "chainId",
									"type": "uint16"
								}
							],
							"name": "getRegisteredWormholeRelayerContract",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "quoteDeliveryPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativePriceQuote",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionInfo",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "quoteEVMDeliveryPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativePriceQuote",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "targetChainRefundPerGasUnused",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								}
							],
							"name": "quoteEVMDeliveryPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativePriceQuote",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "targetChainRefundPerGasUnused",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "currentChainAmount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "quoteNativeForChain",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "targetChainAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey",
									"name": "deliveryVaaKey",
									"type": "tuple"
								},
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "newReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "newEncodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "newDeliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "resend",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey",
									"name": "deliveryVaaKey",
									"type": "tuple"
								},
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "newReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newGasLimit",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "newDeliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "resendToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "targetAddress",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "refundAddress",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "send",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "targetAddress",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "refundAddress",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "keyType",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "encodedKey",
											"type": "bytes"
										}
									],
									"internalType": "struct MessageKey[]",
									"name": "messageKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "send",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								}
							],
							"name": "sendPayloadToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								}
							],
							"name": "sendPayloadToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "sendToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "keyType",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "encodedKey",
											"type": "bytes"
										}
									],
									"internalType": "struct MessageKey[]",
									"name": "messageKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "sendToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								}
							],
							"name": "sendVaasToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								}
							],
							"name": "sendVaasToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Delivery(address,uint16,uint64,bytes32,uint8,uint256,uint8,bytes,bytes)": {
								"custom:member": "recipientContract - The target contract addresssourceChain - The chain which this delivery was requested from (in wormhole     ChainID format)sequence - The wormhole sequence number of the delivery VAA on the source chain     corresponding to this delivery requestdeliveryVaaHash - The hash of the delivery VAA corresponding to this delivery     requestgasUsed - The amount of gas that was used to call your target contractstatus:   - RECEIVER_FAILURE, if the target contract reverts   - SUCCESS, if the target contract doesn't revertadditionalStatusInfo:   - If status is SUCCESS, then this is empty.   - If status is RECEIVER_FAILURE, this is `RETURNDATA_TRUNCATION_THRESHOLD` bytes of the       return data (i.e. potentially truncated revert reason information).refundStatus - Result of the refund. REFUND_SUCCESS or REFUND_FAIL are for     refunds where targetChain=refundChain; the others are for targetChain!=refundChain,     where a cross chain refund is necessary, or if the default code path is used where no refund is requested (NO_REFUND_REQUESTED)overridesInfo:   - If not an override: empty bytes array   - Otherwise: An encoded `DeliveryOverride`"
							}
						},
						"kind": "dev",
						"methods": {
							"deliver(bytes[],bytes,address,bytes)": {
								"params": {
									"deliveryOverrides": "- Optional overrides field which must be either an empty bytes array or     an encoded DeliveryOverride struct",
									"encodedDeliveryVAA": "- Signed wormhole message from the source chain's WormholeRelayer     contract with payload being the encoded delivery instruction container",
									"encodedVMs": "- An array of signed wormhole messages (all from the same source chain     transaction)",
									"relayerRefundAddress": "- The address to which any refunds to the delivery provider     should be sent"
								}
							},
							"getDefaultDeliveryProvider()": {
								"returns": {
									"deliveryProvider": "The address of (the default delivery provider)'s contract on this source   chain. This must be a contract that implements IDeliveryProvider."
								}
							},
							"quoteDeliveryPrice(uint16,uint256,bytes,address)": {
								"params": {
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"encodedExecutionParameters": "encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"encodedExecutionInfo": "encoded information on how the delivery will be executed        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` and `targetChainRefundPerGasUnused`             (which is the amount of target chain currency that will be refunded per unit of gas unused,              if a refundAddress is specified)",
									"nativePriceQuote": "Price, in units of current chain currency, that the delivery provider charges to perform the relay"
								}
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"nativePriceQuote": "Price, in units of current chain currency, that the delivery provider charges to perform the relay",
									"targetChainRefundPerGasUnused": "amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified.         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain."
								}
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)": {
								"params": {
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"nativePriceQuote": "Price, in units of current chain currency, that the delivery provider charges to perform the relay",
									"targetChainRefundPerGasUnused": "amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain."
								}
							},
							"quoteNativeForChain(uint16,uint256,address)": {
								"params": {
									"currentChainAmount": "The value that `paymentForExtraReceiverValue` will be set to",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"targetChainAmount": "The amount such that if `targetAddress` will be called with `msg.value` equal to         receiverValue + targetChainAmount"
								}
							},
							"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)": {
								"params": {
									"deliveryVaaKey": "VaaKey identifying the wormhole message containing the        previously published delivery instructions",
									"newDeliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"newEncodedExecutionParameters": "new encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"newReceiverValue": "new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "The target chain that the original delivery targeted. Must match targetChain from original delivery instructions"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing redelivery instructions"
								}
							},
							"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)": {
								"params": {
									"deliveryVaaKey": "VaaKey identifying the wormhole message containing the        previously published delivery instructions",
									"newDeliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"newGasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider, to the refund chain and address specified in the original request",
									"newReceiverValue": "new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "The target chain that the original delivery targeted. Must match targetChain from original delivery instructions"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing redelivery instructions"
								}
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"encodedExecutionParameters": "encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"encodedExecutionParameters": "encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"messageKeys": "Additional messagess to pass in as parameter in call to `targetAddress`",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"messageKeys": "Additional messagess to pass in as parameter in call to `targetAddress`",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deliver(bytes[],bytes,address,bytes)": "a60eb4c8",
							"deliveryAttempted(bytes32)": "d0625a19",
							"deliveryFailureBlock(bytes32)": "5a3b92e8",
							"deliverySuccessBlock(bytes32)": "40984f08",
							"getDefaultDeliveryProvider()": "24320c9f",
							"getRegisteredWormholeRelayerContract(uint16)": "3e8267e7",
							"quoteDeliveryPrice(uint16,uint256,bytes,address)": "a79629d8",
							"quoteEVMDeliveryPrice(uint16,uint256,uint256)": "c23ee3c3",
							"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)": "80ebabd0",
							"quoteNativeForChain(uint16,uint256,address)": "2385904a",
							"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)": "b686d089",
							"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)": "8b0301b1",
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)": "c81fb7fe",
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)": "cee4bda0",
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)": "8fecdd02",
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)": "4b5ca6f4",
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)": "3a2c767d",
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)": "c055120e",
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])": "329a2be7",
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)": "32b2fc0e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"deliveryVaaHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"enum IWormholeRelayerDelivery.DeliveryStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum IWormholeRelayerDelivery.RefundStatus\",\"name\":\"refundStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"additionalStatusInfo\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"overridesInfo\",\"type\":\"bytes\"}],\"name\":\"Delivery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deliveryQuote\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"}],\"name\":\"SendEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"encodedVMs\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"encodedDeliveryVAA\",\"type\":\"bytes\"},{\"internalType\":\"address payable\",\"name\":\"relayerRefundAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"deliveryOverrides\",\"type\":\"bytes\"}],\"name\":\"deliver\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryAttempted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"attempted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryFailureBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliverySuccessBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultDeliveryProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deliveryProvider\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"getRegisteredWormholeRelayerContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"quoteDeliveryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativePriceQuote\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionInfo\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"quoteEVMDeliveryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativePriceQuote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetChainRefundPerGasUnused\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"quoteEVMDeliveryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativePriceQuote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetChainRefundPerGasUnused\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"currentChainAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"quoteNativeForChain\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"targetChainAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey\",\"name\":\"deliveryVaaKey\",\"type\":\"tuple\"},{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"newReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"newEncodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"newDeliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"resend\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey\",\"name\":\"deliveryVaaKey\",\"type\":\"tuple\"},{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"newReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newDeliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"resendToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"targetAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"refundAddress\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"send\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"targetAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"refundAddress\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"keyType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"encodedKey\",\"type\":\"bytes\"}],\"internalType\":\"struct MessageKey[]\",\"name\":\"messageKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"send\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"}],\"name\":\"sendPayloadToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"sendPayloadToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"sendToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"keyType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"encodedKey\",\"type\":\"bytes\"}],\"internalType\":\"struct MessageKey[]\",\"name\":\"messageKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"sendToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"}],\"name\":\"sendVaasToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"}],\"name\":\"sendVaasToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Delivery(address,uint16,uint64,bytes32,uint8,uint256,uint8,bytes,bytes)\":{\"custom:member\":\"recipientContract - The target contract addresssourceChain - The chain which this delivery was requested from (in wormhole     ChainID format)sequence - The wormhole sequence number of the delivery VAA on the source chain     corresponding to this delivery requestdeliveryVaaHash - The hash of the delivery VAA corresponding to this delivery     requestgasUsed - The amount of gas that was used to call your target contractstatus:   - RECEIVER_FAILURE, if the target contract reverts   - SUCCESS, if the target contract doesn't revertadditionalStatusInfo:   - If status is SUCCESS, then this is empty.   - If status is RECEIVER_FAILURE, this is `RETURNDATA_TRUNCATION_THRESHOLD` bytes of the       return data (i.e. potentially truncated revert reason information).refundStatus - Result of the refund. REFUND_SUCCESS or REFUND_FAIL are for     refunds where targetChain=refundChain; the others are for targetChain!=refundChain,     where a cross chain refund is necessary, or if the default code path is used where no refund is requested (NO_REFUND_REQUESTED)overridesInfo:   - If not an override: empty bytes array   - Otherwise: An encoded `DeliveryOverride`\"}},\"kind\":\"dev\",\"methods\":{\"deliver(bytes[],bytes,address,bytes)\":{\"params\":{\"deliveryOverrides\":\"- Optional overrides field which must be either an empty bytes array or     an encoded DeliveryOverride struct\",\"encodedDeliveryVAA\":\"- Signed wormhole message from the source chain's WormholeRelayer     contract with payload being the encoded delivery instruction container\",\"encodedVMs\":\"- An array of signed wormhole messages (all from the same source chain     transaction)\",\"relayerRefundAddress\":\"- The address to which any refunds to the delivery provider     should be sent\"}},\"getDefaultDeliveryProvider()\":{\"returns\":{\"deliveryProvider\":\"The address of (the default delivery provider)'s contract on this source   chain. This must be a contract that implements IDeliveryProvider.\"}},\"quoteDeliveryPrice(uint16,uint256,bytes,address)\":{\"params\":{\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"encodedExecutionParameters\":\"encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"encodedExecutionInfo\":\"encoded information on how the delivery will be executed        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` and `targetChainRefundPerGasUnused`             (which is the amount of target chain currency that will be refunded per unit of gas unused,              if a refundAddress is specified)\",\"nativePriceQuote\":\"Price, in units of current chain currency, that the delivery provider charges to perform the relay\"}},\"quoteEVMDeliveryPrice(uint16,uint256,uint256)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"nativePriceQuote\":\"Price, in units of current chain currency, that the delivery provider charges to perform the relay\",\"targetChainRefundPerGasUnused\":\"amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified.         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain.\"}},\"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)\":{\"params\":{\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"nativePriceQuote\":\"Price, in units of current chain currency, that the delivery provider charges to perform the relay\",\"targetChainRefundPerGasUnused\":\"amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain.\"}},\"quoteNativeForChain(uint16,uint256,address)\":{\"params\":{\"currentChainAmount\":\"The value that `paymentForExtraReceiverValue` will be set to\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"targetChainAmount\":\"The amount such that if `targetAddress` will be called with `msg.value` equal to         receiverValue + targetChainAmount\"}},\"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)\":{\"params\":{\"deliveryVaaKey\":\"VaaKey identifying the wormhole message containing the        previously published delivery instructions\",\"newDeliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"newEncodedExecutionParameters\":\"new encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"newReceiverValue\":\"new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing redelivery instructions\"}},\"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)\":{\"params\":{\"deliveryVaaKey\":\"VaaKey identifying the wormhole message containing the        previously published delivery instructions\",\"newDeliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"newGasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider, to the refund chain and address specified in the original request\",\"newReceiverValue\":\"new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing redelivery instructions\"}},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"encodedExecutionParameters\":\"encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"encodedExecutionParameters\":\"encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"messageKeys\":\"Additional messagess to pass in as parameter in call to `targetAddress`\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"messageKeys\":\"Additional messagess to pass in as parameter in call to `targetAddress`\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deliver(bytes[],bytes,address,bytes)\":{\"notice\":\"The delivery provider calls `deliver` to relay messages as described by one delivery instruction The delivery provider must pass in the specified (by VaaKeys[]) signed wormhole messages (VAAs) from the source chain as well as the signed wormhole message with the delivery instructions (the delivery VAA) The messages will be relayed to the target address (with the specified gas limit and receiver value) iff the following checks are met: - the delivery VAA has a valid signature - the delivery VAA's emitter is one of these WormholeRelayer contracts - the delivery provider passed in at least enough of this chain's currency as msg.value (enough meaning the maximum possible refund) - the instruction's target chain is this chain - the relayed signed VAAs match the descriptions in container.messages (the VAA hashes match, or the emitter address, sequence number pair matches, depending on the description given)\"},\"deliveryAttempted(bytes32)\":{\"notice\":\"Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted\"},\"deliveryFailureBlock(bytes32)\":{\"notice\":\"block number of the latest attempt to execute a delivery that failed\"},\"deliverySuccessBlock(bytes32)\":{\"notice\":\"block number at which a delivery was successfully executed\"},\"getDefaultDeliveryProvider()\":{\"notice\":\"Returns the address of the current default delivery provider\"},\"quoteDeliveryPrice(uint16,uint256,bytes,address)\":{\"notice\":\"Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\"},\"quoteEVMDeliveryPrice(uint16,uint256,uint256)\":{\"notice\":\"Returns the price to request a relay to chain `targetChain`, using the default delivery provider\"},\"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)\":{\"notice\":\"Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\"},\"quoteNativeForChain(uint16,uint256,address)\":{\"notice\":\"Returns the (extra) amount of target chain currency that `targetAddress` will be called with, if the `paymentForExtraReceiverValue` field is set to `currentChainAmount`\"},\"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)\":{\"notice\":\"Requests a previously published delivery instruction to be redelivered This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, newReceiverValue, newEncodedExecutionParameters, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - (For EVM_V1) newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - (For EVM_V1) newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`\"},\"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)\":{\"notice\":\"Requests a previously published delivery instruction to be redelivered (e.g. with a different delivery provider) This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, newReceiverValue, newGasLimit, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction\"},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue\"},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\"},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendPayloadToEvm` function with `refundChain` and `refundAddress` as parameters\"},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\"},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue\"},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and external messages specified by `messageKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\"},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendVaasToEvm` function with `refundChain` and `refundAddress` as parameters\"},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IWormholeRelayer.sol\":\"IWormholeRelayer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0x4a73a6cf88f501da70652d3b550ad599a5b75e028e82fb3315729882d97add9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://4552bc84e8c7f92c7b4eddd71ab7fe5273b265c90d1cbf5b901fa48dcbc383ec\",\"dweb:/ipfs/QmemXDq6UTMmfsg8vheB2NvUvXTgbXX9mYcxPM3z9MLqUG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deliver(bytes[],bytes,address,bytes)": {
								"notice": "The delivery provider calls `deliver` to relay messages as described by one delivery instruction The delivery provider must pass in the specified (by VaaKeys[]) signed wormhole messages (VAAs) from the source chain as well as the signed wormhole message with the delivery instructions (the delivery VAA) The messages will be relayed to the target address (with the specified gas limit and receiver value) iff the following checks are met: - the delivery VAA has a valid signature - the delivery VAA's emitter is one of these WormholeRelayer contracts - the delivery provider passed in at least enough of this chain's currency as msg.value (enough meaning the maximum possible refund) - the instruction's target chain is this chain - the relayed signed VAAs match the descriptions in container.messages (the VAA hashes match, or the emitter address, sequence number pair matches, depending on the description given)"
							},
							"deliveryAttempted(bytes32)": {
								"notice": "Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted"
							},
							"deliveryFailureBlock(bytes32)": {
								"notice": "block number of the latest attempt to execute a delivery that failed"
							},
							"deliverySuccessBlock(bytes32)": {
								"notice": "block number at which a delivery was successfully executed"
							},
							"getDefaultDeliveryProvider()": {
								"notice": "Returns the address of the current default delivery provider"
							},
							"quoteDeliveryPrice(uint16,uint256,bytes,address)": {
								"notice": "Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`"
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256)": {
								"notice": "Returns the price to request a relay to chain `targetChain`, using the default delivery provider"
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)": {
								"notice": "Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`"
							},
							"quoteNativeForChain(uint16,uint256,address)": {
								"notice": "Returns the (extra) amount of target chain currency that `targetAddress` will be called with, if the `paymentForExtraReceiverValue` field is set to `currentChainAmount`"
							},
							"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)": {
								"notice": "Requests a previously published delivery instruction to be redelivered This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, newReceiverValue, newEncodedExecutionParameters, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - (For EVM_V1) newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - (For EVM_V1) newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`"
							},
							"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)": {
								"notice": "Requests a previously published delivery instruction to be redelivered (e.g. with a different delivery provider) This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, newReceiverValue, newGasLimit, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction"
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue"
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!"
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendPayloadToEvm` function with `refundChain` and `refundAddress` as parameters"
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`"
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue"
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and external messages specified by `messageKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!"
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendVaasToEvm` function with `refundChain` and `refundAddress` as parameters"
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`"
							}
						},
						"version": 1
					}
				},
				"IWormholeRelayerBase": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "deliveryQuote",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								}
							],
							"name": "SendEvent",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryAttempted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "attempted",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryFailureBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliverySuccessBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "chainId",
									"type": "uint16"
								}
							],
							"name": "getRegisteredWormholeRelayerContract",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deliveryAttempted(bytes32)": "d0625a19",
							"deliveryFailureBlock(bytes32)": "5a3b92e8",
							"deliverySuccessBlock(bytes32)": "40984f08",
							"getRegisteredWormholeRelayerContract(uint16)": "3e8267e7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deliveryQuote\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"}],\"name\":\"SendEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryAttempted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"attempted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryFailureBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliverySuccessBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"getRegisteredWormholeRelayerContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deliveryAttempted(bytes32)\":{\"notice\":\"Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted\"},\"deliveryFailureBlock(bytes32)\":{\"notice\":\"block number of the latest attempt to execute a delivery that failed\"},\"deliverySuccessBlock(bytes32)\":{\"notice\":\"block number at which a delivery was successfully executed\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IWormholeRelayer.sol\":\"IWormholeRelayerBase\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0x4a73a6cf88f501da70652d3b550ad599a5b75e028e82fb3315729882d97add9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://4552bc84e8c7f92c7b4eddd71ab7fe5273b265c90d1cbf5b901fa48dcbc383ec\",\"dweb:/ipfs/QmemXDq6UTMmfsg8vheB2NvUvXTgbXX9mYcxPM3z9MLqUG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deliveryAttempted(bytes32)": {
								"notice": "Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted"
							},
							"deliveryFailureBlock(bytes32)": {
								"notice": "block number of the latest attempt to execute a delivery that failed"
							},
							"deliverySuccessBlock(bytes32)": {
								"notice": "block number at which a delivery was successfully executed"
							}
						},
						"version": 1
					}
				},
				"IWormholeRelayerDelivery": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientContract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "deliveryVaaHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "enum IWormholeRelayerDelivery.DeliveryStatus",
									"name": "status",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "gasUsed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum IWormholeRelayerDelivery.RefundStatus",
									"name": "refundStatus",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "additionalStatusInfo",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "overridesInfo",
									"type": "bytes"
								}
							],
							"name": "Delivery",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "deliveryQuote",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								}
							],
							"name": "SendEvent",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "encodedVMs",
									"type": "bytes[]"
								},
								{
									"internalType": "bytes",
									"name": "encodedDeliveryVAA",
									"type": "bytes"
								},
								{
									"internalType": "address payable",
									"name": "relayerRefundAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "deliveryOverrides",
									"type": "bytes"
								}
							],
							"name": "deliver",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryAttempted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "attempted",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryFailureBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliverySuccessBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "chainId",
									"type": "uint16"
								}
							],
							"name": "getRegisteredWormholeRelayerContract",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Delivery(address,uint16,uint64,bytes32,uint8,uint256,uint8,bytes,bytes)": {
								"custom:member": "recipientContract - The target contract addresssourceChain - The chain which this delivery was requested from (in wormhole     ChainID format)sequence - The wormhole sequence number of the delivery VAA on the source chain     corresponding to this delivery requestdeliveryVaaHash - The hash of the delivery VAA corresponding to this delivery     requestgasUsed - The amount of gas that was used to call your target contractstatus:   - RECEIVER_FAILURE, if the target contract reverts   - SUCCESS, if the target contract doesn't revertadditionalStatusInfo:   - If status is SUCCESS, then this is empty.   - If status is RECEIVER_FAILURE, this is `RETURNDATA_TRUNCATION_THRESHOLD` bytes of the       return data (i.e. potentially truncated revert reason information).refundStatus - Result of the refund. REFUND_SUCCESS or REFUND_FAIL are for     refunds where targetChain=refundChain; the others are for targetChain!=refundChain,     where a cross chain refund is necessary, or if the default code path is used where no refund is requested (NO_REFUND_REQUESTED)overridesInfo:   - If not an override: empty bytes array   - Otherwise: An encoded `DeliveryOverride`"
							}
						},
						"kind": "dev",
						"methods": {
							"deliver(bytes[],bytes,address,bytes)": {
								"params": {
									"deliveryOverrides": "- Optional overrides field which must be either an empty bytes array or     an encoded DeliveryOverride struct",
									"encodedDeliveryVAA": "- Signed wormhole message from the source chain's WormholeRelayer     contract with payload being the encoded delivery instruction container",
									"encodedVMs": "- An array of signed wormhole messages (all from the same source chain     transaction)",
									"relayerRefundAddress": "- The address to which any refunds to the delivery provider     should be sent"
								}
							}
						},
						"title": "IWormholeRelayerDelivery",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deliver(bytes[],bytes,address,bytes)": "a60eb4c8",
							"deliveryAttempted(bytes32)": "d0625a19",
							"deliveryFailureBlock(bytes32)": "5a3b92e8",
							"deliverySuccessBlock(bytes32)": "40984f08",
							"getRegisteredWormholeRelayerContract(uint16)": "3e8267e7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"deliveryVaaHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"enum IWormholeRelayerDelivery.DeliveryStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum IWormholeRelayerDelivery.RefundStatus\",\"name\":\"refundStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"additionalStatusInfo\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"overridesInfo\",\"type\":\"bytes\"}],\"name\":\"Delivery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deliveryQuote\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"}],\"name\":\"SendEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"encodedVMs\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"encodedDeliveryVAA\",\"type\":\"bytes\"},{\"internalType\":\"address payable\",\"name\":\"relayerRefundAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"deliveryOverrides\",\"type\":\"bytes\"}],\"name\":\"deliver\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryAttempted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"attempted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryFailureBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliverySuccessBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"getRegisteredWormholeRelayerContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Delivery(address,uint16,uint64,bytes32,uint8,uint256,uint8,bytes,bytes)\":{\"custom:member\":\"recipientContract - The target contract addresssourceChain - The chain which this delivery was requested from (in wormhole     ChainID format)sequence - The wormhole sequence number of the delivery VAA on the source chain     corresponding to this delivery requestdeliveryVaaHash - The hash of the delivery VAA corresponding to this delivery     requestgasUsed - The amount of gas that was used to call your target contractstatus:   - RECEIVER_FAILURE, if the target contract reverts   - SUCCESS, if the target contract doesn't revertadditionalStatusInfo:   - If status is SUCCESS, then this is empty.   - If status is RECEIVER_FAILURE, this is `RETURNDATA_TRUNCATION_THRESHOLD` bytes of the       return data (i.e. potentially truncated revert reason information).refundStatus - Result of the refund. REFUND_SUCCESS or REFUND_FAIL are for     refunds where targetChain=refundChain; the others are for targetChain!=refundChain,     where a cross chain refund is necessary, or if the default code path is used where no refund is requested (NO_REFUND_REQUESTED)overridesInfo:   - If not an override: empty bytes array   - Otherwise: An encoded `DeliveryOverride`\"}},\"kind\":\"dev\",\"methods\":{\"deliver(bytes[],bytes,address,bytes)\":{\"params\":{\"deliveryOverrides\":\"- Optional overrides field which must be either an empty bytes array or     an encoded DeliveryOverride struct\",\"encodedDeliveryVAA\":\"- Signed wormhole message from the source chain's WormholeRelayer     contract with payload being the encoded delivery instruction container\",\"encodedVMs\":\"- An array of signed wormhole messages (all from the same source chain     transaction)\",\"relayerRefundAddress\":\"- The address to which any refunds to the delivery provider     should be sent\"}}},\"title\":\"IWormholeRelayerDelivery\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deliver(bytes[],bytes,address,bytes)\":{\"notice\":\"The delivery provider calls `deliver` to relay messages as described by one delivery instruction The delivery provider must pass in the specified (by VaaKeys[]) signed wormhole messages (VAAs) from the source chain as well as the signed wormhole message with the delivery instructions (the delivery VAA) The messages will be relayed to the target address (with the specified gas limit and receiver value) iff the following checks are met: - the delivery VAA has a valid signature - the delivery VAA's emitter is one of these WormholeRelayer contracts - the delivery provider passed in at least enough of this chain's currency as msg.value (enough meaning the maximum possible refund) - the instruction's target chain is this chain - the relayed signed VAAs match the descriptions in container.messages (the VAA hashes match, or the emitter address, sequence number pair matches, depending on the description given)\"},\"deliveryAttempted(bytes32)\":{\"notice\":\"Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted\"},\"deliveryFailureBlock(bytes32)\":{\"notice\":\"block number of the latest attempt to execute a delivery that failed\"},\"deliverySuccessBlock(bytes32)\":{\"notice\":\"block number at which a delivery was successfully executed\"}},\"notice\":\"The interface to execute deliveries. Only relevant for Delivery Providers\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IWormholeRelayer.sol\":\"IWormholeRelayerDelivery\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0x4a73a6cf88f501da70652d3b550ad599a5b75e028e82fb3315729882d97add9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://4552bc84e8c7f92c7b4eddd71ab7fe5273b265c90d1cbf5b901fa48dcbc383ec\",\"dweb:/ipfs/QmemXDq6UTMmfsg8vheB2NvUvXTgbXX9mYcxPM3z9MLqUG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deliver(bytes[],bytes,address,bytes)": {
								"notice": "The delivery provider calls `deliver` to relay messages as described by one delivery instruction The delivery provider must pass in the specified (by VaaKeys[]) signed wormhole messages (VAAs) from the source chain as well as the signed wormhole message with the delivery instructions (the delivery VAA) The messages will be relayed to the target address (with the specified gas limit and receiver value) iff the following checks are met: - the delivery VAA has a valid signature - the delivery VAA's emitter is one of these WormholeRelayer contracts - the delivery provider passed in at least enough of this chain's currency as msg.value (enough meaning the maximum possible refund) - the instruction's target chain is this chain - the relayed signed VAAs match the descriptions in container.messages (the VAA hashes match, or the emitter address, sequence number pair matches, depending on the description given)"
							},
							"deliveryAttempted(bytes32)": {
								"notice": "Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted"
							},
							"deliveryFailureBlock(bytes32)": {
								"notice": "block number of the latest attempt to execute a delivery that failed"
							},
							"deliverySuccessBlock(bytes32)": {
								"notice": "block number at which a delivery was successfully executed"
							}
						},
						"notice": "The interface to execute deliveries. Only relevant for Delivery Providers",
						"version": 1
					}
				},
				"IWormholeRelayerSend": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "deliveryQuote",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								}
							],
							"name": "SendEvent",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryAttempted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "attempted",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryFailureBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliverySuccessBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDefaultDeliveryProvider",
							"outputs": [
								{
									"internalType": "address",
									"name": "deliveryProvider",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "chainId",
									"type": "uint16"
								}
							],
							"name": "getRegisteredWormholeRelayerContract",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "quoteDeliveryPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativePriceQuote",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionInfo",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "quoteEVMDeliveryPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativePriceQuote",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "targetChainRefundPerGasUnused",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								}
							],
							"name": "quoteEVMDeliveryPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativePriceQuote",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "targetChainRefundPerGasUnused",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "currentChainAmount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "quoteNativeForChain",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "targetChainAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey",
									"name": "deliveryVaaKey",
									"type": "tuple"
								},
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "newReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "newEncodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "newDeliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "resend",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey",
									"name": "deliveryVaaKey",
									"type": "tuple"
								},
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "newReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newGasLimit",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "newDeliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "resendToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "targetAddress",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "refundAddress",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "send",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "targetAddress",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "refundAddress",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "keyType",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "encodedKey",
											"type": "bytes"
										}
									],
									"internalType": "struct MessageKey[]",
									"name": "messageKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "send",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								}
							],
							"name": "sendPayloadToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								}
							],
							"name": "sendPayloadToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "sendToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "keyType",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "encodedKey",
											"type": "bytes"
										}
									],
									"internalType": "struct MessageKey[]",
									"name": "messageKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "sendToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								}
							],
							"name": "sendVaasToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								}
							],
							"name": "sendVaasToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getDefaultDeliveryProvider()": {
								"returns": {
									"deliveryProvider": "The address of (the default delivery provider)'s contract on this source   chain. This must be a contract that implements IDeliveryProvider."
								}
							},
							"quoteDeliveryPrice(uint16,uint256,bytes,address)": {
								"params": {
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"encodedExecutionParameters": "encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"encodedExecutionInfo": "encoded information on how the delivery will be executed        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` and `targetChainRefundPerGasUnused`             (which is the amount of target chain currency that will be refunded per unit of gas unused,              if a refundAddress is specified)",
									"nativePriceQuote": "Price, in units of current chain currency, that the delivery provider charges to perform the relay"
								}
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"nativePriceQuote": "Price, in units of current chain currency, that the delivery provider charges to perform the relay",
									"targetChainRefundPerGasUnused": "amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified.         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain."
								}
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)": {
								"params": {
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"nativePriceQuote": "Price, in units of current chain currency, that the delivery provider charges to perform the relay",
									"targetChainRefundPerGasUnused": "amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain."
								}
							},
							"quoteNativeForChain(uint16,uint256,address)": {
								"params": {
									"currentChainAmount": "The value that `paymentForExtraReceiverValue` will be set to",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"targetChainAmount": "The amount such that if `targetAddress` will be called with `msg.value` equal to         receiverValue + targetChainAmount"
								}
							},
							"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)": {
								"params": {
									"deliveryVaaKey": "VaaKey identifying the wormhole message containing the        previously published delivery instructions",
									"newDeliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"newEncodedExecutionParameters": "new encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"newReceiverValue": "new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "The target chain that the original delivery targeted. Must match targetChain from original delivery instructions"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing redelivery instructions"
								}
							},
							"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)": {
								"params": {
									"deliveryVaaKey": "VaaKey identifying the wormhole message containing the        previously published delivery instructions",
									"newDeliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"newGasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider, to the refund chain and address specified in the original request",
									"newReceiverValue": "new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "The target chain that the original delivery targeted. Must match targetChain from original delivery instructions"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing redelivery instructions"
								}
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"encodedExecutionParameters": "encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"encodedExecutionParameters": "encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"messageKeys": "Additional messagess to pass in as parameter in call to `targetAddress`",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"messageKeys": "Additional messagess to pass in as parameter in call to `targetAddress`",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							}
						},
						"title": "IWormholeRelayerSend",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deliveryAttempted(bytes32)": "d0625a19",
							"deliveryFailureBlock(bytes32)": "5a3b92e8",
							"deliverySuccessBlock(bytes32)": "40984f08",
							"getDefaultDeliveryProvider()": "24320c9f",
							"getRegisteredWormholeRelayerContract(uint16)": "3e8267e7",
							"quoteDeliveryPrice(uint16,uint256,bytes,address)": "a79629d8",
							"quoteEVMDeliveryPrice(uint16,uint256,uint256)": "c23ee3c3",
							"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)": "80ebabd0",
							"quoteNativeForChain(uint16,uint256,address)": "2385904a",
							"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)": "b686d089",
							"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)": "8b0301b1",
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)": "c81fb7fe",
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)": "cee4bda0",
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)": "8fecdd02",
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)": "4b5ca6f4",
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)": "3a2c767d",
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)": "c055120e",
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])": "329a2be7",
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)": "32b2fc0e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deliveryQuote\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"}],\"name\":\"SendEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryAttempted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"attempted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryFailureBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliverySuccessBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultDeliveryProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deliveryProvider\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"getRegisteredWormholeRelayerContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"quoteDeliveryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativePriceQuote\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionInfo\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"quoteEVMDeliveryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativePriceQuote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetChainRefundPerGasUnused\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"quoteEVMDeliveryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativePriceQuote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetChainRefundPerGasUnused\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"currentChainAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"quoteNativeForChain\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"targetChainAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey\",\"name\":\"deliveryVaaKey\",\"type\":\"tuple\"},{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"newReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"newEncodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"newDeliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"resend\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey\",\"name\":\"deliveryVaaKey\",\"type\":\"tuple\"},{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"newReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newDeliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"resendToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"targetAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"refundAddress\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"send\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"targetAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"refundAddress\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"keyType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"encodedKey\",\"type\":\"bytes\"}],\"internalType\":\"struct MessageKey[]\",\"name\":\"messageKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"send\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"}],\"name\":\"sendPayloadToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"sendPayloadToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"sendToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"keyType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"encodedKey\",\"type\":\"bytes\"}],\"internalType\":\"struct MessageKey[]\",\"name\":\"messageKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"sendToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"}],\"name\":\"sendVaasToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"}],\"name\":\"sendVaasToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getDefaultDeliveryProvider()\":{\"returns\":{\"deliveryProvider\":\"The address of (the default delivery provider)'s contract on this source   chain. This must be a contract that implements IDeliveryProvider.\"}},\"quoteDeliveryPrice(uint16,uint256,bytes,address)\":{\"params\":{\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"encodedExecutionParameters\":\"encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"encodedExecutionInfo\":\"encoded information on how the delivery will be executed        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` and `targetChainRefundPerGasUnused`             (which is the amount of target chain currency that will be refunded per unit of gas unused,              if a refundAddress is specified)\",\"nativePriceQuote\":\"Price, in units of current chain currency, that the delivery provider charges to perform the relay\"}},\"quoteEVMDeliveryPrice(uint16,uint256,uint256)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"nativePriceQuote\":\"Price, in units of current chain currency, that the delivery provider charges to perform the relay\",\"targetChainRefundPerGasUnused\":\"amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified.         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain.\"}},\"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)\":{\"params\":{\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"nativePriceQuote\":\"Price, in units of current chain currency, that the delivery provider charges to perform the relay\",\"targetChainRefundPerGasUnused\":\"amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain.\"}},\"quoteNativeForChain(uint16,uint256,address)\":{\"params\":{\"currentChainAmount\":\"The value that `paymentForExtraReceiverValue` will be set to\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"targetChainAmount\":\"The amount such that if `targetAddress` will be called with `msg.value` equal to         receiverValue + targetChainAmount\"}},\"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)\":{\"params\":{\"deliveryVaaKey\":\"VaaKey identifying the wormhole message containing the        previously published delivery instructions\",\"newDeliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"newEncodedExecutionParameters\":\"new encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"newReceiverValue\":\"new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing redelivery instructions\"}},\"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)\":{\"params\":{\"deliveryVaaKey\":\"VaaKey identifying the wormhole message containing the        previously published delivery instructions\",\"newDeliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"newGasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider, to the refund chain and address specified in the original request\",\"newReceiverValue\":\"new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing redelivery instructions\"}},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"encodedExecutionParameters\":\"encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"encodedExecutionParameters\":\"encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"messageKeys\":\"Additional messagess to pass in as parameter in call to `targetAddress`\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"messageKeys\":\"Additional messagess to pass in as parameter in call to `targetAddress`\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}}},\"title\":\"IWormholeRelayerSend\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deliveryAttempted(bytes32)\":{\"notice\":\"Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted\"},\"deliveryFailureBlock(bytes32)\":{\"notice\":\"block number of the latest attempt to execute a delivery that failed\"},\"deliverySuccessBlock(bytes32)\":{\"notice\":\"block number at which a delivery was successfully executed\"},\"getDefaultDeliveryProvider()\":{\"notice\":\"Returns the address of the current default delivery provider\"},\"quoteDeliveryPrice(uint16,uint256,bytes,address)\":{\"notice\":\"Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\"},\"quoteEVMDeliveryPrice(uint16,uint256,uint256)\":{\"notice\":\"Returns the price to request a relay to chain `targetChain`, using the default delivery provider\"},\"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)\":{\"notice\":\"Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\"},\"quoteNativeForChain(uint16,uint256,address)\":{\"notice\":\"Returns the (extra) amount of target chain currency that `targetAddress` will be called with, if the `paymentForExtraReceiverValue` field is set to `currentChainAmount`\"},\"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)\":{\"notice\":\"Requests a previously published delivery instruction to be redelivered This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, newReceiverValue, newEncodedExecutionParameters, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - (For EVM_V1) newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - (For EVM_V1) newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`\"},\"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)\":{\"notice\":\"Requests a previously published delivery instruction to be redelivered (e.g. with a different delivery provider) This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, newReceiverValue, newGasLimit, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction\"},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue\"},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\"},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendPayloadToEvm` function with `refundChain` and `refundAddress` as parameters\"},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\"},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue\"},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and external messages specified by `messageKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\"},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendVaasToEvm` function with `refundChain` and `refundAddress` as parameters\"},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\"}},\"notice\":\"The interface to request deliveries\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IWormholeRelayer.sol\":\"IWormholeRelayerSend\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0x4a73a6cf88f501da70652d3b550ad599a5b75e028e82fb3315729882d97add9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://4552bc84e8c7f92c7b4eddd71ab7fe5273b265c90d1cbf5b901fa48dcbc383ec\",\"dweb:/ipfs/QmemXDq6UTMmfsg8vheB2NvUvXTgbXX9mYcxPM3z9MLqUG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deliveryAttempted(bytes32)": {
								"notice": "Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted"
							},
							"deliveryFailureBlock(bytes32)": {
								"notice": "block number of the latest attempt to execute a delivery that failed"
							},
							"deliverySuccessBlock(bytes32)": {
								"notice": "block number at which a delivery was successfully executed"
							},
							"getDefaultDeliveryProvider()": {
								"notice": "Returns the address of the current default delivery provider"
							},
							"quoteDeliveryPrice(uint16,uint256,bytes,address)": {
								"notice": "Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`"
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256)": {
								"notice": "Returns the price to request a relay to chain `targetChain`, using the default delivery provider"
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)": {
								"notice": "Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`"
							},
							"quoteNativeForChain(uint16,uint256,address)": {
								"notice": "Returns the (extra) amount of target chain currency that `targetAddress` will be called with, if the `paymentForExtraReceiverValue` field is set to `currentChainAmount`"
							},
							"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)": {
								"notice": "Requests a previously published delivery instruction to be redelivered This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, newReceiverValue, newEncodedExecutionParameters, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - (For EVM_V1) newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - (For EVM_V1) newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`"
							},
							"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)": {
								"notice": "Requests a previously published delivery instruction to be redelivered (e.g. with a different delivery provider) This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, newReceiverValue, newGasLimit, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction"
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue"
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!"
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendPayloadToEvm` function with `refundChain` and `refundAddress` as parameters"
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`"
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue"
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and external messages specified by `messageKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!"
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendVaasToEvm` function with `refundChain` and `refundAddress` as parameters"
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`"
							}
						},
						"notice": "The interface to request deliveries",
						"version": 1
					}
				}
			},
			"src/interfaces/cctp/IMessageTransmitter.sol": {
				"IAttestable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "attester",
									"type": "address"
								}
							],
							"name": "AttesterDisabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "attester",
									"type": "address"
								}
							],
							"name": "AttesterEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousAttesterManager",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAttesterManager",
									"type": "address"
								}
							],
							"name": "AttesterManagerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldSignatureThreshold",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newSignatureThreshold",
									"type": "uint256"
								}
							],
							"name": "SignatureThresholdUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "attesterManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "attester",
									"type": "address"
								}
							],
							"name": "disableAttester",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "attester",
									"type": "address"
								}
							],
							"name": "enableAttester",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getEnabledAttester",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumEnabledAttesters",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "attester",
									"type": "address"
								}
							],
							"name": "isEnabledAttester",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newSignatureThreshold",
									"type": "uint256"
								}
							],
							"name": "setSignatureThreshold",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAttesterManager",
									"type": "address"
								}
							],
							"name": "updateAttesterManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"attesterManager()": "9b0d94b7",
							"disableAttester(address)": "2d025080",
							"enableAttester(address)": "fae36879",
							"getEnabledAttester(uint256)": "beb673d8",
							"getNumEnabledAttesters()": "51079a53",
							"isEnabledAttester(address)": "7af82f60",
							"setSignatureThreshold(uint256)": "bbde5374",
							"updateAttesterManager(address)": "de7769d4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"}],\"name\":\"AttesterDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"}],\"name\":\"AttesterEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousAttesterManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAttesterManager\",\"type\":\"address\"}],\"name\":\"AttesterManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldSignatureThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSignatureThreshold\",\"type\":\"uint256\"}],\"name\":\"SignatureThresholdUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"attesterManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"}],\"name\":\"disableAttester\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"}],\"name\":\"enableAttester\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getEnabledAttester\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumEnabledAttesters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"}],\"name\":\"isEnabledAttester\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSignatureThreshold\",\"type\":\"uint256\"}],\"name\":\"setSignatureThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAttesterManager\",\"type\":\"address\"}],\"name\":\"updateAttesterManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/cctp/IMessageTransmitter.sol\":\"IAttestable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/cctp/IMessageTransmitter.sol\":{\"keccak256\":\"0x8736b2a5ff5324bc690e1878eeda9d7e7556520c6d76ce9a4f4fc7c48b57574f\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://afd602e25284682e26d3ab48820aeae6f8f836e7017d3924caa628a54356f27c\",\"dweb:/ipfs/QmW9P5jqggVW9hbaXx8xxKjvFY1q5yCNCiUYopMMxSBk7n\"]},\"src/interfaces/cctp/shared/IOwnable2Step.sol\":{\"keccak256\":\"0x3a28d75b5fc6308f2669672c0758447d081627902ce516faebc4774ded78d76e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://dca33ea2f95ae7752a315283b6df7d474f99b656fe5b2859fe6fea38328f196b\",\"dweb:/ipfs/QmevQThqioPtJ7E95z7hLdFQaPUUmdSq11Dm3gE9vwJa4x\"]},\"src/interfaces/cctp/shared/IPausable.sol\":{\"keccak256\":\"0xf877d8d6754f0a931dbabf9ae1a2ab0ca6bf78bb71f36304c5f100f8819b2d16\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://65d9141d8a4c1fc1ac5f3a4fdad32dfc1345fb2db148b7b653f1585e0f24f1fd\",\"dweb:/ipfs/QmZHJwn5NCseNHjY8b8FU3PzWDFpVFhvxyrP9b75GfDNkM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IMessageTransmitter": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "attester",
									"type": "address"
								}
							],
							"name": "AttesterDisabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "attester",
									"type": "address"
								}
							],
							"name": "AttesterEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousAttesterManager",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAttesterManager",
									"type": "address"
								}
							],
							"name": "AttesterManagerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "sourceDomain",
									"type": "uint32"
								},
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "nonce",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "sender",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "messageBody",
									"type": "bytes"
								}
							],
							"name": "MessageReceived",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "message",
									"type": "bytes"
								}
							],
							"name": "MessageSent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PauserChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldSignatureThreshold",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newSignatureThreshold",
									"type": "uint256"
								}
							],
							"name": "SignatureThresholdUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "attesterManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "attester",
									"type": "address"
								}
							],
							"name": "disableAttester",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "attester",
									"type": "address"
								}
							],
							"name": "enableAttester",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getEnabledAttester",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumEnabledAttesters",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "attester",
									"type": "address"
								}
							],
							"name": "isEnabledAttester",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "localDomain",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxMessageBodySize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextAvailableNonce",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pauser",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "message",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "attestation",
									"type": "bytes"
								}
							],
							"name": "receiveMessage",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "originalMessage",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "originalAttestation",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "newMessageBody",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "newDestinationCaller",
									"type": "bytes32"
								}
							],
							"name": "replaceMessage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "destinationDomain",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "messageBody",
									"type": "bytes"
								}
							],
							"name": "sendMessage",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "destinationDomain",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "destinationCaller",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "messageBody",
									"type": "bytes"
								}
							],
							"name": "sendMessageWithCaller",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newMaxMessageBodySize",
									"type": "uint256"
								}
							],
							"name": "setMaxMessageBodySize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newSignatureThreshold",
									"type": "uint256"
								}
							],
							"name": "setSignatureThreshold",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAttesterManager",
									"type": "address"
								}
							],
							"name": "updateAttesterManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPauser",
									"type": "address"
								}
							],
							"name": "updatePauser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "nonce",
									"type": "bytes32"
								}
							],
							"name": "usedNonces",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"attesterManager()": "9b0d94b7",
							"disableAttester(address)": "2d025080",
							"enableAttester(address)": "fae36879",
							"getEnabledAttester(uint256)": "beb673d8",
							"getNumEnabledAttesters()": "51079a53",
							"isEnabledAttester(address)": "7af82f60",
							"localDomain()": "8d3638f4",
							"maxMessageBodySize()": "af47b9bb",
							"nextAvailableNonce()": "8371744e",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"pauser()": "9fd0506d",
							"pendingOwner()": "e30c3978",
							"receiveMessage(bytes,bytes)": "57ecfd28",
							"replaceMessage(bytes,bytes,bytes,bytes32)": "b857b774",
							"sendMessage(uint32,bytes32,bytes)": "0ba469bc",
							"sendMessageWithCaller(uint32,bytes32,bytes32,bytes)": "f7259a75",
							"setMaxMessageBodySize(uint256)": "92492c68",
							"setSignatureThreshold(uint256)": "bbde5374",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"updateAttesterManager(address)": "de7769d4",
							"updatePauser(address)": "554bab3c",
							"usedNonces(bytes32)": "feb61724",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"}],\"name\":\"AttesterDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"}],\"name\":\"AttesterEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousAttesterManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAttesterManager\",\"type\":\"address\"}],\"name\":\"AttesterManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"sourceDomain\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"}],\"name\":\"MessageReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"MessageSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PauserChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldSignatureThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSignatureThreshold\",\"type\":\"uint256\"}],\"name\":\"SignatureThresholdUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"attesterManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"}],\"name\":\"disableAttester\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"}],\"name\":\"enableAttester\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getEnabledAttester\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumEnabledAttesters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"}],\"name\":\"isEnabledAttester\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"localDomain\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMessageBodySize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextAvailableNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"attestation\",\"type\":\"bytes\"}],\"name\":\"receiveMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"originalMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"originalAttestation\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"newMessageBody\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"newDestinationCaller\",\"type\":\"bytes32\"}],\"name\":\"replaceMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"}],\"name\":\"sendMessage\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"destinationCaller\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"}],\"name\":\"sendMessageWithCaller\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxMessageBodySize\",\"type\":\"uint256\"}],\"name\":\"setMaxMessageBodySize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSignatureThreshold\",\"type\":\"uint256\"}],\"name\":\"setSignatureThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAttesterManager\",\"type\":\"address\"}],\"name\":\"updateAttesterManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPauser\",\"type\":\"address\"}],\"name\":\"updatePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"name\":\"usedNonces\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/cctp/IMessageTransmitter.sol\":\"IMessageTransmitter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/cctp/IMessageTransmitter.sol\":{\"keccak256\":\"0x8736b2a5ff5324bc690e1878eeda9d7e7556520c6d76ce9a4f4fc7c48b57574f\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://afd602e25284682e26d3ab48820aeae6f8f836e7017d3924caa628a54356f27c\",\"dweb:/ipfs/QmW9P5jqggVW9hbaXx8xxKjvFY1q5yCNCiUYopMMxSBk7n\"]},\"src/interfaces/cctp/shared/IOwnable2Step.sol\":{\"keccak256\":\"0x3a28d75b5fc6308f2669672c0758447d081627902ce516faebc4774ded78d76e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://dca33ea2f95ae7752a315283b6df7d474f99b656fe5b2859fe6fea38328f196b\",\"dweb:/ipfs/QmevQThqioPtJ7E95z7hLdFQaPUUmdSq11Dm3gE9vwJa4x\"]},\"src/interfaces/cctp/shared/IPausable.sol\":{\"keccak256\":\"0xf877d8d6754f0a931dbabf9ae1a2ab0ca6bf78bb71f36304c5f100f8819b2d16\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://65d9141d8a4c1fc1ac5f3a4fdad32dfc1345fb2db148b7b653f1585e0f24f1fd\",\"dweb:/ipfs/QmZHJwn5NCseNHjY8b8FU3PzWDFpVFhvxyrP9b75GfDNkM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/cctp/ITokenMessenger.sol": {
				"ITokenMessenger": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "nonce",
									"type": "uint64"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "burnToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "depositor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "mintRecipient",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "destinationDomain",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "destinationTokenMessenger",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "destinationCaller",
									"type": "bytes32"
								}
							],
							"name": "DepositForBurn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "localMinter",
									"type": "address"
								}
							],
							"name": "LocalMinterAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "localMinter",
									"type": "address"
								}
							],
							"name": "LocalMinterRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "mintRecipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "mintToken",
									"type": "address"
								}
							],
							"name": "MintAndWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "domain",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "tokenMessenger",
									"type": "bytes32"
								}
							],
							"name": "RemoteTokenMessengerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "domain",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "tokenMessenger",
									"type": "bytes32"
								}
							],
							"name": "RemoteTokenMessengerRemoved",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newLocalMinter",
									"type": "address"
								}
							],
							"name": "addLocalMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "domain",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "tokenMessenger",
									"type": "bytes32"
								}
							],
							"name": "addRemoteTokenMessenger",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "destinationDomain",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "mintRecipient",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "burnToken",
									"type": "address"
								}
							],
							"name": "depositForBurn",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "nonce",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "destinationDomain",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "mintRecipient",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "burnToken",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "destinationCaller",
									"type": "bytes32"
								}
							],
							"name": "depositForBurnWithCaller",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "nonce",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "remoteDomain",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "sender",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "messageBody",
									"type": "bytes"
								}
							],
							"name": "handleReceiveMessage",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "localMessageTransmitter",
							"outputs": [
								{
									"internalType": "contract IMessageTransmitter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "localMinter",
							"outputs": [
								{
									"internalType": "contract ITokenMinter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "messageBodyVersion",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "domain",
									"type": "uint32"
								}
							],
							"name": "remoteTokenMessengers",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "removeLocalMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "domain",
									"type": "uint32"
								}
							],
							"name": "removeRemoteTokenMessenger",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "originalMessage",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "originalAttestation",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "newDestinationCaller",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "newMintRecipient",
									"type": "bytes32"
								}
							],
							"name": "replaceDepositForBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"addLocalMinter(address)": "8197beb9",
							"addRemoteTokenMessenger(uint32,bytes32)": "da87e448",
							"depositForBurn(uint256,uint32,bytes32,address)": "6fd3504e",
							"depositForBurnWithCaller(uint256,uint32,bytes32,address,bytes32)": "f856ddb6",
							"handleReceiveMessage(uint32,bytes32,bytes)": "96abeb70",
							"localMessageTransmitter()": "2c121921",
							"localMinter()": "cb75c11c",
							"messageBodyVersion()": "9cdbb181",
							"owner()": "8da5cb5b",
							"pendingOwner()": "e30c3978",
							"remoteTokenMessengers(uint32)": "82a5e665",
							"removeLocalMinter()": "91f17888",
							"removeRemoteTokenMessenger(uint32)": "f79fd08e",
							"replaceDepositForBurn(bytes,bytes,bytes32,bytes32)": "29a78e33",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burnToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"mintRecipient\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"destinationTokenMessenger\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"destinationCaller\",\"type\":\"bytes32\"}],\"name\":\"DepositForBurn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"localMinter\",\"type\":\"address\"}],\"name\":\"LocalMinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"localMinter\",\"type\":\"address\"}],\"name\":\"LocalMinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintToken\",\"type\":\"address\"}],\"name\":\"MintAndWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"tokenMessenger\",\"type\":\"bytes32\"}],\"name\":\"RemoteTokenMessengerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"tokenMessenger\",\"type\":\"bytes32\"}],\"name\":\"RemoteTokenMessengerRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newLocalMinter\",\"type\":\"address\"}],\"name\":\"addLocalMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"tokenMessenger\",\"type\":\"bytes32\"}],\"name\":\"addRemoteTokenMessenger\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"mintRecipient\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"burnToken\",\"type\":\"address\"}],\"name\":\"depositForBurn\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"mintRecipient\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"burnToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"destinationCaller\",\"type\":\"bytes32\"}],\"name\":\"depositForBurnWithCaller\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"remoteDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"}],\"name\":\"handleReceiveMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"localMessageTransmitter\",\"outputs\":[{\"internalType\":\"contract IMessageTransmitter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"localMinter\",\"outputs\":[{\"internalType\":\"contract ITokenMinter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageBodyVersion\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"}],\"name\":\"remoteTokenMessengers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLocalMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"}],\"name\":\"removeRemoteTokenMessenger\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"originalMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"originalAttestation\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"newDestinationCaller\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newMintRecipient\",\"type\":\"bytes32\"}],\"name\":\"replaceDepositForBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/cctp/ITokenMessenger.sol\":\"ITokenMessenger\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/cctp/IMessageTransmitter.sol\":{\"keccak256\":\"0x8736b2a5ff5324bc690e1878eeda9d7e7556520c6d76ce9a4f4fc7c48b57574f\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://afd602e25284682e26d3ab48820aeae6f8f836e7017d3924caa628a54356f27c\",\"dweb:/ipfs/QmW9P5jqggVW9hbaXx8xxKjvFY1q5yCNCiUYopMMxSBk7n\"]},\"src/interfaces/cctp/ITokenMessenger.sol\":{\"keccak256\":\"0x979aaeba90813930d383f90c6e0a793e043d46ac8f802cc0d1008699194194e9\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://de48971bbac71f0396d3b0e3885f9fc72d33dded2d10b3993588450ab9de85ce\",\"dweb:/ipfs/QmcUHyg5wSMY5cHFCenTu99QNT4W7UJB85B928iVzkwnds\"]},\"src/interfaces/cctp/ITokenMinter.sol\":{\"keccak256\":\"0x015329fe60852bdfcf92f4dff542dffda525cbd7d74626709f0f8c7347a8d181\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://f62c0c2d25333d745ecdc288ee3f1c69e60d684c963c04f5d8bb1be110ef5189\",\"dweb:/ipfs/QmdZRnUKDXzD6xP1b91YJyYQvdgH7sFfkro8AQyFVXXzhQ\"]},\"src/interfaces/cctp/shared/IOwnable2Step.sol\":{\"keccak256\":\"0x3a28d75b5fc6308f2669672c0758447d081627902ce516faebc4774ded78d76e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://dca33ea2f95ae7752a315283b6df7d474f99b656fe5b2859fe6fea38328f196b\",\"dweb:/ipfs/QmevQThqioPtJ7E95z7hLdFQaPUUmdSq11Dm3gE9vwJa4x\"]},\"src/interfaces/cctp/shared/IPausable.sol\":{\"keccak256\":\"0xf877d8d6754f0a931dbabf9ae1a2ab0ca6bf78bb71f36304c5f100f8819b2d16\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://65d9141d8a4c1fc1ac5f3a4fdad32dfc1345fb2db148b7b653f1585e0f24f1fd\",\"dweb:/ipfs/QmZHJwn5NCseNHjY8b8FU3PzWDFpVFhvxyrP9b75GfDNkM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/cctp/ITokenMinter.sol": {
				"ITokenController": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "burnLimitPerMessage",
									"type": "uint256"
								}
							],
							"name": "SetBurnLimitPerMessage",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenController",
									"type": "address"
								}
							],
							"name": "SetTokenController",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "localToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "remoteDomain",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "remoteToken",
									"type": "bytes32"
								}
							],
							"name": "TokenPairLinked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "localToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "remoteDomain",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "remoteToken",
									"type": "bytes32"
								}
							],
							"name": "TokenPairUnlinked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "burnLimitsPerMessage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "localToken",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "remoteDomain",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "remoteToken",
									"type": "bytes32"
								}
							],
							"name": "linkTokenPair",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "sourceIdHash",
									"type": "bytes32"
								}
							],
							"name": "remoteTokensToLocalTokens",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "localToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "burnLimitPerMessage",
									"type": "uint256"
								}
							],
							"name": "setMaxBurnAmountPerMessage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenController",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "localToken",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "remoteDomain",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "remoteToken",
									"type": "bytes32"
								}
							],
							"name": "unlinkTokenPair",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burnLimitsPerMessage(address)": "a56ec632",
							"linkTokenPair(address,uint32,bytes32)": "2b2b90e1",
							"remoteTokensToLocalTokens(bytes32)": "eed3b9da",
							"setMaxBurnAmountPerMessage(address,uint256)": "7235ea0c",
							"tokenController()": "eddd9d82",
							"unlinkTokenPair(address,uint32,bytes32)": "11b35fa4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnLimitPerMessage\",\"type\":\"uint256\"}],\"name\":\"SetBurnLimitPerMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenController\",\"type\":\"address\"}],\"name\":\"SetTokenController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"remoteDomain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"remoteToken\",\"type\":\"bytes32\"}],\"name\":\"TokenPairLinked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"remoteDomain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"remoteToken\",\"type\":\"bytes32\"}],\"name\":\"TokenPairUnlinked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"burnLimitsPerMessage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"remoteDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"remoteToken\",\"type\":\"bytes32\"}],\"name\":\"linkTokenPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"sourceIdHash\",\"type\":\"bytes32\"}],\"name\":\"remoteTokensToLocalTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"burnLimitPerMessage\",\"type\":\"uint256\"}],\"name\":\"setMaxBurnAmountPerMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"remoteDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"remoteToken\",\"type\":\"bytes32\"}],\"name\":\"unlinkTokenPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/cctp/ITokenMinter.sol\":\"ITokenController\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/cctp/ITokenMinter.sol\":{\"keccak256\":\"0x015329fe60852bdfcf92f4dff542dffda525cbd7d74626709f0f8c7347a8d181\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://f62c0c2d25333d745ecdc288ee3f1c69e60d684c963c04f5d8bb1be110ef5189\",\"dweb:/ipfs/QmdZRnUKDXzD6xP1b91YJyYQvdgH7sFfkro8AQyFVXXzhQ\"]},\"src/interfaces/cctp/shared/IOwnable2Step.sol\":{\"keccak256\":\"0x3a28d75b5fc6308f2669672c0758447d081627902ce516faebc4774ded78d76e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://dca33ea2f95ae7752a315283b6df7d474f99b656fe5b2859fe6fea38328f196b\",\"dweb:/ipfs/QmevQThqioPtJ7E95z7hLdFQaPUUmdSq11Dm3gE9vwJa4x\"]},\"src/interfaces/cctp/shared/IPausable.sol\":{\"keccak256\":\"0xf877d8d6754f0a931dbabf9ae1a2ab0ca6bf78bb71f36304c5f100f8819b2d16\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://65d9141d8a4c1fc1ac5f3a4fdad32dfc1345fb2db148b7b653f1585e0f24f1fd\",\"dweb:/ipfs/QmZHJwn5NCseNHjY8b8FU3PzWDFpVFhvxyrP9b75GfDNkM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ITokenMinter": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "localTokenMessenger",
									"type": "address"
								}
							],
							"name": "LocalTokenMessengerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "localTokenMessenger",
									"type": "address"
								}
							],
							"name": "LocalTokenMessengerRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PauserChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "burnLimitPerMessage",
									"type": "uint256"
								}
							],
							"name": "SetBurnLimitPerMessage",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenController",
									"type": "address"
								}
							],
							"name": "SetTokenController",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "localToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "remoteDomain",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "remoteToken",
									"type": "bytes32"
								}
							],
							"name": "TokenPairLinked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "localToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "remoteDomain",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "remoteToken",
									"type": "bytes32"
								}
							],
							"name": "TokenPairUnlinked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newLocalTokenMessenger",
									"type": "address"
								}
							],
							"name": "addLocalTokenMessenger",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "burnToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "burnAmount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "burnLimitsPerMessage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "remoteDomain",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "remoteToken",
									"type": "bytes32"
								}
							],
							"name": "getLocalToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "localToken",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "remoteDomain",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "remoteToken",
									"type": "bytes32"
								}
							],
							"name": "linkTokenPair",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "localTokenMessenger",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "sourceDomain",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "burnToken",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pauser",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "sourceIdHash",
									"type": "bytes32"
								}
							],
							"name": "remoteTokensToLocalTokens",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "removeLocalTokenMessenger",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "localToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "burnLimitPerMessage",
									"type": "uint256"
								}
							],
							"name": "setMaxBurnAmountPerMessage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newTokenController",
									"type": "address"
								}
							],
							"name": "setTokenController",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenController",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "localToken",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "remoteDomain",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "remoteToken",
									"type": "bytes32"
								}
							],
							"name": "unlinkTokenPair",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPauser",
									"type": "address"
								}
							],
							"name": "updatePauser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"addLocalTokenMessenger(address)": "36a816da",
							"burn(address,uint256)": "9dc29fac",
							"burnLimitsPerMessage(address)": "a56ec632",
							"getLocalToken(uint32,bytes32)": "78a0565e",
							"linkTokenPair(address,uint32,bytes32)": "2b2b90e1",
							"localTokenMessenger()": "770fc1f0",
							"mint(uint32,bytes32,address,uint256)": "d54de06f",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"pauser()": "9fd0506d",
							"pendingOwner()": "e30c3978",
							"remoteTokensToLocalTokens(bytes32)": "eed3b9da",
							"removeLocalTokenMessenger()": "cec74c03",
							"setMaxBurnAmountPerMessage(address,uint256)": "7235ea0c",
							"setTokenController(address)": "e102baab",
							"tokenController()": "eddd9d82",
							"transferOwnership(address)": "f2fde38b",
							"unlinkTokenPair(address,uint32,bytes32)": "11b35fa4",
							"unpause()": "3f4ba83a",
							"updatePauser(address)": "554bab3c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"localTokenMessenger\",\"type\":\"address\"}],\"name\":\"LocalTokenMessengerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"localTokenMessenger\",\"type\":\"address\"}],\"name\":\"LocalTokenMessengerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PauserChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnLimitPerMessage\",\"type\":\"uint256\"}],\"name\":\"SetBurnLimitPerMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenController\",\"type\":\"address\"}],\"name\":\"SetTokenController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"remoteDomain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"remoteToken\",\"type\":\"bytes32\"}],\"name\":\"TokenPairLinked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"remoteDomain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"remoteToken\",\"type\":\"bytes32\"}],\"name\":\"TokenPairUnlinked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newLocalTokenMessenger\",\"type\":\"address\"}],\"name\":\"addLocalTokenMessenger\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"burnToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"burnLimitsPerMessage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"remoteDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"remoteToken\",\"type\":\"bytes32\"}],\"name\":\"getLocalToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"remoteDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"remoteToken\",\"type\":\"bytes32\"}],\"name\":\"linkTokenPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"localTokenMessenger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"sourceDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"burnToken\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"sourceIdHash\",\"type\":\"bytes32\"}],\"name\":\"remoteTokensToLocalTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLocalTokenMessenger\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"burnLimitPerMessage\",\"type\":\"uint256\"}],\"name\":\"setMaxBurnAmountPerMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTokenController\",\"type\":\"address\"}],\"name\":\"setTokenController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"remoteDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"remoteToken\",\"type\":\"bytes32\"}],\"name\":\"unlinkTokenPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPauser\",\"type\":\"address\"}],\"name\":\"updatePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/cctp/ITokenMinter.sol\":\"ITokenMinter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/cctp/ITokenMinter.sol\":{\"keccak256\":\"0x015329fe60852bdfcf92f4dff542dffda525cbd7d74626709f0f8c7347a8d181\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://f62c0c2d25333d745ecdc288ee3f1c69e60d684c963c04f5d8bb1be110ef5189\",\"dweb:/ipfs/QmdZRnUKDXzD6xP1b91YJyYQvdgH7sFfkro8AQyFVXXzhQ\"]},\"src/interfaces/cctp/shared/IOwnable2Step.sol\":{\"keccak256\":\"0x3a28d75b5fc6308f2669672c0758447d081627902ce516faebc4774ded78d76e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://dca33ea2f95ae7752a315283b6df7d474f99b656fe5b2859fe6fea38328f196b\",\"dweb:/ipfs/QmevQThqioPtJ7E95z7hLdFQaPUUmdSq11Dm3gE9vwJa4x\"]},\"src/interfaces/cctp/shared/IPausable.sol\":{\"keccak256\":\"0xf877d8d6754f0a931dbabf9ae1a2ab0ca6bf78bb71f36304c5f100f8819b2d16\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://65d9141d8a4c1fc1ac5f3a4fdad32dfc1345fb2db148b7b653f1585e0f24f1fd\",\"dweb:/ipfs/QmZHJwn5NCseNHjY8b8FU3PzWDFpVFhvxyrP9b75GfDNkM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/cctp/shared/IOwnable2Step.sol": {
				"IOwnable2Step": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"pendingOwner()": "e30c3978",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/cctp/shared/IOwnable2Step.sol\":\"IOwnable2Step\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/cctp/shared/IOwnable2Step.sol\":{\"keccak256\":\"0x3a28d75b5fc6308f2669672c0758447d081627902ce516faebc4774ded78d76e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://dca33ea2f95ae7752a315283b6df7d474f99b656fe5b2859fe6fea38328f196b\",\"dweb:/ipfs/QmevQThqioPtJ7E95z7hLdFQaPUUmdSq11Dm3gE9vwJa4x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/cctp/shared/IPausable.sol": {
				"IPausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PauserChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pauser",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPauser",
									"type": "address"
								}
							],
							"name": "updatePauser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"pauser()": "9fd0506d",
							"unpause()": "3f4ba83a",
							"updatePauser(address)": "554bab3c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PauserChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPauser\",\"type\":\"address\"}],\"name\":\"updatePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/cctp/shared/IPausable.sol\":\"IPausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/cctp/shared/IPausable.sol\":{\"keccak256\":\"0xf877d8d6754f0a931dbabf9ae1a2ab0ca6bf78bb71f36304c5f100f8819b2d16\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://65d9141d8a4c1fc1ac5f3a4fdad32dfc1345fb2db148b7b653f1585e0f24f1fd\",\"dweb:/ipfs/QmZHJwn5NCseNHjY8b8FU3PzWDFpVFhvxyrP9b75GfDNkM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/token/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/token/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/token/IERC20.sol\":{\"keccak256\":\"0xe75b807a38a1f24481fcc5783ec1c2cee288a6bf4475f4cdc1363b408fb34f56\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://dfa2f3989344e0196482a471af69b582123a9671a088386c77d63cf3ab567fcc\",\"dweb:/ipfs/QmPAxkdauaxByqPbsXqLtNMikRm45bdA1jnRRuwBBcCXbP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"src/Utils.sol": {
				"ast": {
					"absolutePath": "src/Utils.sol",
					"exportedSymbols": {
						"NotAnEvmAddress": [
							5
						],
						"fromUniversalAddress": [
							46
						],
						"reRevert": [
							54
						],
						"toUniversalAddress": [
							26
						]
					},
					"id": 55,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "38:24:0"
						},
						{
							"errorSelector": "33b960d0",
							"id": 5,
							"name": "NotAnEvmAddress",
							"nameLocation": "70:15:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 5,
										"src": "86:7:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 2,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "86:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "85:9:0"
							},
							"src": "64:31:0"
						},
						{
							"body": {
								"id": 25,
								"nodeType": "Block",
								"src": "176:54:0",
								"statements": [
									{
										"expression": {
											"id": 23,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftHandSide": {
												"id": 12,
												"name": "universalAddr",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 10,
												"src": "180:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"nodeType": "Assignment",
											"operator": "=",
											"rightHandSide": {
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 19,
																		"name": "addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 7,
																		"src": "220:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 18,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "212:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 17,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "212:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "212:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "204:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 15,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "204:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "204:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													],
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_bytes32_$",
														"typeString": "type(bytes32)"
													},
													"typeName": {
														"id": 13,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "196:7:0",
														"typeDescriptions": {}
													}
												},
												"id": 22,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "typeConversion",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "196:31:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"src": "180:47:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"id": 24,
										"nodeType": "ExpressionStatement",
										"src": "180:47:0"
									}
								]
							},
							"id": 26,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "toUniversalAddress",
							"nameLocation": "106:18:0",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 8,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 7,
										"mutability": "mutable",
										"name": "addr",
										"nameLocation": "133:4:0",
										"nodeType": "VariableDeclaration",
										"scope": 26,
										"src": "125:12:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "125:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "124:14:0"
							},
							"returnParameters": {
								"id": 11,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 10,
										"mutability": "mutable",
										"name": "universalAddr",
										"nameLocation": "161:13:0",
										"nodeType": "VariableDeclaration",
										"scope": 26,
										"src": "153:21:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 9,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "153:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "152:23:0"
							},
							"scope": 55,
							"src": "97:133:0",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 45,
								"nodeType": "Block",
								"src": "313:141:0",
								"statements": [
									{
										"condition": {
											"commonType": {
												"typeIdentifier": "t_bytes12",
												"typeString": "bytes12"
											},
											"id": 38,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"arguments": [
													{
														"id": 35,
														"name": "universalAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "329:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													],
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_bytes12_$",
														"typeString": "type(bytes12)"
													},
													"typeName": {
														"id": 33,
														"name": "bytes12",
														"nodeType": "ElementaryTypeName",
														"src": "321:7:0",
														"typeDescriptions": {}
													}
												},
												"id": 36,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "typeConversion",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "321:22:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bytes12",
													"typeString": "bytes12"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "!=",
											"rightExpression": {
												"hexValue": "30",
												"id": 37,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "347:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											},
											"src": "321:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 43,
										"nodeType": "IfStatement",
										"src": "317:74:0",
										"trueBody": {
											"errorCall": {
												"arguments": [
													{
														"id": 40,
														"name": "universalAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "377:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													],
													"id": 39,
													"name": "NotAnEvmAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5,
													"src": "361:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
														"typeString": "function (bytes32) pure returns (error)"
													}
												},
												"id": 41,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "361:30:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_error",
													"typeString": "error"
												}
											},
											"id": 42,
											"nodeType": "RevertStatement",
											"src": "354:37:0"
										}
									},
									{
										"AST": {
											"nativeSrc": "421:31:0",
											"nodeType": "YulBlock",
											"src": "421:31:0",
											"statements": [
												{
													"nativeSrc": "427:21:0",
													"nodeType": "YulAssignment",
													"src": "427:21:0",
													"value": {
														"name": "universalAddr",
														"nativeSrc": "435:13:0",
														"nodeType": "YulIdentifier",
														"src": "435:13:0"
													},
													"variableNames": [
														{
															"name": "addr",
															"nativeSrc": "427:4:0",
															"nodeType": "YulIdentifier",
															"src": "427:4:0"
														}
													]
												}
											]
										},
										"evmVersion": "cancun",
										"externalReferences": [
											{
												"declaration": 31,
												"isOffset": false,
												"isSlot": false,
												"src": "427:4:0",
												"valueSize": 1
											},
											{
												"declaration": 28,
												"isOffset": false,
												"isSlot": false,
												"src": "435:13:0",
												"valueSize": 1
											}
										],
										"flags": [
											"memory-safe"
										],
										"id": 44,
										"nodeType": "InlineAssembly",
										"src": "396:56:0"
									}
								]
							},
							"id": 46,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "fromUniversalAddress",
							"nameLocation": "241:20:0",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 29,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 28,
										"mutability": "mutable",
										"name": "universalAddr",
										"nameLocation": "270:13:0",
										"nodeType": "VariableDeclaration",
										"scope": 46,
										"src": "262:21:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 27,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "262:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "261:23:0"
							},
							"returnParameters": {
								"id": 32,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 31,
										"mutability": "mutable",
										"name": "addr",
										"nameLocation": "307:4:0",
										"nodeType": "VariableDeclaration",
										"scope": 46,
										"src": "299:12:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 30,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "299:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "298:14:0"
							},
							"scope": 55,
							"src": "232:222:0",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 53,
								"nodeType": "Block",
								"src": "626:73:0",
								"statements": [
									{
										"AST": {
											"nativeSrc": "655:42:0",
											"nodeType": "YulBlock",
											"src": "655:42:0",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "err",
																		"nativeSrc": "672:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "672:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "677:2:0",
																		"nodeType": "YulLiteral",
																		"src": "677:2:0",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "668:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:0"
																},
																"nativeSrc": "668:12:0",
																"nodeType": "YulFunctionCall",
																"src": "668:12:0"
															},
															{
																"arguments": [
																	{
																		"name": "err",
																		"nativeSrc": "688:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "688:3:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "682:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "682:5:0"
																},
																"nativeSrc": "682:10:0",
																"nodeType": "YulFunctionCall",
																"src": "682:10:0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "661:6:0",
															"nodeType": "YulIdentifier",
															"src": "661:6:0"
														},
														"nativeSrc": "661:32:0",
														"nodeType": "YulFunctionCall",
														"src": "661:32:0"
													},
													"nativeSrc": "661:32:0",
													"nodeType": "YulExpressionStatement",
													"src": "661:32:0"
												}
											]
										},
										"evmVersion": "cancun",
										"externalReferences": [
											{
												"declaration": 49,
												"isOffset": false,
												"isSlot": false,
												"src": "672:3:0",
												"valueSize": 1
											},
											{
												"declaration": 49,
												"isOffset": false,
												"isSlot": false,
												"src": "688:3:0",
												"valueSize": 1
											}
										],
										"flags": [
											"memory-safe"
										],
										"id": 52,
										"nodeType": "InlineAssembly",
										"src": "630:67:0"
									}
								]
							},
							"documentation": {
								"id": 47,
								"nodeType": "StructuredDocumentation",
								"src": "456:128:0",
								"text": " Reverts with a given buffer data.\n Meant to be used to easily bubble up errors from low level calls when they fail."
							},
							"id": 54,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "reRevert",
							"nameLocation": "594:8:0",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 50,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 49,
										"mutability": "mutable",
										"name": "err",
										"nameLocation": "616:3:0",
										"nodeType": "VariableDeclaration",
										"scope": 54,
										"src": "603:16:0",
										"stateVariable": false,
										"storageLocation": "memory",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_memory_ptr",
											"typeString": "bytes"
										},
										"typeName": {
											"id": 48,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "603:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "602:18:0"
							},
							"returnParameters": {
								"id": 51,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "626:0:0"
							},
							"scope": 55,
							"src": "585:114:0",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						}
					],
					"src": "38:662:0"
				},
				"id": 0
			},
			"src/WormholeRelayer/Base.sol": {
				"ast": {
					"absolutePath": "src/WormholeRelayer/Base.sol",
					"exportedSymbols": {
						"Base": [
							153
						],
						"CCTP_KEY_TYPE": [
							919
						],
						"DeliveryProviderCannotReceivePayment": [
							1340
						],
						"DeliveryProviderDoesNotSupportMessageKeyType": [
							1344
						],
						"DeliveryProviderDoesNotSupportTargetChain": [
							1338
						],
						"IWormhole": [
							884
						],
						"IWormholeReceiver": [
							903
						],
						"IWormholeRelayer": [
							1321
						],
						"IWormholeRelayerBase": [
							964
						],
						"IWormholeRelayerDelivery": [
							1316
						],
						"IWormholeRelayerSend": [
							1266
						],
						"InsufficientRelayerFunds": [
							1410
						],
						"InvalidDeliveryVaa": [
							1374
						],
						"InvalidEmitter": [
							1382
						],
						"InvalidMsgValue": [
							1330
						],
						"InvalidOverrideGasLimit": [
							1400
						],
						"InvalidOverrideReceiverValue": [
							1402
						],
						"InvalidOverrideRefundPerGasUnused": [
							1404
						],
						"InvalidPayloadId": [
							1356
						],
						"InvalidPayloadLength": [
							1362
						],
						"InvalidVaaKeyType": [
							1366
						],
						"MessageKey": [
							924
						],
						"MessageKeysLengthDoesNotMatchMessagesLength": [
							1388
						],
						"NotAnEvmAddress": [
							5
						],
						"RETURNDATA_TRUNCATION_THRESHOLD": [
							1324
						],
						"ReentrantDelivery": [
							1350
						],
						"RequestedGasLimitTooLow": [
							1332
						],
						"RequesterNotWormholeRelayer": [
							1394
						],
						"TargetChainIsNotThisChain": [
							1398
						],
						"TooManyMessageKeys": [
							1370
						],
						"VAA_KEY_TYPE": [
							916
						],
						"VaaKey": [
							913
						],
						"VaaKeysDoNotMatchVaas": [
							1392
						],
						"fromUniversalAddress": [
							46
						],
						"reRevert": [
							54
						],
						"toUniversalAddress": [
							26
						]
					},
					"id": 154,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 56,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:1"
						},
						{
							"absolutePath": "src/interfaces/IWormholeRelayer.sol",
							"file": "../interfaces/IWormholeRelayer.sol",
							"id": 57,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 154,
							"sourceUnit": 1411,
							"src": "183:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/IWormhole.sol",
							"file": "../interfaces/IWormhole.sol",
							"id": 58,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 154,
							"sourceUnit": 885,
							"src": "228:37:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/Utils.sol",
							"file": "../Utils.sol",
							"id": 59,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 154,
							"sourceUnit": 55,
							"src": "266:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/IWormholeReceiver.sol",
							"file": "../interfaces/IWormholeReceiver.sol",
							"id": 60,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 154,
							"sourceUnit": 904,
							"src": "289:45:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Base",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 153,
							"linearizedBaseContracts": [
								153
							],
							"name": "Base",
							"nameLocation": "355:4:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "da25b725",
									"id": 63,
									"mutability": "immutable",
									"name": "wormholeRelayer",
									"nameLocation": "398:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 153,
									"src": "364:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWormholeRelayer_$1321",
										"typeString": "contract IWormholeRelayer"
									},
									"typeName": {
										"id": 62,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 61,
											"name": "IWormholeRelayer",
											"nameLocations": [
												"364:16:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1321,
											"src": "364:16:1"
										},
										"referencedDeclaration": 1321,
										"src": "364:16:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWormholeRelayer_$1321",
											"typeString": "contract IWormholeRelayer"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "84acd1bb",
									"id": 66,
									"mutability": "immutable",
									"name": "wormhole",
									"nameLocation": "444:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 153,
									"src": "417:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWormhole_$884",
										"typeString": "contract IWormhole"
									},
									"typeName": {
										"id": 65,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 64,
											"name": "IWormhole",
											"nameLocations": [
												"417:9:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 884,
											"src": "417:9:1"
										},
										"referencedDeclaration": 884,
										"src": "417:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWormhole_$884",
											"typeString": "contract IWormhole"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 68,
									"mutability": "mutable",
									"name": "registrationOwner",
									"nameLocation": "465:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 153,
									"src": "457:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 67,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "457:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 72,
									"mutability": "mutable",
									"name": "registeredSenders",
									"nameLocation": "513:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 153,
									"src": "486:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint16_$_t_bytes32_$",
										"typeString": "mapping(uint16 => bytes32)"
									},
									"typeName": {
										"id": 71,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 69,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "494:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"nodeType": "Mapping",
										"src": "486:26:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint16_$_t_bytes32_$",
											"typeString": "mapping(uint16 => bytes32)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 70,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "504:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "592:136:1",
										"statements": [
											{
												"expression": {
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 79,
														"name": "wormholeRelayer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "598:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWormholeRelayer_$1321",
															"typeString": "contract IWormholeRelayer"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 81,
																"name": "_wormholeRelayer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "633:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 80,
															"name": "IWormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "616:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IWormholeRelayer_$1321_$",
																"typeString": "type(contract IWormholeRelayer)"
															}
														},
														"id": 82,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "616:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWormholeRelayer_$1321",
															"typeString": "contract IWormholeRelayer"
														}
													},
													"src": "598:52:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWormholeRelayer_$1321",
														"typeString": "contract IWormholeRelayer"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "598:52:1"
											},
											{
												"expression": {
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 85,
														"name": "wormhole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "656:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWormhole_$884",
															"typeString": "contract IWormhole"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 87,
																"name": "_wormhole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 76,
																"src": "677:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 86,
															"name": "IWormhole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "667:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IWormhole_$884_$",
																"typeString": "type(contract IWormhole)"
															}
														},
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "667:20:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWormhole_$884",
															"typeString": "contract IWormhole"
														}
													},
													"src": "656:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWormhole_$884",
														"typeString": "contract IWormhole"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "656:31:1"
											},
											{
												"expression": {
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 91,
														"name": "registrationOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "693:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 92,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "713:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "717:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "713:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "693:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "693:30:1"
											}
										]
									},
									"id": 97,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "_wormholeRelayer",
												"nameLocation": "555:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "547:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "_wormhole",
												"nameLocation": "581:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "573:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:45:1"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:0:1"
									},
									"scope": 153,
									"src": "535:193:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "763:121:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 100,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "784:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "788:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "784:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 104,
																		"name": "wormholeRelayer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 63,
																		"src": "806:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWormholeRelayer_$1321",
																			"typeString": "contract IWormholeRelayer"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IWormholeRelayer_$1321",
																			"typeString": "contract IWormholeRelayer"
																		}
																	],
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "798:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 102,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "798:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "798:24:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "784:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d73672e73656e646572206973206e6f7420576f726d686f6c652052656c61796572",
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "830:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a784df99b54c4e5b96bc28db86cb1d2df9d65bd64e07dfeb9d77bc81539828a1",
																"typeString": "literal_string \"Msg.sender is not Wormhole Relayer\""
															},
															"value": "Msg.sender is not Wormhole Relayer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a784df99b54c4e5b96bc28db86cb1d2df9d65bd64e07dfeb9d77bc81539828a1",
																"typeString": "literal_string \"Msg.sender is not Wormhole Relayer\""
															}
														],
														"id": 99,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "769:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "769:103:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "769:103:1"
											},
											{
												"id": 110,
												"nodeType": "PlaceholderStatement",
												"src": "878:1:1"
											}
										]
									},
									"id": 112,
									"name": "onlyWormholeRelayer",
									"nameLocation": "741:19:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "760:2:1"
									},
									"src": "732:152:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "959:117:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 119,
																	"name": "registeredSenders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "980:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint16_$_t_bytes32_$",
																		"typeString": "mapping(uint16 => bytes32)"
																	}
																},
																"id": 121,
																"indexExpression": {
																	"id": 120,
																	"name": "sourceChain",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "998:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "980:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 122,
																"name": "sourceAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "1014:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "980:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420726567697374657265642073656e646572",
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1035:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45c7780caa14c78da314fdccf7a10285ededa4af94cdba7fd53928c53e2adf7b",
																"typeString": "literal_string \"Not registered sender\""
															},
															"value": "Not registered sender"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45c7780caa14c78da314fdccf7a10285ededa4af94cdba7fd53928c53e2adf7b",
																"typeString": "literal_string \"Not registered sender\""
															}
														],
														"id": 118,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "965:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "965:99:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "965:99:1"
											},
											{
												"id": 127,
												"nodeType": "PlaceholderStatement",
												"src": "1070:1:1"
											}
										]
									},
									"id": 129,
									"name": "isRegisteredSender",
									"nameLocation": "897:18:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "923:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "916:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 113,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "916:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "944:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "936:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 115,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "915:43:1"
									},
									"src": "888:188:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "1493:161:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 138,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1514:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1518:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1514:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 140,
																"name": "registrationOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "1528:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1514:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616c6c6f77656420746f2073657420726567697374657265642073656e646572",
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1553:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af64e1436a7704ba26fb37b7d363f0e4cd33d85e327e95510c2c8ad50943871e",
																"typeString": "literal_string \"Not allowed to set registered sender\""
															},
															"value": "Not allowed to set registered sender"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af64e1436a7704ba26fb37b7d363f0e4cd33d85e327e95510c2c8ad50943871e",
																"typeString": "literal_string \"Not allowed to set registered sender\""
															}
														],
														"id": 137,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1499:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1499:98:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "1499:98:1"
											},
											{
												"expression": {
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 145,
															"name": "registeredSenders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "1603:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint16_$_t_bytes32_$",
																"typeString": "mapping(uint16 => bytes32)"
															}
														},
														"id": 147,
														"indexExpression": {
															"id": 146,
															"name": "sourceChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "1621:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1603:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 148,
														"name": "sourceAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "1636:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1603:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "1603:46:1"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "1080:319:1",
										"text": " Sets the registered address for 'sourceChain' to 'sourceAddress'\n So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid\n Assumes only one sender per chain is valid\n Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
									},
									"functionSelector": "dd12d68b",
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setRegisteredSender",
									"nameLocation": "1411:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "1443:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1436:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 131,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1436:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "1468:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1460:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 133,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1430:55:1"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1493:0:1"
									},
									"scope": 153,
									"src": "1402:252:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 154,
							"src": "337:1319:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:1620:1"
				},
				"id": 1
			},
			"src/WormholeRelayer/CCTPBase.sol": {
				"ast": {
					"absolutePath": "src/WormholeRelayer/CCTPBase.sol",
					"exportedSymbols": {
						"Base": [
							153
						],
						"CCTPBase": [
							222
						],
						"CCTPMessageLib": [
							170
						],
						"CCTPReceiver": [
							568
						],
						"CCTPSender": [
							430
						],
						"CCTP_KEY_TYPE": [
							919
						],
						"DeliveryProviderCannotReceivePayment": [
							1340
						],
						"DeliveryProviderDoesNotSupportMessageKeyType": [
							1344
						],
						"DeliveryProviderDoesNotSupportTargetChain": [
							1338
						],
						"IAttestable": [
							1481
						],
						"IERC20": [
							2002
						],
						"IMessageTransmitter": [
							1580
						],
						"IOwnable2Step": [
							1901
						],
						"IPausable": [
							1933
						],
						"ITokenMessenger": [
							1731
						],
						"ITokenMinter": [
							1868
						],
						"IWormhole": [
							884
						],
						"IWormholeReceiver": [
							903
						],
						"IWormholeRelayer": [
							1321
						],
						"IWormholeRelayerBase": [
							964
						],
						"IWormholeRelayerDelivery": [
							1316
						],
						"IWormholeRelayerSend": [
							1266
						],
						"InsufficientRelayerFunds": [
							1410
						],
						"InvalidDeliveryVaa": [
							1374
						],
						"InvalidEmitter": [
							1382
						],
						"InvalidMsgValue": [
							1330
						],
						"InvalidOverrideGasLimit": [
							1400
						],
						"InvalidOverrideReceiverValue": [
							1402
						],
						"InvalidOverrideRefundPerGasUnused": [
							1404
						],
						"InvalidPayloadId": [
							1356
						],
						"InvalidPayloadLength": [
							1362
						],
						"InvalidVaaKeyType": [
							1366
						],
						"MessageKey": [
							924
						],
						"MessageKeysLengthDoesNotMatchMessagesLength": [
							1388
						],
						"NotAnEvmAddress": [
							5
						],
						"RETURNDATA_TRUNCATION_THRESHOLD": [
							1324
						],
						"ReentrantDelivery": [
							1350
						],
						"RequestedGasLimitTooLow": [
							1332
						],
						"RequesterNotWormholeRelayer": [
							1394
						],
						"TargetChainIsNotThisChain": [
							1398
						],
						"TooManyMessageKeys": [
							1370
						],
						"VAA_KEY_TYPE": [
							916
						],
						"VaaKey": [
							913
						],
						"VaaKeysDoNotMatchVaas": [
							1392
						],
						"fromUniversalAddress": [
							46
						],
						"reRevert": [
							54
						],
						"toUniversalAddress": [
							26
						]
					},
					"id": 569,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 155,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:2"
						},
						{
							"absolutePath": "src/interfaces/token/IERC20.sol",
							"file": "../interfaces/token/IERC20.sol",
							"id": 156,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 569,
							"sourceUnit": 2003,
							"src": "63:40:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/cctp/ITokenMessenger.sol",
							"file": "../interfaces/cctp/ITokenMessenger.sol",
							"id": 157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 569,
							"sourceUnit": 1732,
							"src": "104:48:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/cctp/IMessageTransmitter.sol",
							"file": "../interfaces/cctp/IMessageTransmitter.sol",
							"id": 158,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 569,
							"sourceUnit": 1581,
							"src": "153:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/WormholeRelayer/Base.sol",
							"file": "./Base.sol",
							"id": 159,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 569,
							"sourceUnit": 154,
							"src": "207:20:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CCTPMessageLib",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "CCTPMessageLib",
							"nameLocation": "237:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "CCTPMessageLib.CCTPKey",
									"id": 164,
									"members": [
										{
											"constant": false,
											"id": 161,
											"mutability": "mutable",
											"name": "domain",
											"nameLocation": "675:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 164,
											"src": "668:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 160,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "668:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 163,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "694:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 164,
											"src": "687:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 162,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "687:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CCTPKey",
									"nameLocation": "654:7:2",
									"nodeType": "StructDefinition",
									"scope": 170,
									"src": "647:57:2",
									"visibility": "public"
								},
								{
									"canonicalName": "CCTPMessageLib.CCTPMessage",
									"id": 169,
									"members": [
										{
											"constant": false,
											"id": 166,
											"mutability": "mutable",
											"name": "message",
											"nameLocation": "789:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 169,
											"src": "783:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 165,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "783:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 168,
											"mutability": "mutable",
											"name": "signature",
											"nameLocation": "808:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 169,
											"src": "802:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 167,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "802:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CCTPMessage",
									"nameLocation": "765:11:2",
									"nodeType": "StructDefinition",
									"scope": 170,
									"src": "758:64:2",
									"visibility": "public"
								}
							],
							"scope": 569,
							"src": "229:595:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 171,
										"name": "Base",
										"nameLocations": [
											"856:4:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 153,
										"src": "856:4:2"
									},
									"id": 172,
									"nodeType": "InheritanceSpecifier",
									"src": "856:4:2"
								}
							],
							"canonicalName": "CCTPBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 222,
							"linearizedBaseContracts": [
								222,
								153
							],
							"name": "CCTPBase",
							"nameLocation": "844:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 175,
									"mutability": "immutable",
									"name": "circleTokenMessenger",
									"nameLocation": "891:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 222,
									"src": "865:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ITokenMessenger_$1731",
										"typeString": "contract ITokenMessenger"
									},
									"typeName": {
										"id": 174,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 173,
											"name": "ITokenMessenger",
											"nameLocations": [
												"865:15:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1731,
											"src": "865:15:2"
										},
										"referencedDeclaration": 1731,
										"src": "865:15:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ITokenMessenger_$1731",
											"typeString": "contract ITokenMessenger"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 178,
									"mutability": "immutable",
									"name": "circleMessageTransmitter",
									"nameLocation": "945:24:2",
									"nodeType": "VariableDeclaration",
									"scope": 222,
									"src": "915:54:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMessageTransmitter_$1580",
										"typeString": "contract IMessageTransmitter"
									},
									"typeName": {
										"id": 177,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 176,
											"name": "IMessageTransmitter",
											"nameLocations": [
												"915:19:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1580,
											"src": "915:19:2"
										},
										"referencedDeclaration": 1580,
										"src": "915:19:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMessageTransmitter_$1580",
											"typeString": "contract IMessageTransmitter"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 180,
									"mutability": "immutable",
									"name": "USDC",
									"nameLocation": "991:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 222,
									"src": "973:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 179,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "973:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 182,
									"mutability": "mutable",
									"name": "cctpConfigurationOwner",
									"nameLocation": "1007:22:2",
									"nodeType": "VariableDeclaration",
									"scope": 222,
									"src": "999:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 181,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "999:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "1230:210:2",
										"statements": [
											{
												"expression": {
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 199,
														"name": "circleTokenMessenger",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "1236:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokenMessenger_$1731",
															"typeString": "contract ITokenMessenger"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 201,
																"name": "_circleTokenMessenger",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "1275:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 200,
															"name": "ITokenMessenger",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "1259:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ITokenMessenger_$1731_$",
																"typeString": "type(contract ITokenMessenger)"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1259:38:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokenMessenger_$1731",
															"typeString": "contract ITokenMessenger"
														}
													},
													"src": "1236:61:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITokenMessenger_$1731",
														"typeString": "contract ITokenMessenger"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "1236:61:2"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 205,
														"name": "circleMessageTransmitter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "1303:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMessageTransmitter_$1580",
															"typeString": "contract IMessageTransmitter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 207,
																"name": "_circleMessageTransmitter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "1350:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 206,
															"name": "IMessageTransmitter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "1330:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IMessageTransmitter_$1580_$",
																"typeString": "type(contract IMessageTransmitter)"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1330:46:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMessageTransmitter_$1580",
															"typeString": "contract IMessageTransmitter"
														}
													},
													"src": "1303:73:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMessageTransmitter_$1580",
														"typeString": "contract IMessageTransmitter"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "1303:73:2"
											},
											{
												"expression": {
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 211,
														"name": "USDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "1382:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 212,
														"name": "_USDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1389:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1382:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "1382:12:2"
											},
											{
												"expression": {
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 215,
														"name": "cctpConfigurationOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "1400:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 216,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1425:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1429:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1425:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1400:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "1400:35:2"
											}
										]
									},
									"id": 221,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 195,
													"name": "_wormholeRelayer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 184,
													"src": "1201:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 196,
													"name": "_wormhole",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 186,
													"src": "1219:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 197,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 194,
												"name": "Base",
												"nameLocations": [
													"1196:4:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 153,
												"src": "1196:4:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1196:33:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "_wormholeRelayer",
												"nameLocation": "1059:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1051:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "_wormhole",
												"nameLocation": "1089:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1081:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1081:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "_circleMessageTransmitter",
												"nameLocation": "1112:25:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1104:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "_circleTokenMessenger",
												"nameLocation": "1151:21:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1143:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "_USDC",
												"nameLocation": "1186:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1178:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1045:150:2"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1230:0:2"
									},
									"scope": 222,
									"src": "1034:406:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 569,
							"src": "826:616:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 223,
										"name": "CCTPBase",
										"nameLocations": [
											"1476:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 222,
										"src": "1476:8:2"
									},
									"id": 224,
									"nodeType": "InheritanceSpecifier",
									"src": "1476:8:2"
								}
							],
							"canonicalName": "CCTPSender",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 430,
							"linearizedBaseContracts": [
								430,
								222,
								153
							],
							"name": "CCTPSender",
							"nameLocation": "1462:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 227,
									"mutability": "constant",
									"name": "CONSISTENCY_LEVEL_FINALIZED",
									"nameLocation": "1513:27:2",
									"nodeType": "VariableDeclaration",
									"scope": 430,
									"src": "1489:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 225,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1489:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 226,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1543:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "internal"
								},
								{
									"global": false,
									"id": 229,
									"libraryName": {
										"id": 228,
										"name": "CCTPMessageLib",
										"nameLocations": [
											"1556:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "1556:14:2"
									},
									"nodeType": "UsingForDirective",
									"src": "1550:27:2"
								},
								{
									"constant": false,
									"functionSelector": "3a57cd63",
									"id": 233,
									"mutability": "mutable",
									"name": "chainIdToCCTPDomain",
									"nameLocation": "1614:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 430,
									"src": "1581:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint16_$_t_uint32_$",
										"typeString": "mapping(uint16 => uint32)"
									},
									"typeName": {
										"id": 232,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 230,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "1589:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"nodeType": "Mapping",
										"src": "1581:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint16_$_t_uint32_$",
											"typeString": "mapping(uint16 => uint32)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 231,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "1599:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "2434:153:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 242,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2455:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2459:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2455:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 244,
																"name": "cctpConfigurationOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "2469:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2455:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616c6c6f77656420746f20736574204343545020446f6d61696e",
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2499:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d1631ba72e816445bf0fa4abac33b00c0668922896e9b84defb141e7fcc6b48f",
																"typeString": "literal_string \"Not allowed to set CCTP Domain\""
															},
															"value": "Not allowed to set CCTP Domain"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d1631ba72e816445bf0fa4abac33b00c0668922896e9b84defb141e7fcc6b48f",
																"typeString": "literal_string \"Not allowed to set CCTP Domain\""
															}
														],
														"id": 241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2440:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2440:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "2440:97:2"
											},
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 249,
															"name": "chainIdToCCTPDomain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "2543:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint16_$_t_uint32_$",
																"typeString": "mapping(uint16 => uint32)"
															}
														},
														"id": 251,
														"indexExpression": {
															"id": 250,
															"name": "chain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "2563:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2543:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "cctpDomain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "2572:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2543:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "2543:39:2"
											}
										]
									},
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "1638:730:2",
										"text": " Sets the CCTP Domain corresponding to chain 'chain' to be 'cctpDomain'\n So that transfers of USDC to chain 'chain' use the target CCTP domain 'cctpDomain'\n This action can only be performed by 'cctpConfigurationOwner', who is set to be the deployer\n Currently, cctp domains are:\n Ethereum: Wormhole chain id 2, cctp domain 0\n Avalanche: Wormhole chain id 6, cctp domain 1\n Optimism: Wormhole chain id 24, cctp domain 2\n Arbitrum: Wormhole chain id 23, cctp domain 3\n Base: Wormhole chain id 30, cctp domain 6\n These can be set via:\n setCCTPDomain(2, 0);\n setCCTPDomain(6, 1);\n setCCTPDomain(24, 2);\n setCCTPDomain(23, 3);\n setCCTPDomain(30, 6);"
									},
									"functionSelector": "c6a4fd1c",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setCCTPDomain",
									"nameLocation": "2380:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "chain",
												"nameLocation": "2401:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2394:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 235,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2394:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "cctpDomain",
												"nameLocation": "2415:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2408:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 237,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2408:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2393:33:2"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2434:0:2"
									},
									"scope": 430,
									"src": "2371:216:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "2659:44:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 263,
														"name": "chainIdToCCTPDomain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "2672:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint16_$_t_uint32_$",
															"typeString": "mapping(uint16 => uint32)"
														}
													},
													"id": 265,
													"indexExpression": {
														"id": 264,
														"name": "chain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "2692:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2672:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 262,
												"id": 266,
												"nodeType": "Return",
												"src": "2665:33:2"
											}
										]
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCCTPDomain",
									"nameLocation": "2600:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "chain",
												"nameLocation": "2621:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "2614:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 257,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2614:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2613:14:2"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "2651:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 260,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2651:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2650:8:2"
									},
									"scope": 430,
									"src": "2591:112:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "3245:428:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 287,
																	"name": "circleTokenMessenger",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 175,
																	"src": "3280:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ITokenMessenger_$1731",
																		"typeString": "contract ITokenMessenger"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ITokenMessenger_$1731",
																		"typeString": "contract ITokenMessenger"
																	}
																],
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3272:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 285,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3272:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3272:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 289,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "3303:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 282,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "3258:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 281,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2002,
																"src": "3251:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$2002_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3251:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2002",
																"typeString": "contract IERC20"
															}
														},
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3264:7:2",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1990,
														"src": "3251:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3251:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "3251:59:2"
											},
											{
												"assignments": [
													293
												],
												"declarations": [
													{
														"constant": false,
														"id": 293,
														"mutability": "mutable",
														"name": "targetAddressBytes32",
														"nameLocation": "3324:20:2",
														"nodeType": "VariableDeclaration",
														"scope": 324,
														"src": "3316:28:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 292,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3316:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 297,
												"initialValue": {
													"arguments": [
														{
															"id": 295,
															"name": "targetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "3368:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 294,
														"name": "addressToBytes32CCTP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "3347:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address) pure returns (bytes32)"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3347:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3316:66:2"
											},
											{
												"assignments": [
													299
												],
												"declarations": [
													{
														"constant": false,
														"id": 299,
														"mutability": "mutable",
														"name": "nonce",
														"nameLocation": "3395:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 324,
														"src": "3388:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 298,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "3388:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"arguments": [
														{
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "3456:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 304,
																	"name": "targetChain",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 273,
																	"src": "3484:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																],
																"id": 303,
																"name": "getCCTPDomain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3470:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint16_$returns$_t_uint32_$",
																	"typeString": "function (uint16) view returns (uint32)"
																}
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3470:26:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 306,
															"name": "targetAddressBytes32",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "3504:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 307,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "3532:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 308,
															"name": "targetAddressBytes32",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "3544:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 300,
															"name": "circleTokenMessenger",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "3403:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ITokenMessenger_$1731",
																"typeString": "contract ITokenMessenger"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3424:24:2",
														"memberName": "depositForBurnWithCaller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1688,
														"src": "3403:45:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint32_$_t_bytes32_$_t_address_$_t_bytes32_$returns$_t_uint64_$",
															"typeString": "function (uint256,uint32,bytes32,address,bytes32) external returns (uint64)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3403:167:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3388:182:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 312,
															"name": "CCTP_KEY_TYPE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "3594:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 316,
																					"name": "wormhole",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 66,
																					"src": "3640:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IWormhole_$884",
																						"typeString": "contract IWormhole"
																					}
																				},
																				"id": 317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3649:7:2",
																				"memberName": "chainId",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 786,
																				"src": "3640:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
																					"typeString": "function () view external returns (uint16)"
																				}
																			},
																			"id": 318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3640:18:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		],
																		"id": 315,
																		"name": "getCCTPDomain",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3626:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint16_$returns$_t_uint32_$",
																			"typeString": "function (uint16) view returns (uint32)"
																		}
																	},
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3626:33:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																{
																	"id": 320,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "3661:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	{
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																],
																"expression": {
																	"id": 313,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3609:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3613:12:2",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "3609:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3609:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 311,
														"name": "MessageKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "3583:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_MessageKey_$924_storage_ptr_$",
															"typeString": "type(struct MessageKey storage pointer)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MessageKey_$924_memory_ptr",
														"typeString": "struct MessageKey memory"
													}
												},
												"functionReturnParameters": 280,
												"id": 323,
												"nodeType": "Return",
												"src": "3576:92:2"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "2707:400:2",
										"text": " transferUSDC wraps common boilerplate for sending tokens to another chain using IWormholeRelayer\n - approves the Circle TokenMessenger contract to spend 'amount' of USDC\n - calls Circle's 'depositForBurnWithCaller'\n - returns key for inclusion in WormholeRelayer `additionalVaas` argument\n Note: this requires that only the targetAddress can redeem transfers."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferUSDC",
									"nameLocation": "3120:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3146:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3138:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3138:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "3165:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3158:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 272,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "3190:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3182:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3182:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3132:75:2"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3226:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MessageKey_$924_memory_ptr",
													"typeString": "struct MessageKey"
												},
												"typeName": {
													"id": 278,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 277,
														"name": "MessageKey",
														"nameLocations": [
															"3226:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 924,
														"src": "3226:10:2"
													},
													"referencedDeclaration": 924,
													"src": "3226:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MessageKey_$924_storage_ptr",
														"typeString": "struct MessageKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3225:19:2"
									},
									"scope": 430,
									"src": "3111:562:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "4357:672:2",
										"statements": [
											{
												"assignments": [
													346
												],
												"declarations": [
													{
														"constant": false,
														"id": 346,
														"mutability": "mutable",
														"name": "messageKeys",
														"nameLocation": "4383:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 409,
														"src": "4363:31:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_MessageKey_$924_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct MessageKey[]"
														},
														"typeName": {
															"baseType": {
																"id": 344,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 343,
																	"name": "MessageKey",
																	"nameLocations": [
																		"4363:10:2"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 924,
																	"src": "4363:10:2"
																},
																"referencedDeclaration": 924,
																"src": "4363:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MessageKey_$924_storage_ptr",
																	"typeString": "struct MessageKey"
																}
															},
															"id": 345,
															"nodeType": "ArrayTypeName",
															"src": "4363:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MessageKey_$924_storage_$dyn_storage_ptr",
																"typeString": "struct MessageKey[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 353,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4414:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4397:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_MessageKey_$924_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct MessageKey memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 348,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 347,
																	"name": "MessageKey",
																	"nameLocations": [
																		"4401:10:2"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 924,
																	"src": "4401:10:2"
																},
																"referencedDeclaration": 924,
																"src": "4401:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MessageKey_$924_storage_ptr",
																	"typeString": "struct MessageKey"
																}
															},
															"id": 349,
															"nodeType": "ArrayTypeName",
															"src": "4401:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MessageKey_$924_storage_$dyn_storage_ptr",
																"typeString": "struct MessageKey[]"
															}
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4397:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MessageKey_$924_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct MessageKey memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4363:53:2"
											},
											{
												"expression": {
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 354,
															"name": "messageKeys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "4422:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MessageKey_$924_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct MessageKey memory[] memory"
															}
														},
														"id": 356,
														"indexExpression": {
															"hexValue": "30",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4434:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4422:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MessageKey_$924_memory_ptr",
															"typeString": "struct MessageKey memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 358,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "4452:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 359,
																"name": "targetChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "4460:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 360,
																"name": "targetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "4473:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 357,
															"name": "transferUSDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "4439:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint16_$_t_address_$returns$_t_struct$_MessageKey_$924_memory_ptr_$",
																"typeString": "function (uint256,uint16,address) returns (struct MessageKey memory)"
															}
														},
														"id": 361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4439:48:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MessageKey_$924_memory_ptr",
															"typeString": "struct MessageKey memory"
														}
													},
													"src": "4422:65:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MessageKey_$924_memory_ptr",
														"typeString": "struct MessageKey memory"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "4422:65:2"
											},
											{
												"assignments": [
													365
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "userPayload",
														"nameLocation": "4507:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 409,
														"src": "4494:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 364,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4494:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [
														{
															"id": 368,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "4532:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 369,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "4540:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 366,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4521:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4525:6:2",
														"memberName": "encode",
														"nodeType": "MemberAccess",
														"src": "4521:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4521:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4494:54:2"
											},
											{
												"assignments": [
													373
												],
												"declarations": [
													{
														"constant": false,
														"id": 373,
														"mutability": "mutable",
														"name": "defaultDeliveryProvider",
														"nameLocation": "4562:23:2",
														"nodeType": "VariableDeclaration",
														"scope": 409,
														"src": "4554:31:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 372,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4554:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 374,
															"name": "wormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "4588:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWormholeRelayer_$1321",
																"typeString": "contract IWormholeRelayer"
															}
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4604:26:2",
														"memberName": "getDefaultDeliveryProvider",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1265,
														"src": "4588:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4588:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4554:78:2"
											},
											{
												"assignments": [
													379,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 379,
														"mutability": "mutable",
														"name": "cost",
														"nameLocation": "4648:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 409,
														"src": "4640:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 378,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4640:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 386,
												"initialValue": {
													"arguments": [
														{
															"id": 382,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "4696:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 383,
															"name": "receiverValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "4709:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 384,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "4724:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 380,
															"name": "wormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "4658:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWormholeRelayer_$1321",
																"typeString": "contract IWormholeRelayer"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4674:21:2",
														"memberName": "quoteEVMDeliveryPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1215,
														"src": "4658:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint16_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint16,uint256,uint256) view external returns (uint256,uint256)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4658:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4639:94:2"
											},
											{
												"expression": {
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 387,
														"name": "sequence",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "4740:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 392,
																"name": "targetChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "4797:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 393,
																"name": "targetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "4816:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 394,
																"name": "userPayload",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "4837:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 395,
																"name": "receiverValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "4856:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4877:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 397,
																"name": "gasLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "4886:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 398,
																"name": "targetChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "4902:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4929:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4921:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 399,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4921:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4921:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 403,
																"name": "defaultDeliveryProvider",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "4941:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 404,
																"name": "messageKeys",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "4972:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_MessageKey_$924_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct MessageKey memory[] memory"
																}
															},
															{
																"id": 405,
																"name": "CONSISTENCY_LEVEL_FINALIZED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 227,
																"src": "4991:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_array$_t_struct$_MessageKey_$924_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct MessageKey memory[] memory"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_array$_t_struct$_MessageKey_$924_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct MessageKey memory[] memory"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"expression": {
																	"id": 388,
																	"name": "wormholeRelayer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 63,
																	"src": "4751:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWormholeRelayer_$1321",
																		"typeString": "contract IWormholeRelayer"
																	}
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4767:9:2",
																"memberName": "sendToEvm",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1107,
																"src": "4751:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint16_$_t_address_$_t_address_$_t_array$_t_struct$_MessageKey_$924_memory_ptr_$dyn_memory_ptr_$_t_uint8_$returns$_t_uint64_$",
																	"typeString": "function (uint16,address,bytes memory,uint256,uint256,uint256,uint16,address,address,struct MessageKey memory[] memory,uint8) payable external returns (uint64)"
																}
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"id": 390,
																	"name": "cost",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "4784:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"src": "4751:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint16_$_t_address_$_t_address_$_t_array$_t_struct$_MessageKey_$924_memory_ptr_$dyn_memory_ptr_$_t_uint8_$returns$_t_uint64_$value",
																"typeString": "function (uint16,address,bytes memory,uint256,uint256,uint256,uint16,address,address,struct MessageKey memory[] memory,uint8) payable external returns (uint64)"
															}
														},
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4751:273:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "4740:284:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "4740:284:2"
											}
										]
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendUSDCWithPayloadToEvm",
									"nameLocation": "4147:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "4184:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4177:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 326,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4177:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "4209:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4201:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4201:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "4241:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4228:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 330,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "4262:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4254:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "4289:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4281:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4281:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4311:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4303:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4303:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4171:150:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "4347:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4340:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 339,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4340:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4339:17:2"
									},
									"scope": 430,
									"src": "4138:891:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "5108:49:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 423,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 412,
																			"src": "5145:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5137:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 421,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "5137:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5137:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5129:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 419,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5129:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5129:22:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5121:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": {
															"id": 417,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5121:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5121:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 416,
												"id": 427,
												"nodeType": "Return",
												"src": "5114:38:2"
											}
										]
									},
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addressToBytes32CCTP",
									"nameLocation": "5042:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "5071:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "5063:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5063:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5062:14:2"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "5099:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 414,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5099:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5098:9:2"
									},
									"scope": 430,
									"src": "5033:124:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 569,
							"src": "1444:3715:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 431,
										"name": "CCTPBase",
										"nameLocations": [
											"5195:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 222,
										"src": "5195:8:2"
									},
									"id": 432,
									"nodeType": "InheritanceSpecifier",
									"src": "5195:8:2"
								}
							],
							"canonicalName": "CCTPReceiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 568,
							"linearizedBaseContracts": [
								568,
								222,
								153
							],
							"name": "CCTPReceiver",
							"nameLocation": "5179:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "5296:297:2",
										"statements": [
											{
												"assignments": [
													440,
													442
												],
												"declarations": [
													{
														"constant": false,
														"id": 440,
														"mutability": "mutable",
														"name": "message",
														"nameLocation": "5316:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 484,
														"src": "5303:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 439,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5303:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 442,
														"mutability": "mutable",
														"name": "signature",
														"nameLocation": "5338:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 484,
														"src": "5325:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 441,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5325:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 452,
												"initialValue": {
													"arguments": [
														{
															"id": 445,
															"name": "cctpMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "5362:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5376:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 446,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "5376:5:2",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5383:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 448,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "5383:5:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 450,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5375:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(bytes storage pointer),type(bytes storage pointer))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(bytes storage pointer),type(bytes storage pointer))"
															}
														],
														"expression": {
															"id": 443,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5351:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5355:6:2",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "5351:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5351:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bytes memory,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5302:88:2"
											},
											{
												"assignments": [
													454
												],
												"declarations": [
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "beforeBalance",
														"nameLocation": "5404:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 484,
														"src": "5396:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 453,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5396:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 461,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5451:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CCTPReceiver_$568",
																		"typeString": "contract CCTPReceiver"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CCTPReceiver_$568",
																		"typeString": "contract CCTPReceiver"
																	}
																],
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5443:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 459,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5443:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5443:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 456,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "5427:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 455,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2002,
																"src": "5420:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$2002_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5420:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2002",
																"typeString": "contract IERC20"
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5433:9:2",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1963,
														"src": "5420:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5420:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5396:61:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "5503:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 469,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "5512:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 465,
															"name": "circleMessageTransmitter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "5463:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMessageTransmitter_$1580",
																"typeString": "contract IMessageTransmitter"
															}
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5488:14:2",
														"memberName": "receiveMessage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1574,
														"src": "5463:39:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory,bytes memory) external returns (bool)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5463:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "5463:59:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 478,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5566:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CCTPReceiver_$568",
																			"typeString": "contract CCTPReceiver"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CCTPReceiver_$568",
																			"typeString": "contract CCTPReceiver"
																		}
																	],
																	"id": 477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5558:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 476,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5558:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5558:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 473,
																		"name": "USDC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 180,
																		"src": "5542:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2002,
																	"src": "5535:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$2002_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5535:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$2002",
																	"typeString": "contract IERC20"
																}
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5548:9:2",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1963,
															"src": "5535:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5535:37:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 481,
														"name": "beforeBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "5575:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5535:53:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 438,
												"id": 483,
												"nodeType": "Return",
												"src": "5528:60:2"
											}
										]
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "redeemUSDC",
									"nameLocation": "5217:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "cctpMessage",
												"nameLocation": "5246:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5233:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 433,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5233:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5227:34:2"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5288:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5280:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5280:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5279:16:2"
									},
									"scope": 568,
									"src": "5208:385:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "5793:1060:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 500,
																	"name": "additionalMessages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "6140:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																		"typeString": "bytes memory[] memory"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6159:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6140:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6169:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "6140:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "434354503a204174206d6f7374206f6e65204d65737361676520697320737570706f72746564",
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6178:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_95c2a5457827ff1d830352d4d883397dc3debe8649a9022b6a18da70b36679cb",
																"typeString": "literal_string \"CCTP: At most one Message is supported\""
															},
															"value": "CCTP: At most one Message is supported"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_95c2a5457827ff1d830352d4d883397dc3debe8649a9022b6a18da70b36679cb",
																"typeString": "literal_string \"CCTP: At most one Message is supported\""
															}
														],
														"id": 499,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6125:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6125:99:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "6125:99:2"
											},
											{
												"assignments": [
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "amountUSDCReceived",
														"nameLocation": "6239:18:2",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "6231:26:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 507,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6231:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 509,
												"nodeType": "VariableDeclarationStatement",
												"src": "6231:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 510,
															"name": "additionalMessages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "6267:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																"typeString": "bytes memory[] memory"
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6286:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6267:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6296:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6267:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 522,
												"nodeType": "IfStatement",
												"src": "6263:96:2",
												"trueBody": {
													"expression": {
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 514,
															"name": "amountUSDCReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "6305:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"baseExpression": {
																		"id": 516,
																		"name": "additionalMessages",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 490,
																		"src": "6337:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																			"typeString": "bytes memory[] memory"
																		}
																	},
																	"id": 518,
																	"indexExpression": {
																		"hexValue": "30",
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6356:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6337:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 515,
																"name": "redeemUSDC",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "6326:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_uint256_$",
																	"typeString": "function (bytes memory) returns (uint256)"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6326:33:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6305:54:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 521,
													"nodeType": "ExpressionStatement",
													"src": "6305:54:2"
												}
											},
											{
												"assignments": [
													524,
													526
												],
												"declarations": [
													{
														"constant": false,
														"id": 524,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "6375:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "6367:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 523,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6367:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 526,
														"mutability": "mutable",
														"name": "userPayload",
														"nameLocation": "6396:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "6383:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 525,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6383:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 536,
												"initialValue": {
													"arguments": [
														{
															"id": 529,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "6422:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6432:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 530,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6432:7:2",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6441:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 532,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "6441:5:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 534,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6431:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(uint256),type(bytes storage pointer))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(uint256),type(bytes storage pointer))"
															}
														],
														"expression": {
															"id": 527,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "6411:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6415:6:2",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "6411:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6411:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(uint256,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6366:82:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 538,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "6655:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 539,
																"name": "amountUSDCReceived",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "6665:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6655:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57726f6e6720616d6f756e74207265636569766564",
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6685:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6781022867e86356be9e3ec78a96895f20619f3a7ac0506f4a950d1c3599a266",
																"typeString": "literal_string \"Wrong amount received\""
															},
															"value": "Wrong amount received"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6781022867e86356be9e3ec78a96895f20619f3a7ac0506f4a950d1c3599a266",
																"typeString": "literal_string \"Wrong amount received\""
															}
														],
														"id": 537,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6647:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6647:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "6647:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 545,
															"name": "userPayload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "6745:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 546,
															"name": "amountUSDCReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "6764:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 547,
															"name": "sourceAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "6790:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 548,
															"name": "sourceChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "6811:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 549,
															"name": "deliveryHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "6830:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 544,
														"name": "receivePayloadAndUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "6716:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes32_$_t_uint16_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes memory,uint256,bytes32,uint16,bytes32)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6716:132:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "6716:132:2"
											}
										]
									},
									"functionSelector": "529dca32",
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receiveWormholeMessages",
									"nameLocation": "5606:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "5648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5635:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5635:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "additionalMessages",
												"nameLocation": "5676:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5661:33:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 488,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "5661:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 489,
													"nodeType": "ArrayTypeName",
													"src": "5661:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "5708:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5700:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 491,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5700:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "5734:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5727:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 493,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5727:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "5759:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5751:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 495,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5629:146:2"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5793:0:2"
									},
									"scope": 568,
									"src": "5597:1256:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "7132:2:2",
										"statements": []
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receivePayloadAndUSDC",
									"nameLocation": "6954:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "6994:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "6981:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 554,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6981:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "amountUSDCReceived",
												"nameLocation": "7015:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "7007:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7007:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "7047:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "7039:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 558,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "7073:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "7066:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 560,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "7066:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "7098:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "7090:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 562,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7090:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6975:139:2"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7132:0:2"
									},
									"scope": 568,
									"src": "6945:189:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 569,
							"src": "5161:1975:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:7100:2"
				},
				"id": 2
			},
			"src/interfaces/IWormhole.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IWormhole.sol",
					"exportedSymbols": {
						"IWormhole": [
							884
						]
					},
					"id": 885,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 570,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWormhole",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 884,
							"linearizedBaseContracts": [
								884
							],
							"name": "IWormhole",
							"nameLocation": "73:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IWormhole.GuardianSet",
									"id": 576,
									"members": [
										{
											"constant": false,
											"id": 573,
											"mutability": "mutable",
											"name": "keys",
											"nameLocation": "122:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 576,
											"src": "112:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "112:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 572,
												"nodeType": "ArrayTypeName",
												"src": "112:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 575,
											"mutability": "mutable",
											"name": "expirationTime",
											"nameLocation": "139:14:3",
											"nodeType": "VariableDeclaration",
											"scope": 576,
											"src": "132:21:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 574,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "132:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "GuardianSet",
									"nameLocation": "94:11:3",
									"nodeType": "StructDefinition",
									"scope": 884,
									"src": "87:71:3",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.Signature",
									"id": 585,
									"members": [
										{
											"constant": false,
											"id": 578,
											"mutability": "mutable",
											"name": "r",
											"nameLocation": "193:1:3",
											"nodeType": "VariableDeclaration",
											"scope": 585,
											"src": "185:9:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 577,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "185:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 580,
											"mutability": "mutable",
											"name": "s",
											"nameLocation": "208:1:3",
											"nodeType": "VariableDeclaration",
											"scope": 585,
											"src": "200:9:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 579,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "200:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 582,
											"mutability": "mutable",
											"name": "v",
											"nameLocation": "221:1:3",
											"nodeType": "VariableDeclaration",
											"scope": 585,
											"src": "215:7:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 581,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "215:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 584,
											"mutability": "mutable",
											"name": "guardianIndex",
											"nameLocation": "234:13:3",
											"nodeType": "VariableDeclaration",
											"scope": 585,
											"src": "228:19:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 583,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "228:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Signature",
									"nameLocation": "169:9:3",
									"nodeType": "StructDefinition",
									"scope": 884,
									"src": "162:90:3",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.VM",
									"id": 610,
									"members": [
										{
											"constant": false,
											"id": 587,
											"mutability": "mutable",
											"name": "version",
											"nameLocation": "278:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 610,
											"src": "272:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 586,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "272:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 589,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "298:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 610,
											"src": "291:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 588,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "291:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 591,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "320:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 610,
											"src": "313:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 590,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "313:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 593,
											"mutability": "mutable",
											"name": "emitterChainId",
											"nameLocation": "338:14:3",
											"nodeType": "VariableDeclaration",
											"scope": 610,
											"src": "331:21:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 592,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "331:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 595,
											"mutability": "mutable",
											"name": "emitterAddress",
											"nameLocation": "366:14:3",
											"nodeType": "VariableDeclaration",
											"scope": 610,
											"src": "358:22:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 594,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "358:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 597,
											"mutability": "mutable",
											"name": "sequence",
											"nameLocation": "393:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 610,
											"src": "386:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 596,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "386:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 599,
											"mutability": "mutable",
											"name": "consistencyLevel",
											"nameLocation": "413:16:3",
											"nodeType": "VariableDeclaration",
											"scope": 610,
											"src": "407:22:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 598,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "407:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 601,
											"mutability": "mutable",
											"name": "payload",
											"nameLocation": "441:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 610,
											"src": "435:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 600,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "435:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 603,
											"mutability": "mutable",
											"name": "guardianSetIndex",
											"nameLocation": "461:16:3",
											"nodeType": "VariableDeclaration",
											"scope": 610,
											"src": "454:23:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 602,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "454:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 607,
											"mutability": "mutable",
											"name": "signatures",
											"nameLocation": "495:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 610,
											"src": "483:22:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Signature_$585_storage_$dyn_storage_ptr",
												"typeString": "struct IWormhole.Signature[]"
											},
											"typeName": {
												"baseType": {
													"id": 605,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 604,
														"name": "Signature",
														"nameLocations": [
															"483:9:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 585,
														"src": "483:9:3"
													},
													"referencedDeclaration": 585,
													"src": "483:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Signature_$585_storage_ptr",
														"typeString": "struct IWormhole.Signature"
													}
												},
												"id": 606,
												"nodeType": "ArrayTypeName",
												"src": "483:11:3",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Signature_$585_storage_$dyn_storage_ptr",
													"typeString": "struct IWormhole.Signature[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 609,
											"mutability": "mutable",
											"name": "hash",
											"nameLocation": "519:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 610,
											"src": "511:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 608,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "511:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "VM",
									"nameLocation": "263:2:3",
									"nodeType": "StructDefinition",
									"scope": 884,
									"src": "256:272:3",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.ContractUpgrade",
									"id": 619,
									"members": [
										{
											"constant": false,
											"id": 612,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "569:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 619,
											"src": "561:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 611,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "561:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 614,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "587:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 619,
											"src": "581:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 613,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "581:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 616,
											"mutability": "mutable",
											"name": "chain",
											"nameLocation": "606:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 619,
											"src": "599:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 615,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "599:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 618,
											"mutability": "mutable",
											"name": "newContract",
											"nameLocation": "625:11:3",
											"nodeType": "VariableDeclaration",
											"scope": 619,
											"src": "617:19:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 617,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "617:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ContractUpgrade",
									"nameLocation": "539:15:3",
									"nodeType": "StructDefinition",
									"scope": 884,
									"src": "532:109:3",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.GuardianSetUpgrade",
									"id": 631,
									"members": [
										{
											"constant": false,
											"id": 621,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "685:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 631,
											"src": "677:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 620,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "677:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 623,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "703:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 631,
											"src": "697:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 622,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "697:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 625,
											"mutability": "mutable",
											"name": "chain",
											"nameLocation": "722:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 631,
											"src": "715:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 624,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "715:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 628,
											"mutability": "mutable",
											"name": "newGuardianSet",
											"nameLocation": "745:14:3",
											"nodeType": "VariableDeclaration",
											"scope": 631,
											"src": "733:26:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_GuardianSet_$576_storage_ptr",
												"typeString": "struct IWormhole.GuardianSet"
											},
											"typeName": {
												"id": 627,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 626,
													"name": "GuardianSet",
													"nameLocations": [
														"733:11:3"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 576,
													"src": "733:11:3"
												},
												"referencedDeclaration": 576,
												"src": "733:11:3",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_GuardianSet_$576_storage_ptr",
													"typeString": "struct IWormhole.GuardianSet"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 630,
											"mutability": "mutable",
											"name": "newGuardianSetIndex",
											"nameLocation": "772:19:3",
											"nodeType": "VariableDeclaration",
											"scope": 631,
											"src": "765:26:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 629,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "765:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "GuardianSetUpgrade",
									"nameLocation": "652:18:3",
									"nodeType": "StructDefinition",
									"scope": 884,
									"src": "645:151:3",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.SetMessageFee",
									"id": 640,
									"members": [
										{
											"constant": false,
											"id": 633,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "835:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 640,
											"src": "827:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 632,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "827:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 635,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "853:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 640,
											"src": "847:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 634,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "847:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 637,
											"mutability": "mutable",
											"name": "chain",
											"nameLocation": "872:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 640,
											"src": "865:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 636,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "865:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 639,
											"mutability": "mutable",
											"name": "messageFee",
											"nameLocation": "891:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 640,
											"src": "883:18:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 638,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "883:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SetMessageFee",
									"nameLocation": "807:13:3",
									"nodeType": "StructDefinition",
									"scope": 884,
									"src": "800:106:3",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.TransferFees",
									"id": 651,
									"members": [
										{
											"constant": false,
											"id": 642,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "944:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 651,
											"src": "936:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 641,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "936:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 644,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "962:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 651,
											"src": "956:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 643,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "956:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 646,
											"mutability": "mutable",
											"name": "chain",
											"nameLocation": "981:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 651,
											"src": "974:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 645,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "974:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 648,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1000:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 651,
											"src": "992:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 647,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "992:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 650,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1020:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 651,
											"src": "1012:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 649,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1012:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TransferFees",
									"nameLocation": "917:12:3",
									"nodeType": "StructDefinition",
									"scope": 884,
									"src": "910:124:3",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.RecoverChainId",
									"id": 660,
									"members": [
										{
											"constant": false,
											"id": 653,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "1074:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 660,
											"src": "1066:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 652,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1066:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 655,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "1092:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 660,
											"src": "1086:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 654,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1086:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 657,
											"mutability": "mutable",
											"name": "evmChainId",
											"nameLocation": "1112:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 660,
											"src": "1104:18:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 656,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1104:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 659,
											"mutability": "mutable",
											"name": "newChainId",
											"nameLocation": "1135:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 660,
											"src": "1128:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 658,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1128:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RecoverChainId",
									"nameLocation": "1045:14:3",
									"nodeType": "StructDefinition",
									"scope": 884,
									"src": "1038:112:3",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b2",
									"id": 672,
									"name": "LogMessagePublished",
									"nameLocation": "1160:19:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1201:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "1185:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"indexed": false,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1220:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "1213:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 663,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1213:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"indexed": false,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "1234:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 665,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1234:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": false,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "1258:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "1252:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 667,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1252:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "consistencyLevel",
												"nameLocation": "1277:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "1271:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 669,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1271:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1179:118:3"
									},
									"src": "1154:144:3"
								},
								{
									"anonymous": false,
									"eventSelector": "2e4cc16c100f0b55e2df82ab0b1a7e294aa9cbd01b48fbaf622683fbc0507a49",
									"id": 678,
									"name": "ContractUpgraded",
									"nameLocation": "1308:16:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldContract",
												"nameLocation": "1341:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "1325:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"indexed": true,
												"mutability": "mutable",
												"name": "newContract",
												"nameLocation": "1370:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "1354:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1354:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:58:3"
									},
									"src": "1302:81:3"
								},
								{
									"anonymous": false,
									"eventSelector": "2384dbc52f7b617fb7c5aa71e5455a21ff21d58604bb6daef6af2bb44aadebdd",
									"id": 682,
									"name": "GuardianSetAdded",
									"nameLocation": "1393:16:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"indexed": true,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1425:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "1410:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 679,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1410:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1409:22:3"
									},
									"src": "1387:45:3"
								},
								{
									"functionSelector": "b19a437e",
									"id": 693,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "publishMessage",
									"nameLocation": "1445:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1467:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "1460:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 683,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1460:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "1487:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "1474:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 685,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1474:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "consistencyLevel",
												"nameLocation": "1502:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "1496:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 687,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1496:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1459:60:3"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1565:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "1558:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 690,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1558:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1557:17:3"
									},
									"scope": 884,
									"src": "1436:139:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8129fc1c",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "1588:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1598:2:3"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1609:0:3"
									},
									"scope": 884,
									"src": "1579:31:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c0fd8bde",
									"id": 708,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseAndVerifyVM",
									"nameLocation": "1623:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "encodedVM",
												"nameLocation": "1655:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "1640:24:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 697,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1640:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1639:26:3"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "vm",
												"nameLocation": "1711:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "1701:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VM_$610_memory_ptr",
													"typeString": "struct IWormhole.VM"
												},
												"typeName": {
													"id": 701,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 700,
														"name": "VM",
														"nameLocations": [
															"1701:2:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 610,
														"src": "1701:2:3"
													},
													"referencedDeclaration": 610,
													"src": "1701:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VM_$610_storage_ptr",
														"typeString": "struct IWormhole.VM"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "valid",
												"nameLocation": "1720:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "1715:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 703,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1715:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "1741:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "1727:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 705,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1727:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1700:48:3"
									},
									"scope": 884,
									"src": "1614:135:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "875be02a",
									"id": 718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "verifyVM",
									"nameLocation": "1762:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "vm",
												"nameLocation": "1781:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1771:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VM_$610_memory_ptr",
													"typeString": "struct IWormhole.VM"
												},
												"typeName": {
													"id": 710,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 709,
														"name": "VM",
														"nameLocations": [
															"1771:2:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 610,
														"src": "1771:2:3"
													},
													"referencedDeclaration": 610,
													"src": "1771:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VM_$610_storage_ptr",
														"typeString": "struct IWormhole.VM"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1770:14:3"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "valid",
												"nameLocation": "1813:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1808:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1808:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "1834:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1820:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 715,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1820:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1807:34:3"
									},
									"scope": 884,
									"src": "1753:89:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a0cce1b3",
									"id": 734,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "verifySignatures",
									"nameLocation": "1855:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1885:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "1877:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 719,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1877:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "signatures",
												"nameLocation": "1914:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "1895:29:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Signature_$585_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IWormhole.Signature[]"
												},
												"typeName": {
													"baseType": {
														"id": 722,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 721,
															"name": "Signature",
															"nameLocations": [
																"1895:9:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 585,
															"src": "1895:9:3"
														},
														"referencedDeclaration": 585,
														"src": "1895:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Signature_$585_storage_ptr",
															"typeString": "struct IWormhole.Signature"
														}
													},
													"id": 723,
													"nodeType": "ArrayTypeName",
													"src": "1895:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Signature_$585_storage_$dyn_storage_ptr",
														"typeString": "struct IWormhole.Signature[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "guardianSet",
												"nameLocation": "1949:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "1930:30:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_GuardianSet_$576_memory_ptr",
													"typeString": "struct IWormhole.GuardianSet"
												},
												"typeName": {
													"id": 726,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 725,
														"name": "GuardianSet",
														"nameLocations": [
															"1930:11:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 576,
														"src": "1930:11:3"
													},
													"referencedDeclaration": 576,
													"src": "1930:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_GuardianSet_$576_storage_ptr",
														"typeString": "struct IWormhole.GuardianSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:93:3"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "valid",
												"nameLocation": "1993:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "1988:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 729,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1988:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "2014:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "2000:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 731,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2000:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:34:3"
									},
									"scope": 884,
									"src": "1846:176:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9e11893",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseVM",
									"nameLocation": "2035:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "encodedVM",
												"nameLocation": "2056:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "2043:22:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 735,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2043:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2042:24:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "vm",
												"nameLocation": "2100:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "2090:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VM_$610_memory_ptr",
													"typeString": "struct IWormhole.VM"
												},
												"typeName": {
													"id": 739,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 738,
														"name": "VM",
														"nameLocations": [
															"2090:2:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 610,
														"src": "2090:2:3"
													},
													"referencedDeclaration": 610,
													"src": "2090:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VM_$610_storage_ptr",
														"typeString": "struct IWormhole.VM"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:14:3"
									},
									"scope": 884,
									"src": "2026:78:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f8ce560a",
									"id": 749,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quorum",
									"nameLocation": "2117:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "numGuardians",
												"nameLocation": "2137:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "2129:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2129:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2123:30:3"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "numSignaturesRequiredForQuorum",
												"nameLocation": "2185:30:3",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "2177:38:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2177:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2176:40:3"
									},
									"scope": 884,
									"src": "2108:109:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f951975a",
									"id": 757,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getGuardianSet",
									"nameLocation": "2230:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2252:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2245:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 750,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2245:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2244:14:3"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2282:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_GuardianSet_$576_memory_ptr",
													"typeString": "struct IWormhole.GuardianSet"
												},
												"typeName": {
													"id": 754,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 753,
														"name": "GuardianSet",
														"nameLocations": [
															"2282:11:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 576,
														"src": "2282:11:3"
													},
													"referencedDeclaration": 576,
													"src": "2282:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_GuardianSet_$576_storage_ptr",
														"typeString": "struct IWormhole.GuardianSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2281:20:3"
									},
									"scope": 884,
									"src": "2221:81:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1cfe7951",
									"id": 762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentGuardianSetIndex",
									"nameLocation": "2315:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2341:2:3"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2367:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 759,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2367:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2366:8:3"
									},
									"scope": 884,
									"src": "2306:69:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "eb8d3f12",
									"id": 767,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getGuardianSetExpiry",
									"nameLocation": "2388:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2408:2:3"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2434:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 764,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2434:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2433:8:3"
									},
									"scope": 884,
									"src": "2379:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2c3c02a4",
									"id": 774,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governanceActionIsConsumed",
									"nameLocation": "2455:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2490:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2482:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 768,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2482:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2481:14:3"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2519:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2519:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2518:6:3"
									},
									"scope": 884,
									"src": "2446:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d60b347f",
									"id": 781,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isInitialized",
									"nameLocation": "2538:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "2560:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "2552:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2552:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2551:14:3"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "2589:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 778,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2589:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2588:6:3"
									},
									"scope": 884,
									"src": "2529:66:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a8a0592",
									"id": 786,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "chainId",
									"nameLocation": "2608:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2615:2:3"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "2641:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 783,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2641:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:8:3"
									},
									"scope": 884,
									"src": "2599:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e039f224",
									"id": 791,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isFork",
									"nameLocation": "2662:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2668:2:3"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "2694:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 788,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2694:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:6:3"
									},
									"scope": 884,
									"src": "2653:47:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fbe3c2cd",
									"id": 796,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governanceChainId",
									"nameLocation": "2713:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2730:2:3"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "2756:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 793,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2756:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:8:3"
									},
									"scope": 884,
									"src": "2704:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b172b222",
									"id": 801,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governanceContract",
									"nameLocation": "2777:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2795:2:3"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "2821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 798,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:9:3"
									},
									"scope": 884,
									"src": "2768:62:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1a90a219",
									"id": 806,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "messageFee",
									"nameLocation": "2843:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2853:2:3"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2879:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2879:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2878:9:3"
									},
									"scope": 884,
									"src": "2834:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "64d42b17",
									"id": 811,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "evmChainId",
									"nameLocation": "2901:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2911:2:3"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "2937:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2937:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2936:9:3"
									},
									"scope": 884,
									"src": "2892:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4cf842b5",
									"id": 818,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nextSequence",
									"nameLocation": "2959:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "emitter",
												"nameLocation": "2980:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "2972:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2971:17:3"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "3012:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 815,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3012:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3011:8:3"
									},
									"scope": 884,
									"src": "2950:70:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4fdc60fa",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseContractUpgrade",
									"nameLocation": "3033:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "encodedUpgrade",
												"nameLocation": "3072:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "3059:27:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 819,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3059:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3053:37:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "cu",
												"nameLocation": "3137:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "3114:25:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ContractUpgrade_$619_memory_ptr",
													"typeString": "struct IWormhole.ContractUpgrade"
												},
												"typeName": {
													"id": 823,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 822,
														"name": "ContractUpgrade",
														"nameLocations": [
															"3114:15:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 619,
														"src": "3114:15:3"
													},
													"referencedDeclaration": 619,
													"src": "3114:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ContractUpgrade_$619_storage_ptr",
														"typeString": "struct IWormhole.ContractUpgrade"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3113:27:3"
									},
									"scope": 884,
									"src": "3024:117:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "04ca84cf",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseGuardianSetUpgrade",
									"nameLocation": "3154:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "encodedUpgrade",
												"nameLocation": "3196:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "3183:27:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 827,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3183:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3177:37:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "gsu",
												"nameLocation": "3264:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "3238:29:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_GuardianSetUpgrade_$631_memory_ptr",
													"typeString": "struct IWormhole.GuardianSetUpgrade"
												},
												"typeName": {
													"id": 831,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 830,
														"name": "GuardianSetUpgrade",
														"nameLocations": [
															"3238:18:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 631,
														"src": "3238:18:3"
													},
													"referencedDeclaration": 631,
													"src": "3238:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_GuardianSetUpgrade_$631_storage_ptr",
														"typeString": "struct IWormhole.GuardianSetUpgrade"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3237:31:3"
									},
									"scope": 884,
									"src": "3145:124:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "515f3247",
									"id": 842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseSetMessageFee",
									"nameLocation": "3282:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "encodedSetMessageFee",
												"nameLocation": "3319:20:3",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "3306:33:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 835,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3306:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3300:43:3"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "smf",
												"nameLocation": "3388:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "3367:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SetMessageFee_$640_memory_ptr",
													"typeString": "struct IWormhole.SetMessageFee"
												},
												"typeName": {
													"id": 839,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 838,
														"name": "SetMessageFee",
														"nameLocations": [
															"3367:13:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 640,
														"src": "3367:13:3"
													},
													"referencedDeclaration": 640,
													"src": "3367:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SetMessageFee_$640_storage_ptr",
														"typeString": "struct IWormhole.SetMessageFee"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3366:26:3"
									},
									"scope": 884,
									"src": "3273:120:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0319e59c",
									"id": 850,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseTransferFees",
									"nameLocation": "3406:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "encodedTransferFees",
												"nameLocation": "3442:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "3429:32:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 843,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3429:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3423:42:3"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "tf",
												"nameLocation": "3509:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "3489:22:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TransferFees_$651_memory_ptr",
													"typeString": "struct IWormhole.TransferFees"
												},
												"typeName": {
													"id": 847,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 846,
														"name": "TransferFees",
														"nameLocations": [
															"3489:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 651,
														"src": "3489:12:3"
													},
													"referencedDeclaration": 651,
													"src": "3489:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TransferFees_$651_storage_ptr",
														"typeString": "struct IWormhole.TransferFees"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3488:24:3"
									},
									"scope": 884,
									"src": "3397:116:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cb4cfea8",
									"id": 858,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseRecoverChainId",
									"nameLocation": "3526:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "encodedRecoverChainId",
												"nameLocation": "3564:21:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3551:34:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 851,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3551:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3545:44:3"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "rci",
												"nameLocation": "3635:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3613:25:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RecoverChainId_$660_memory_ptr",
													"typeString": "struct IWormhole.RecoverChainId"
												},
												"typeName": {
													"id": 855,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 854,
														"name": "RecoverChainId",
														"nameLocations": [
															"3613:14:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 660,
														"src": "3613:14:3"
													},
													"referencedDeclaration": 660,
													"src": "3613:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RecoverChainId_$660_storage_ptr",
														"typeString": "struct IWormhole.RecoverChainId"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3612:27:3"
									},
									"scope": 884,
									"src": "3517:123:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5cb8cae2",
									"id": 863,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitContractUpgrade",
									"nameLocation": "3653:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "_vm",
												"nameLocation": "3688:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "3675:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 859,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3675:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3674:18:3"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3701:0:3"
									},
									"scope": 884,
									"src": "3644:58:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f42bc641",
									"id": 868,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitSetMessageFee",
									"nameLocation": "3715:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "_vm",
												"nameLocation": "3748:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "3735:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 864,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3735:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3734:18:3"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3761:0:3"
									},
									"scope": 884,
									"src": "3706:56:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6606b4e0",
									"id": 873,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitNewGuardianSet",
									"nameLocation": "3775:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "_vm",
												"nameLocation": "3809:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "3796:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 869,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3796:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3795:18:3"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3822:0:3"
									},
									"scope": 884,
									"src": "3766:57:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "93df337e",
									"id": 878,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitTransferFees",
									"nameLocation": "3836:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "_vm",
												"nameLocation": "3868:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "3855:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 874,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3855:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:18:3"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3881:0:3"
									},
									"scope": 884,
									"src": "3827:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "178149e7",
									"id": 883,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitRecoverChainId",
									"nameLocation": "3895:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "_vm",
												"nameLocation": "3929:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "3916:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 879,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3915:18:3"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3942:0:3"
									},
									"scope": 884,
									"src": "3886:57:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 885,
							"src": "63:3882:3",
							"usedErrors": [],
							"usedEvents": [
								672,
								678,
								682
							]
						}
					],
					"src": "38:3908:3"
				},
				"id": 3
			},
			"src/interfaces/IWormholeReceiver.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IWormholeReceiver.sol",
					"exportedSymbols": {
						"IWormholeReceiver": [
							903
						]
					},
					"id": 904,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 886,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWormholeReceiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 887,
								"nodeType": "StructuredDocumentation",
								"src": "63:80:4",
								"text": " @notice Interface for a contract which can receive Wormhole messages."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903
							],
							"name": "IWormholeReceiver",
							"nameLocation": "154:17:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "176:2062:4",
										"text": " @notice When a `send` is performed with this contract as the target, this function will be\n     invoked by the WormholeRelayer contract\n NOTE: This function should be restricted such that only the Wormhole Relayer contract can call it.\n We also recommend that this function checks that `sourceChain` and `sourceAddress` are indeed who\n       you expect to have requested the calling of `send` on the source chain\n The invocation of this function corresponding to the `send` request will have msg.value equal\n   to the receiverValue specified in the send request.\n If the invocation of this function reverts or exceeds the gas limit\n   specified by the send requester, this delivery will result in a `ReceiverFailure`.\n @param payload - an arbitrary message which was included in the delivery by the\n     requester. This message's signature will already have been verified (as long as msg.sender is the Wormhole Relayer contract)\n @param additionalMessages - Additional messages which were requested to be included in this delivery.\n      Note: There are no contract-level guarantees that the messages in this array are what was requested\n      so **you should verify any sensitive information given here!**\n      For example, if a 'VaaKey' was specified on the source chain, then MAKE SURE the corresponding message here\n      has valid signatures (by calling `parseAndVerifyVM(message)` on the Wormhole core contract)\n      This field can be used to perform and relay TokenBridge or CCTP transfers, and there are example\n      usages of this at\n         https://github.com/wormhole-foundation/hello-token\n         https://github.com/wormhole-foundation/hello-cctp\n @param sourceAddress - the (wormhole format) address on the sending chain which requested\n     this delivery.\n @param sourceChain - the wormhole chain ID where this delivery was requested.\n @param deliveryHash - the VAA hash of the deliveryVAA."
									},
									"functionSelector": "529dca32",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "receiveWormholeMessages",
									"nameLocation": "2250:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "2292:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2279:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 889,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2279:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "additionalMessages",
												"nameLocation": "2320:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2305:33:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 891,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "2305:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 892,
													"nodeType": "ArrayTypeName",
													"src": "2305:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "2352:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2344:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 894,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "2378:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2371:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 896,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2371:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "2403:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2395:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 898,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2273:146:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2436:0:4"
									},
									"scope": 903,
									"src": "2241:196:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "144:2295:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "38:2402:4"
				},
				"id": 4
			},
			"src/interfaces/IWormholeRelayer.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IWormholeRelayer.sol",
					"exportedSymbols": {
						"CCTP_KEY_TYPE": [
							919
						],
						"DeliveryProviderCannotReceivePayment": [
							1340
						],
						"DeliveryProviderDoesNotSupportMessageKeyType": [
							1344
						],
						"DeliveryProviderDoesNotSupportTargetChain": [
							1338
						],
						"IWormholeRelayer": [
							1321
						],
						"IWormholeRelayerBase": [
							964
						],
						"IWormholeRelayerDelivery": [
							1316
						],
						"IWormholeRelayerSend": [
							1266
						],
						"InsufficientRelayerFunds": [
							1410
						],
						"InvalidDeliveryVaa": [
							1374
						],
						"InvalidEmitter": [
							1382
						],
						"InvalidMsgValue": [
							1330
						],
						"InvalidOverrideGasLimit": [
							1400
						],
						"InvalidOverrideReceiverValue": [
							1402
						],
						"InvalidOverrideRefundPerGasUnused": [
							1404
						],
						"InvalidPayloadId": [
							1356
						],
						"InvalidPayloadLength": [
							1362
						],
						"InvalidVaaKeyType": [
							1366
						],
						"MessageKey": [
							924
						],
						"MessageKeysLengthDoesNotMatchMessagesLength": [
							1388
						],
						"RETURNDATA_TRUNCATION_THRESHOLD": [
							1324
						],
						"ReentrantDelivery": [
							1350
						],
						"RequestedGasLimitTooLow": [
							1332
						],
						"RequesterNotWormholeRelayer": [
							1394
						],
						"TargetChainIsNotThisChain": [
							1398
						],
						"TooManyMessageKeys": [
							1370
						],
						"VAA_KEY_TYPE": [
							916
						],
						"VaaKey": [
							913
						],
						"VaaKeysDoNotMatchVaas": [
							1392
						]
					},
					"id": 1411,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:5"
						},
						{
							"canonicalName": "VaaKey",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "465:296:5",
								"text": " @notice VaaKey identifies a wormhole message\n @custom:member chainId Wormhole chain ID of the chain where this VAA was emitted from\n @custom:member emitterAddress Address of the emitter of the VAA, in Wormhole bytes32 format\n @custom:member sequence Sequence number of the VAA"
							},
							"id": 913,
							"members": [
								{
									"constant": false,
									"id": 908,
									"mutability": "mutable",
									"name": "chainId",
									"nameLocation": "787:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 913,
									"src": "780:14:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 907,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "780:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 910,
									"mutability": "mutable",
									"name": "emitterAddress",
									"nameLocation": "806:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 913,
									"src": "798:22:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 909,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "798:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 912,
									"mutability": "mutable",
									"name": "sequence",
									"nameLocation": "831:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 913,
									"src": "824:15:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 911,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "824:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "VaaKey",
							"nameLocation": "769:6:5",
							"nodeType": "StructDefinition",
							"scope": 1411,
							"src": "762:80:5",
							"visibility": "public"
						},
						{
							"constant": true,
							"id": 916,
							"mutability": "constant",
							"name": "VAA_KEY_TYPE",
							"nameLocation": "935:12:5",
							"nodeType": "VariableDeclaration",
							"scope": 1411,
							"src": "920:31:5",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint8",
								"typeString": "uint8"
							},
							"typeName": {
								"id": 914,
								"name": "uint8",
								"nodeType": "ElementaryTypeName",
								"src": "920:5:5",
								"typeDescriptions": {
									"typeIdentifier": "t_uint8",
									"typeString": "uint8"
								}
							},
							"value": {
								"hexValue": "31",
								"id": 915,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "950:1:5",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_1_by_1",
									"typeString": "int_const 1"
								},
								"value": "1"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 919,
							"mutability": "constant",
							"name": "CCTP_KEY_TYPE",
							"nameLocation": "968:13:5",
							"nodeType": "VariableDeclaration",
							"scope": 1411,
							"src": "953:32:5",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint8",
								"typeString": "uint8"
							},
							"typeName": {
								"id": 917,
								"name": "uint8",
								"nodeType": "ElementaryTypeName",
								"src": "953:5:5",
								"typeDescriptions": {
									"typeIdentifier": "t_uint8",
									"typeString": "uint8"
								}
							},
							"value": {
								"hexValue": "32",
								"id": 918,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "984:1:5",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_2_by_1",
									"typeString": "int_const 2"
								},
								"value": "2"
							},
							"visibility": "internal"
						},
						{
							"canonicalName": "MessageKey",
							"id": 924,
							"members": [
								{
									"constant": false,
									"id": 921,
									"mutability": "mutable",
									"name": "keyType",
									"nameLocation": "1016:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 924,
									"src": "1010:13:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 920,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1010:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 923,
									"mutability": "mutable",
									"name": "encodedKey",
									"nameLocation": "1109:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 924,
									"src": "1103:16:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 922,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1103:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "MessageKey",
							"nameLocation": "995:10:5",
							"nodeType": "StructDefinition",
							"scope": 1411,
							"src": "988:134:5",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWormholeRelayerBase",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 964,
							"linearizedBaseContracts": [
								964
							],
							"name": "IWormholeRelayerBase",
							"nameLocation": "1134:20:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "da8540426b64ece7b164a9dce95448765f0a7263ef3ff85091c9c7361e485364",
									"id": 932,
									"name": "SendEvent",
									"nameLocation": "1165:9:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"indexed": true,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1195:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "1180:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 925,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1180:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"indexed": false,
												"mutability": "mutable",
												"name": "deliveryQuote",
												"nameLocation": "1217:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "1209:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1209:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"indexed": false,
												"mutability": "mutable",
												"name": "paymentForExtraReceiverValue",
												"nameLocation": "1244:28:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "1236:36:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1236:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:102:5"
									},
									"src": "1159:118:5"
								},
								{
									"functionSelector": "3e8267e7",
									"id": 939,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRegisteredWormholeRelayerContract",
									"nameLocation": "1290:36:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "1339:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "1332:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 933,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1332:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1326:24:5"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "1374:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 936,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1374:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1373:9:5"
									},
									"scope": 964,
									"src": "1281:102:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 940,
										"nodeType": "StructuredDocumentation",
										"src": "1387:175:5",
										"text": " @notice Returns true if a delivery has been attempted for the given deliveryHash\n Note: invalid deliveries where the tx reverts are not considered attempted"
									},
									"functionSelector": "d0625a19",
									"id": 947,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deliveryAttempted",
									"nameLocation": "1574:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "1605:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "1597:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 941,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1591:30:5"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "attempted",
												"nameLocation": "1650:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "1645:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 944,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1645:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1644:16:5"
									},
									"scope": 964,
									"src": "1565:96:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "1665:81:5",
										"text": " @notice block number at which a delivery was successfully executed"
									},
									"functionSelector": "40984f08",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deliverySuccessBlock",
									"nameLocation": "1758:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "1792:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "1784:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 949,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1784:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:30:5"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "blockNumber",
												"nameLocation": "1840:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "1832:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1831:21:5"
									},
									"scope": 964,
									"src": "1749:104:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "1857:91:5",
										"text": " @notice block number of the latest attempt to execute a delivery that failed"
									},
									"functionSelector": "5a3b92e8",
									"id": 963,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deliveryFailureBlock",
									"nameLocation": "1960:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "1994:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "1986:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 957,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1986:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1980:30:5"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "blockNumber",
												"nameLocation": "2042:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "2034:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2033:21:5"
									},
									"scope": 964,
									"src": "1951:104:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1411,
							"src": "1124:933:5",
							"usedErrors": [],
							"usedEvents": [
								932
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 966,
										"name": "IWormholeRelayerBase",
										"nameLocations": [
											"2179:20:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 964,
										"src": "2179:20:5"
									},
									"id": 967,
									"nodeType": "InheritanceSpecifier",
									"src": "2179:20:5"
								}
							],
							"canonicalName": "IWormholeRelayerSend",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 965,
								"nodeType": "StructuredDocumentation",
								"src": "2059:85:5",
								"text": " @title IWormholeRelayerSend\n @notice The interface to request deliveries"
							},
							"fullyImplemented": false,
							"id": 1266,
							"linearizedBaseContracts": [
								1266,
								964
							],
							"name": "IWormholeRelayerSend",
							"nameLocation": "2155:20:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "2204:1165:5",
										"text": " @notice Publishes an instruction for the default delivery provider\n to relay a payload to the address `targetAddress` on chain `targetChain`\n with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\n Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendPayloadToEvm` function\n with `refundChain` and `refundAddress` as parameters\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param gasLimit gas limit with which to call `targetAddress`.\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "8fecdd02",
									"id": 983,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendPayloadToEvm",
									"nameLocation": "3381:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "3410:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "3403:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 969,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3403:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "3435:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "3427:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "3467:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "3454:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 973,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3454:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "3488:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "3480:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3480:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "3515:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "3507:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3507:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3397:130:5"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "3561:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "3554:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 980,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3554:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3553:17:5"
									},
									"scope": 1266,
									"src": "3372:199:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "3575:1356:5",
										"text": " @notice Publishes an instruction for the default delivery provider\n to relay a payload to the address `targetAddress` on chain `targetChain`\n with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\n Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\n        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\n @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n @param refundAddress The address on `refundChain` to deliver any refund to\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "4b5ca6f4",
									"id": 1003,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendPayloadToEvm",
									"nameLocation": "4943:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "4972:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "4965:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 985,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4965:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "4997:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "4989:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4989:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "5029:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5016:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 989,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5016:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "5050:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5042:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5042:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "5077:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5069:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5069:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "refundChain",
												"nameLocation": "5098:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5091:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 995,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5091:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "refundAddress",
												"nameLocation": "5123:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5115:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5115:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4959:181:5"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "5174:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5167:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1000,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5167:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5166:17:5"
									},
									"scope": 1266,
									"src": "4934:250:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "5188:1281:5",
										"text": " @notice Publishes an instruction for the default delivery provider\n to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\n with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\n Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendVaasToEvm` function\n with `refundChain` and `refundAddress` as parameters\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param gasLimit gas limit with which to call `targetAddress`.\n @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "329a2be7",
									"id": 1023,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendVaasToEvm",
									"nameLocation": "6481:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "6507:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "6500:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1005,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6500:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "6532:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "6524:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6524:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "6564:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "6551:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1009,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6551:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "6585:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "6577:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "6612:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "6604:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6604:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "vaaKeys",
												"nameLocation": "6642:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "6626:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_VaaKey_$913_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct VaaKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 1016,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1015,
															"name": "VaaKey",
															"nameLocations": [
																"6626:6:5"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 913,
															"src": "6626:6:5"
														},
														"referencedDeclaration": 913,
														"src": "6626:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$913_storage_ptr",
															"typeString": "struct VaaKey"
														}
													},
													"id": 1017,
													"nodeType": "ArrayTypeName",
													"src": "6626:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_VaaKey_$913_storage_$dyn_storage_ptr",
														"typeString": "struct VaaKey[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6494:159:5"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "6687:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "6680:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1020,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6680:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6679:17:5"
									},
									"scope": 1266,
									"src": "6472:225:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "6701:1475:5",
										"text": " @notice Publishes an instruction for the default delivery provider\n to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\n with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\n Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\n        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\n @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\n @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n @param refundAddress The address on `refundChain` to deliver any refund to\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "32b2fc0e",
									"id": 1047,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendVaasToEvm",
									"nameLocation": "8188:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "8214:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "8207:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1025,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8207:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "8239:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "8231:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8231:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "8271:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "8258:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1029,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8258:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "8292:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "8284:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8284:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "8319:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "8311:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8311:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "vaaKeys",
												"nameLocation": "8349:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "8333:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_VaaKey_$913_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct VaaKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 1036,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1035,
															"name": "VaaKey",
															"nameLocations": [
																"8333:6:5"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 913,
															"src": "8333:6:5"
														},
														"referencedDeclaration": 913,
														"src": "8333:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$913_storage_ptr",
															"typeString": "struct VaaKey"
														}
													},
													"id": 1037,
													"nodeType": "ArrayTypeName",
													"src": "8333:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_VaaKey_$913_storage_$dyn_storage_ptr",
														"typeString": "struct VaaKey[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "refundChain",
												"nameLocation": "8369:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "8362:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1039,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8362:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "refundAddress",
												"nameLocation": "8394:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "8386:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8386:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8201:210:5"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "8445:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "8438:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1044,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8438:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8437:17:5"
									},
									"scope": 1266,
									"src": "8179:276:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "8459:2175:5",
										"text": " @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\n to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\n with gas limit `gasLimit` and `msg.value` equal to\n receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\n Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to\n quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\n        (in addition to the `receiverValue` specified)\n @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\n        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\n @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n @param refundAddress The address on `refundChain` to deliver any refund to\n @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\n @param consistencyLevel Consistency level with which to publish the delivery instructions - see\n        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "3a2c767d",
									"id": 1077,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendToEvm",
									"nameLocation": "10646:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "10668:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "10661:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1049,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "10661:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "10693:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "10685:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10685:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "10725:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "10712:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1053,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10712:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "10746:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "10738:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "paymentForExtraReceiverValue",
												"nameLocation": "10773:28:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "10765:36:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10765:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "10815:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "10807:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10807:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "refundChain",
												"nameLocation": "10836:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "10829:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1061,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "10829:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "refundAddress",
												"nameLocation": "10861:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "10853:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10853:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "deliveryProviderAddress",
												"nameLocation": "10888:23:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "10880:31:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10880:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "vaaKeys",
												"nameLocation": "10933:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "10917:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_VaaKey_$913_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct VaaKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 1068,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1067,
															"name": "VaaKey",
															"nameLocations": [
																"10917:6:5"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 913,
															"src": "10917:6:5"
														},
														"referencedDeclaration": 913,
														"src": "10917:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$913_storage_ptr",
															"typeString": "struct VaaKey"
														}
													},
													"id": 1069,
													"nodeType": "ArrayTypeName",
													"src": "10917:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_VaaKey_$913_storage_$dyn_storage_ptr",
														"typeString": "struct VaaKey[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "consistencyLevel",
												"nameLocation": "10952:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "10946:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1071,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10946:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10655:317:5"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "11006:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "10999:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1074,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "10999:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10998:17:5"
									},
									"scope": 1266,
									"src": "10637:379:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "11020:2450:5",
										"text": " @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\n to relay a payload and external messages specified by `messageKeys` to the address `targetAddress` on chain `targetChain`\n with gas limit `gasLimit` and `msg.value` equal to\n receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\n Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to\n quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue\n Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected\n DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\n        (in addition to the `receiverValue` specified)\n @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\n        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\n @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n @param refundAddress The address on `refundChain` to deliver any refund to\n @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @param messageKeys Additional messagess to pass in as parameter in call to `targetAddress`\n @param consistencyLevel Consistency level with which to publish the delivery instructions - see\n        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "c055120e",
									"id": 1107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendToEvm",
									"nameLocation": "13482:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "13504:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "13497:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1079,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "13497:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "13529:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "13521:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13521:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "13561:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "13548:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1083,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13548:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "13582:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "13574:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13574:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "paymentForExtraReceiverValue",
												"nameLocation": "13609:28:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "13601:36:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13601:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "13651:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "13643:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13643:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "refundChain",
												"nameLocation": "13672:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "13665:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1091,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "13665:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "refundAddress",
												"nameLocation": "13697:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "13689:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13689:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "deliveryProviderAddress",
												"nameLocation": "13724:23:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "13716:31:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13716:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "messageKeys",
												"nameLocation": "13773:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "13753:31:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_MessageKey_$924_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct MessageKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 1098,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1097,
															"name": "MessageKey",
															"nameLocations": [
																"13753:10:5"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 924,
															"src": "13753:10:5"
														},
														"referencedDeclaration": 924,
														"src": "13753:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MessageKey_$924_storage_ptr",
															"typeString": "struct MessageKey"
														}
													},
													"id": 1099,
													"nodeType": "ArrayTypeName",
													"src": "13753:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MessageKey_$924_storage_$dyn_storage_ptr",
														"typeString": "struct MessageKey[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "consistencyLevel",
												"nameLocation": "13796:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "13790:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1101,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13790:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13491:325:5"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "13850:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "13843:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1104,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13843:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13842:17:5"
									},
									"scope": 1266,
									"src": "13473:387:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "13864:2242:5",
										"text": " @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\n to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\n with `msg.value` equal to\n receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\n Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to\n quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\n        (in addition to the `receiverValue` specified)\n @param encodedExecutionParameters encoded information on how to execute delivery that may impact pricing\n        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\n @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n @param refundAddress The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\n @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\n @param consistencyLevel Consistency level with which to publish the delivery instructions - see\n        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "c81fb7fe",
									"id": 1137,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nameLocation": "16118:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "16135:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "16128:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1109,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16128:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "16160:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "16152:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1111,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16152:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "16192:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "16179:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16179:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "16213:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "16205:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16205:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "paymentForExtraReceiverValue",
												"nameLocation": "16240:28:5",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "16232:36:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16232:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "encodedExecutionParameters",
												"nameLocation": "16287:26:5",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "16274:39:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16274:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "refundChain",
												"nameLocation": "16326:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "16319:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1121,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16319:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "refundAddress",
												"nameLocation": "16351:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "16343:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1123,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "deliveryProviderAddress",
												"nameLocation": "16378:23:5",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "16370:31:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16370:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "vaaKeys",
												"nameLocation": "16423:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "16407:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_VaaKey_$913_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct VaaKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 1128,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1127,
															"name": "VaaKey",
															"nameLocations": [
																"16407:6:5"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 913,
															"src": "16407:6:5"
														},
														"referencedDeclaration": 913,
														"src": "16407:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$913_storage_ptr",
															"typeString": "struct VaaKey"
														}
													},
													"id": 1129,
													"nodeType": "ArrayTypeName",
													"src": "16407:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_VaaKey_$913_storage_$dyn_storage_ptr",
														"typeString": "struct VaaKey[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "consistencyLevel",
												"nameLocation": "16442:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "16436:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1131,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16436:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16122:340:5"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "16496:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "16489:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1134,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "16489:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16488:17:5"
									},
									"scope": 1266,
									"src": "16109:397:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "16510:2500:5",
										"text": " @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\n to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\n with `msg.value` equal to\n receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\n Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to\n quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue\n Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected\n DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\n        (in addition to the `receiverValue` specified)\n @param encodedExecutionParameters encoded information on how to execute delivery that may impact pricing\n        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\n @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n @param refundAddress The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\n @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @param messageKeys Additional messagess to pass in as parameter in call to `targetAddress`\n @param consistencyLevel Consistency level with which to publish the delivery instructions - see\n        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "cee4bda0",
									"id": 1167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nameLocation": "19022:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "19039:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "19032:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1139,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "19032:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "19064:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "19056:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19056:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "19096:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "19083:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1143,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19083:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "19117:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "19109:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19109:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "paymentForExtraReceiverValue",
												"nameLocation": "19144:28:5",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "19136:36:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19136:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "encodedExecutionParameters",
												"nameLocation": "19191:26:5",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "19178:39:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1149,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19178:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "refundChain",
												"nameLocation": "19230:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "19223:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1151,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "19223:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "refundAddress",
												"nameLocation": "19255:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "19247:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1153,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19247:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "deliveryProviderAddress",
												"nameLocation": "19282:23:5",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "19274:31:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19274:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "messageKeys",
												"nameLocation": "19331:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "19311:31:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_MessageKey_$924_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct MessageKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 1158,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1157,
															"name": "MessageKey",
															"nameLocations": [
																"19311:10:5"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 924,
															"src": "19311:10:5"
														},
														"referencedDeclaration": 924,
														"src": "19311:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MessageKey_$924_storage_ptr",
															"typeString": "struct MessageKey"
														}
													},
													"id": 1159,
													"nodeType": "ArrayTypeName",
													"src": "19311:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MessageKey_$924_storage_$dyn_storage_ptr",
														"typeString": "struct MessageKey[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "consistencyLevel",
												"nameLocation": "19354:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "19348:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1161,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "19348:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19026:348:5"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "19408:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "19401:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1164,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "19401:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19400:17:5"
									},
									"scope": 1266,
									"src": "19013:405:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "19422:1778:5",
										"text": " @notice Requests a previously published delivery instruction to be redelivered\n (e.g. with a different delivery provider)\n This function must be called with `msg.value` equal to\n quoteEVMDeliveryPrice(targetChain, newReceiverValue, newGasLimit, newDeliveryProviderAddress)\n  @notice *** This will only be able to succeed if the following is true **\n         - newGasLimit >= gas limit of the old instruction\n         - newReceiverValue >= receiver value of the old instruction\n         - newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`\n @param deliveryVaaKey VaaKey identifying the wormhole message containing the\n        previously published delivery instructions\n @param targetChain The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\n @param newReceiverValue new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param newGasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\n        `targetChainRefundPerGasUnused` rate quoted by the delivery provider, to the refund chain and address specified in the original request\n @param newDeliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @return sequence sequence number of published VAA containing redelivery instructions\n @notice *** This will only be able to succeed if the following is true **\n         - newGasLimit >= gas limit of the old instruction\n         - newReceiverValue >= receiver value of the old instruction"
									},
									"functionSelector": "8b0301b1",
									"id": 1184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "resendToEvm",
									"nameLocation": "21212:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "deliveryVaaKey",
												"nameLocation": "21243:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "21229:28:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VaaKey_$913_memory_ptr",
													"typeString": "struct VaaKey"
												},
												"typeName": {
													"id": 1170,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1169,
														"name": "VaaKey",
														"nameLocations": [
															"21229:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 913,
														"src": "21229:6:5"
													},
													"referencedDeclaration": 913,
													"src": "21229:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$913_storage_ptr",
														"typeString": "struct VaaKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "21270:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "21263:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1172,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "21263:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "newReceiverValue",
												"nameLocation": "21295:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "21287:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21287:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "newGasLimit",
												"nameLocation": "21325:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "21317:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21317:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "newDeliveryProviderAddress",
												"nameLocation": "21350:26:5",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "21342:34:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21342:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21223:157:5"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "21414:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "21407:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1181,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "21407:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21406:17:5"
									},
									"scope": 1266,
									"src": "21203:221:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1185,
										"nodeType": "StructuredDocumentation",
										"src": "21428:1515:5",
										"text": " @notice Requests a previously published delivery instruction to be redelivered\n This function must be called with `msg.value` equal to\n quoteDeliveryPrice(targetChain, newReceiverValue, newEncodedExecutionParameters, newDeliveryProviderAddress)\n @param deliveryVaaKey VaaKey identifying the wormhole message containing the\n        previously published delivery instructions\n @param targetChain The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\n @param newReceiverValue new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param newEncodedExecutionParameters new encoded information on how to execute delivery that may impact pricing\n        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\n @param newDeliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @return sequence sequence number of published VAA containing redelivery instructions\n  @notice *** This will only be able to succeed if the following is true **\n         - (For EVM_V1) newGasLimit >= gas limit of the old instruction\n         - newReceiverValue >= receiver value of the old instruction\n         - (For EVM_V1) newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`"
									},
									"functionSelector": "b686d089",
									"id": 1201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "resend",
									"nameLocation": "22955:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "deliveryVaaKey",
												"nameLocation": "22981:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "22967:28:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VaaKey_$913_memory_ptr",
													"typeString": "struct VaaKey"
												},
												"typeName": {
													"id": 1187,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1186,
														"name": "VaaKey",
														"nameLocations": [
															"22967:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 913,
														"src": "22967:6:5"
													},
													"referencedDeclaration": 913,
													"src": "22967:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$913_storage_ptr",
														"typeString": "struct VaaKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "23008:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "23001:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1189,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "23001:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "newReceiverValue",
												"nameLocation": "23033:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "23025:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23025:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "newEncodedExecutionParameters",
												"nameLocation": "23068:29:5",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "23055:42:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1193,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23055:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "newDeliveryProviderAddress",
												"nameLocation": "23111:26:5",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "23103:34:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23103:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22961:180:5"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "23175:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "23168:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1198,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "23168:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23167:17:5"
									},
									"scope": 1266,
									"src": "22946:239:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "23189:1106:5",
										"text": " @notice Returns the price to request a relay to chain `targetChain`, using the default delivery provider\n @param targetChain in Wormhole Chain ID format\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param gasLimit gas limit with which to call `targetAddress`.\n @return nativePriceQuote Price, in units of current chain currency, that the delivery provider charges to perform the relay\n @return targetChainRefundPerGasUnused amount of target chain currency that will be refunded per unit of gas unused,\n         if a refundAddress is specified.\n         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a\n         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.\n         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain."
									},
									"functionSelector": "c23ee3c3",
									"id": 1215,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteEVMDeliveryPrice",
									"nameLocation": "24307:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "24341:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "24334:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1203,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "24334:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "24366:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "24358:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24358:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "24393:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "24385:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24385:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24328:77:5"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "nativePriceQuote",
												"nameLocation": "24458:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "24450:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24450:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "targetChainRefundPerGasUnused",
												"nameLocation": "24492:29:5",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "24484:37:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24484:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24440:87:5"
									},
									"scope": 1266,
									"src": "24298:230:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "24532:1238:5",
										"text": " @notice Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\n @param targetChain in Wormhole Chain ID format\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param gasLimit gas limit with which to call `targetAddress`.\n @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @return nativePriceQuote Price, in units of current chain currency, that the delivery provider charges to perform the relay\n @return targetChainRefundPerGasUnused amount of target chain currency that will be refunded per unit of gas unused,\n         if a refundAddress is specified\n         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a\n         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.\n         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain."
									},
									"functionSelector": "80ebabd0",
									"id": 1231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteEVMDeliveryPrice",
									"nameLocation": "25782:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "25816:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "25809:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1217,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "25809:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "25841:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "25833:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25833:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "25868:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "25860:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25860:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "deliveryProviderAddress",
												"nameLocation": "25890:23:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "25882:31:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25882:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25803:114:5"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "nativePriceQuote",
												"nameLocation": "25970:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "25962:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25962:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "targetChainRefundPerGasUnused",
												"nameLocation": "26004:29:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "25996:37:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25996:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25952:87:5"
									},
									"scope": 1266,
									"src": "25773:267:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "26044:1168:5",
										"text": " @notice Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\n @param targetChain in Wormhole Chain ID format\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param encodedExecutionParameters encoded information on how to execute delivery that may impact pricing\n        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\n @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @return nativePriceQuote Price, in units of current chain currency, that the delivery provider charges to perform the relay\n @return encodedExecutionInfo encoded information on how the delivery will be executed\n        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` and `targetChainRefundPerGasUnused`\n             (which is the amount of target chain currency that will be refunded per unit of gas unused,\n              if a refundAddress is specified)"
									},
									"functionSelector": "a79629d8",
									"id": 1247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteDeliveryPrice",
									"nameLocation": "27224:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "27255:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "27248:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1233,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "27248:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "27280:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "27272:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27272:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "encodedExecutionParameters",
												"nameLocation": "27312:26:5",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "27299:39:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27299:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "deliveryProviderAddress",
												"nameLocation": "27352:23:5",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "27344:31:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27344:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27242:137:5"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "nativePriceQuote",
												"nameLocation": "27423:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "27415:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27415:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "encodedExecutionInfo",
												"nameLocation": "27454:20:5",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "27441:33:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1244,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27441:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27414:61:5"
									},
									"scope": 1266,
									"src": "27215:261:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "27480:623:5",
										"text": " @notice Returns the (extra) amount of target chain currency that `targetAddress`\n will be called with, if the `paymentForExtraReceiverValue` field is set to `currentChainAmount`\n @param targetChain in Wormhole Chain ID format\n @param currentChainAmount The value that `paymentForExtraReceiverValue` will be set to\n @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @return targetChainAmount The amount such that if `targetAddress` will be called with `msg.value` equal to\n         receiverValue + targetChainAmount"
									},
									"functionSelector": "2385904a",
									"id": 1259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteNativeForChain",
									"nameLocation": "28115:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "28147:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "28140:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1249,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "28140:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "currentChainAmount",
												"nameLocation": "28172:18:5",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "28164:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28164:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "deliveryProviderAddress",
												"nameLocation": "28204:23:5",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "28196:31:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28196:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28134:97:5"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "targetChainAmount",
												"nameLocation": "28263:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "28255:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28255:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28254:27:5"
									},
									"scope": 1266,
									"src": "28106:176:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "28286:259:5",
										"text": " @notice Returns the address of the current default delivery provider\n @return deliveryProvider The address of (the default delivery provider)'s contract on this source\n   chain. This must be a contract that implements IDeliveryProvider."
									},
									"functionSelector": "24320c9f",
									"id": 1265,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDefaultDeliveryProvider",
									"nameLocation": "28557:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28583:2:5"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "deliveryProvider",
												"nameLocation": "28629:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "28621:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28621:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28620:26:5"
									},
									"scope": 1266,
									"src": "28548:99:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1411,
							"src": "2145:26504:5",
							"usedErrors": [],
							"usedEvents": [
								932
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1268,
										"name": "IWormholeRelayerBase",
										"nameLocations": [
											"28817:20:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 964,
										"src": "28817:20:5"
									},
									"id": 1269,
									"nodeType": "InheritanceSpecifier",
									"src": "28817:20:5"
								}
							],
							"canonicalName": "IWormholeRelayerDelivery",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1267,
								"nodeType": "StructuredDocumentation",
								"src": "28651:127:5",
								"text": " @title IWormholeRelayerDelivery\n @notice The interface to execute deliveries. Only relevant for Delivery Providers"
							},
							"fullyImplemented": false,
							"id": 1316,
							"linearizedBaseContracts": [
								1316,
								964
							],
							"name": "IWormholeRelayerDelivery",
							"nameLocation": "28789:24:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IWormholeRelayerDelivery.DeliveryStatus",
									"id": 1272,
									"members": [
										{
											"id": 1270,
											"name": "SUCCESS",
											"nameLocation": "28868:7:5",
											"nodeType": "EnumValue",
											"src": "28868:7:5"
										},
										{
											"id": 1271,
											"name": "RECEIVER_FAILURE",
											"nameLocation": "28881:16:5",
											"nodeType": "EnumValue",
											"src": "28881:16:5"
										}
									],
									"name": "DeliveryStatus",
									"nameLocation": "28847:14:5",
									"nodeType": "EnumDefinition",
									"src": "28842:59:5"
								},
								{
									"canonicalName": "IWormholeRelayerDelivery.RefundStatus",
									"id": 1279,
									"members": [
										{
											"id": 1273,
											"name": "REFUND_SENT",
											"nameLocation": "28929:11:5",
											"nodeType": "EnumValue",
											"src": "28929:11:5"
										},
										{
											"id": 1274,
											"name": "REFUND_FAIL",
											"nameLocation": "28946:11:5",
											"nodeType": "EnumValue",
											"src": "28946:11:5"
										},
										{
											"id": 1275,
											"name": "CROSS_CHAIN_REFUND_SENT",
											"nameLocation": "28963:23:5",
											"nodeType": "EnumValue",
											"src": "28963:23:5"
										},
										{
											"id": 1276,
											"name": "CROSS_CHAIN_REFUND_FAIL_PROVIDER_NOT_SUPPORTED",
											"nameLocation": "28992:46:5",
											"nodeType": "EnumValue",
											"src": "28992:46:5"
										},
										{
											"id": 1277,
											"name": "CROSS_CHAIN_REFUND_FAIL_NOT_ENOUGH",
											"nameLocation": "29044:34:5",
											"nodeType": "EnumValue",
											"src": "29044:34:5"
										},
										{
											"id": 1278,
											"name": "NO_REFUND_REQUESTED",
											"nameLocation": "29084:19:5",
											"nodeType": "EnumValue",
											"src": "29084:19:5"
										}
									],
									"name": "RefundStatus",
									"nameLocation": "28910:12:5",
									"nodeType": "EnumDefinition",
									"src": "28905:202:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "29111:1418:5",
										"text": " @custom:member recipientContract - The target contract address\n @custom:member sourceChain - The chain which this delivery was requested from (in wormhole\n     ChainID format)\n @custom:member sequence - The wormhole sequence number of the delivery VAA on the source chain\n     corresponding to this delivery request\n @custom:member deliveryVaaHash - The hash of the delivery VAA corresponding to this delivery\n     request\n @custom:member gasUsed - The amount of gas that was used to call your target contract\n @custom:member status:\n   - RECEIVER_FAILURE, if the target contract reverts\n   - SUCCESS, if the target contract doesn't revert\n @custom:member additionalStatusInfo:\n   - If status is SUCCESS, then this is empty.\n   - If status is RECEIVER_FAILURE, this is `RETURNDATA_TRUNCATION_THRESHOLD` bytes of the\n       return data (i.e. potentially truncated revert reason information).\n @custom:member refundStatus - Result of the refund. REFUND_SUCCESS or REFUND_FAIL are for\n     refunds where targetChain=refundChain; the others are for targetChain!=refundChain,\n     where a cross chain refund is necessary, or if the default code path is used where no refund is requested (NO_REFUND_REQUESTED)\n @custom:member overridesInfo:\n   - If not an override: empty bytes array\n   - Otherwise: An encoded `DeliveryOverride`"
									},
									"eventSelector": "bccc00b713f54173962e7de6098f643d8ebf53d488d71f4b2a5171496d038f9e",
									"id": 1302,
									"name": "Delivery",
									"nameLocation": "30538:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipientContract",
												"nameLocation": "30568:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "30552:33:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30552:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"indexed": true,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "30606:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "30591:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1283,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "30591:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"indexed": true,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "30638:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "30623:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1285,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "30623:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"indexed": false,
												"mutability": "mutable",
												"name": "deliveryVaaHash",
												"nameLocation": "30660:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "30652:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1287,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "30652:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "30696:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "30681:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_DeliveryStatus_$1272",
													"typeString": "enum IWormholeRelayerDelivery.DeliveryStatus"
												},
												"typeName": {
													"id": 1290,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1289,
														"name": "DeliveryStatus",
														"nameLocations": [
															"30681:14:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1272,
														"src": "30681:14:5"
													},
													"referencedDeclaration": 1272,
													"src": "30681:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_DeliveryStatus_$1272",
														"typeString": "enum IWormholeRelayerDelivery.DeliveryStatus"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"indexed": false,
												"mutability": "mutable",
												"name": "gasUsed",
												"nameLocation": "30716:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "30708:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30708:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"indexed": false,
												"mutability": "mutable",
												"name": "refundStatus",
												"nameLocation": "30742:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "30729:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RefundStatus_$1279",
													"typeString": "enum IWormholeRelayerDelivery.RefundStatus"
												},
												"typeName": {
													"id": 1295,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1294,
														"name": "RefundStatus",
														"nameLocations": [
															"30729:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1279,
														"src": "30729:12:5"
													},
													"referencedDeclaration": 1279,
													"src": "30729:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RefundStatus_$1279",
														"typeString": "enum IWormholeRelayerDelivery.RefundStatus"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"indexed": false,
												"mutability": "mutable",
												"name": "additionalStatusInfo",
												"nameLocation": "30766:20:5",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "30760:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1297,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "30760:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"indexed": false,
												"mutability": "mutable",
												"name": "overridesInfo",
												"nameLocation": "30798:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "30792:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1299,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "30792:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30546:269:5"
									},
									"src": "30532:284:5"
								},
								{
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "30820:1548:5",
										"text": " @notice The delivery provider calls `deliver` to relay messages as described by one delivery instruction\n The delivery provider must pass in the specified (by VaaKeys[]) signed wormhole messages (VAAs) from the source chain\n as well as the signed wormhole message with the delivery instructions (the delivery VAA)\n The messages will be relayed to the target address (with the specified gas limit and receiver value) iff the following checks are met:\n - the delivery VAA has a valid signature\n - the delivery VAA's emitter is one of these WormholeRelayer contracts\n - the delivery provider passed in at least enough of this chain's currency as msg.value (enough meaning the maximum possible refund)\n - the instruction's target chain is this chain\n - the relayed signed VAAs match the descriptions in container.messages (the VAA hashes match, or the emitter address, sequence number pair matches, depending on the description given)\n @param encodedVMs - An array of signed wormhole messages (all from the same source chain\n     transaction)\n @param encodedDeliveryVAA - Signed wormhole message from the source chain's WormholeRelayer\n     contract with payload being the encoded delivery instruction container\n @param relayerRefundAddress - The address to which any refunds to the delivery provider\n     should be sent\n @param deliveryOverrides - Optional overrides field which must be either an empty bytes array or\n     an encoded DeliveryOverride struct"
									},
									"functionSelector": "a60eb4c8",
									"id": 1315,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deliver",
									"nameLocation": "32380:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "encodedVMs",
												"nameLocation": "32408:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "32393:25:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 1304,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "32393:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 1305,
													"nodeType": "ArrayTypeName",
													"src": "32393:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "encodedDeliveryVAA",
												"nameLocation": "32437:18:5",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "32424:31:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1307,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32424:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "relayerRefundAddress",
												"nameLocation": "32477:20:5",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "32461:36:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32461:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "deliveryOverrides",
												"nameLocation": "32516:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "32503:30:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1311,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32503:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32387:150:5"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32554:0:5"
									},
									"scope": 1316,
									"src": "32371:184:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1411,
							"src": "28779:3778:5",
							"usedErrors": [],
							"usedEvents": [
								932,
								1302
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1317,
										"name": "IWormholeRelayerDelivery",
										"nameLocations": [
											"32589:24:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1316,
										"src": "32589:24:5"
									},
									"id": 1318,
									"nodeType": "InheritanceSpecifier",
									"src": "32589:24:5"
								},
								{
									"baseName": {
										"id": 1319,
										"name": "IWormholeRelayerSend",
										"nameLocations": [
											"32615:20:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1266,
										"src": "32615:20:5"
									},
									"id": 1320,
									"nodeType": "InheritanceSpecifier",
									"src": "32615:20:5"
								}
							],
							"canonicalName": "IWormholeRelayer",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1321,
							"linearizedBaseContracts": [
								1321,
								1266,
								1316,
								964
							],
							"name": "IWormholeRelayer",
							"nameLocation": "32569:16:5",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1411,
							"src": "32559:79:5",
							"usedErrors": [],
							"usedEvents": [
								932,
								1302
							]
						},
						{
							"constant": true,
							"id": 1324,
							"mutability": "constant",
							"name": "RETURNDATA_TRUNCATION_THRESHOLD",
							"nameLocation": "33000:31:5",
							"nodeType": "VariableDeclaration",
							"scope": 1411,
							"src": "32983:54:5",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1322,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "32983:7:5",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "313332",
								"id": 1323,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "33034:3:5",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_132_by_1",
									"typeString": "int_const 132"
								},
								"value": "132"
							},
							"visibility": "internal"
						},
						{
							"errorSelector": "1f89f671",
							"id": 1330,
							"name": "InvalidMsgValue",
							"nameLocation": "33157:15:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1329,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1326,
										"mutability": "mutable",
										"name": "msgValue",
										"nameLocation": "33181:8:5",
										"nodeType": "VariableDeclaration",
										"scope": 1330,
										"src": "33173:16:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1325,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "33173:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1328,
										"mutability": "mutable",
										"name": "totalFee",
										"nameLocation": "33199:8:5",
										"nodeType": "VariableDeclaration",
										"scope": 1330,
										"src": "33191:16:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1327,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "33191:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "33172:36:5"
							},
							"src": "33151:58:5"
						},
						{
							"errorSelector": "71ae1330",
							"id": 1332,
							"name": "RequestedGasLimitTooLow",
							"nameLocation": "33217:23:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1331,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "33240:2:5"
							},
							"src": "33211:32:5"
						},
						{
							"errorSelector": "66b69b9d",
							"id": 1338,
							"name": "DeliveryProviderDoesNotSupportTargetChain",
							"nameLocation": "33251:41:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1337,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1334,
										"mutability": "mutable",
										"name": "relayer",
										"nameLocation": "33304:7:5",
										"nodeType": "VariableDeclaration",
										"scope": 1338,
										"src": "33296:15:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 1333,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "33296:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1336,
										"mutability": "mutable",
										"name": "chainId",
										"nameLocation": "33322:7:5",
										"nodeType": "VariableDeclaration",
										"scope": 1338,
										"src": "33315:14:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										},
										"typeName": {
											"id": 1335,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "33315:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "33292:39:5"
							},
							"src": "33245:87:5"
						},
						{
							"errorSelector": "95d64fa0",
							"id": 1340,
							"name": "DeliveryProviderCannotReceivePayment",
							"nameLocation": "33339:36:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1339,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "33375:2:5"
							},
							"src": "33333:45:5"
						},
						{
							"errorSelector": "82273f20",
							"id": 1344,
							"name": "DeliveryProviderDoesNotSupportMessageKeyType",
							"nameLocation": "33385:44:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1343,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1342,
										"mutability": "mutable",
										"name": "keyType",
										"nameLocation": "33436:7:5",
										"nodeType": "VariableDeclaration",
										"scope": 1344,
										"src": "33430:13:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"typeName": {
											"id": 1341,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "33430:5:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "33429:15:5"
							},
							"src": "33379:66:5"
						},
						{
							"errorSelector": "20b84ced",
							"id": 1350,
							"name": "ReentrantDelivery",
							"nameLocation": "33541:17:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1349,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1346,
										"mutability": "mutable",
										"name": "msgSender",
										"nameLocation": "33567:9:5",
										"nodeType": "VariableDeclaration",
										"scope": 1350,
										"src": "33559:17:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 1345,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "33559:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1348,
										"mutability": "mutable",
										"name": "lockedBy",
										"nameLocation": "33586:8:5",
										"nodeType": "VariableDeclaration",
										"scope": 1350,
										"src": "33578:16:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 1347,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "33578:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "33558:37:5"
							},
							"src": "33535:61:5"
						},
						{
							"errorSelector": "79cbfdbe",
							"id": 1356,
							"name": "InvalidPayloadId",
							"nameLocation": "33604:16:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1355,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1352,
										"mutability": "mutable",
										"name": "parsed",
										"nameLocation": "33627:6:5",
										"nodeType": "VariableDeclaration",
										"scope": 1356,
										"src": "33621:12:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"typeName": {
											"id": 1351,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "33621:5:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1354,
										"mutability": "mutable",
										"name": "expected",
										"nameLocation": "33641:8:5",
										"nodeType": "VariableDeclaration",
										"scope": 1356,
										"src": "33635:14:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"typeName": {
											"id": 1353,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "33635:5:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "33620:30:5"
							},
							"src": "33598:53:5"
						},
						{
							"errorSelector": "c37906a0",
							"id": 1362,
							"name": "InvalidPayloadLength",
							"nameLocation": "33658:20:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1361,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1358,
										"mutability": "mutable",
										"name": "received",
										"nameLocation": "33687:8:5",
										"nodeType": "VariableDeclaration",
										"scope": 1362,
										"src": "33679:16:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1357,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "33679:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1360,
										"mutability": "mutable",
										"name": "expected",
										"nameLocation": "33705:8:5",
										"nodeType": "VariableDeclaration",
										"scope": 1362,
										"src": "33697:16:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1359,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "33697:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "33678:36:5"
							},
							"src": "33652:63:5"
						},
						{
							"errorSelector": "249ede70",
							"id": 1366,
							"name": "InvalidVaaKeyType",
							"nameLocation": "33722:17:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1365,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1364,
										"mutability": "mutable",
										"name": "parsed",
										"nameLocation": "33746:6:5",
										"nodeType": "VariableDeclaration",
										"scope": 1366,
										"src": "33740:12:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"typeName": {
											"id": 1363,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "33740:5:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "33739:14:5"
							},
							"src": "33716:38:5"
						},
						{
							"errorSelector": "12d6a5c7",
							"id": 1370,
							"name": "TooManyMessageKeys",
							"nameLocation": "33761:18:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1369,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1368,
										"mutability": "mutable",
										"name": "numMessageKeys",
										"nameLocation": "33788:14:5",
										"nodeType": "VariableDeclaration",
										"scope": 1370,
										"src": "33780:22:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1367,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "33780:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "33779:24:5"
							},
							"src": "33755:49:5"
						},
						{
							"errorSelector": "b72c3b7f",
							"id": 1374,
							"name": "InvalidDeliveryVaa",
							"nameLocation": "33812:18:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1373,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1372,
										"mutability": "mutable",
										"name": "reason",
										"nameLocation": "33838:6:5",
										"nodeType": "VariableDeclaration",
										"scope": 1374,
										"src": "33831:13:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_string_memory_ptr",
											"typeString": "string"
										},
										"typeName": {
											"id": 1371,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "33831:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "33830:15:5"
							},
							"src": "33806:40:5"
						},
						{
							"errorSelector": "776c06ce",
							"id": 1382,
							"name": "InvalidEmitter",
							"nameLocation": "33993:14:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1381,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1376,
										"mutability": "mutable",
										"name": "emitter",
										"nameLocation": "34016:7:5",
										"nodeType": "VariableDeclaration",
										"scope": 1382,
										"src": "34008:15:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 1375,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "34008:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1378,
										"mutability": "mutable",
										"name": "registered",
										"nameLocation": "34033:10:5",
										"nodeType": "VariableDeclaration",
										"scope": 1382,
										"src": "34025:18:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 1377,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "34025:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1380,
										"mutability": "mutable",
										"name": "chainId",
										"nameLocation": "34052:7:5",
										"nodeType": "VariableDeclaration",
										"scope": 1382,
										"src": "34045:14:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										},
										"typeName": {
											"id": 1379,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "34045:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "34007:53:5"
							},
							"src": "33987:74:5"
						},
						{
							"errorSelector": "65c1f7cd",
							"id": 1388,
							"name": "MessageKeysLengthDoesNotMatchMessagesLength",
							"nameLocation": "34068:43:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1387,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1384,
										"mutability": "mutable",
										"name": "keys",
										"nameLocation": "34120:4:5",
										"nodeType": "VariableDeclaration",
										"scope": 1388,
										"src": "34112:12:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1383,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "34112:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1386,
										"mutability": "mutable",
										"name": "vaas",
										"nameLocation": "34134:4:5",
										"nodeType": "VariableDeclaration",
										"scope": 1388,
										"src": "34126:12:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1385,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "34126:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "34111:28:5"
							},
							"src": "34062:78:5"
						},
						{
							"errorSelector": "eb5e161c",
							"id": 1392,
							"name": "VaaKeysDoNotMatchVaas",
							"nameLocation": "34147:21:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1391,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1390,
										"mutability": "mutable",
										"name": "index",
										"nameLocation": "34175:5:5",
										"nodeType": "VariableDeclaration",
										"scope": 1392,
										"src": "34169:11:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"typeName": {
											"id": 1389,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "34169:5:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "34168:13:5"
							},
							"src": "34141:41:5"
						},
						{
							"errorSelector": "72132d5a",
							"id": 1394,
							"name": "RequesterNotWormholeRelayer",
							"nameLocation": "34376:27:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1393,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "34403:2:5"
							},
							"src": "34370:36:5"
						},
						{
							"errorSelector": "d8215fc9",
							"id": 1398,
							"name": "TargetChainIsNotThisChain",
							"nameLocation": "34513:25:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1397,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1396,
										"mutability": "mutable",
										"name": "targetChain",
										"nameLocation": "34546:11:5",
										"nodeType": "VariableDeclaration",
										"scope": 1398,
										"src": "34539:18:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										},
										"typeName": {
											"id": 1395,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "34539:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "34538:20:5"
							},
							"src": "34507:52:5"
						},
						{
							"errorSelector": "afe343e8",
							"id": 1400,
							"name": "InvalidOverrideGasLimit",
							"nameLocation": "34645:23:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1399,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "34668:2:5"
							},
							"src": "34639:32:5"
						},
						{
							"errorSelector": "e3704808",
							"id": 1402,
							"name": "InvalidOverrideReceiverValue",
							"nameLocation": "34762:28:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1401,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "34790:2:5"
							},
							"src": "34756:37:5"
						},
						{
							"errorSelector": "0cfb7d9e",
							"id": 1404,
							"name": "InvalidOverrideRefundPerGasUnused",
							"nameLocation": "34901:33:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1403,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "34934:2:5"
							},
							"src": "34895:42:5"
						},
						{
							"errorSelector": "02216bc0",
							"id": 1410,
							"name": "InsufficientRelayerFunds",
							"nameLocation": "35082:24:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1409,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1406,
										"mutability": "mutable",
										"name": "msgValue",
										"nameLocation": "35115:8:5",
										"nodeType": "VariableDeclaration",
										"scope": 1410,
										"src": "35107:16:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1405,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "35107:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1408,
										"mutability": "mutable",
										"name": "minimum",
										"nameLocation": "35133:7:5",
										"nodeType": "VariableDeclaration",
										"scope": 1410,
										"src": "35125:15:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1407,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "35125:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "35106:35:5"
							},
							"src": "35076:66:5"
						}
					],
					"src": "38:35272:5"
				},
				"id": 5
			},
			"src/interfaces/cctp/IMessageTransmitter.sol": {
				"ast": {
					"absolutePath": "src/interfaces/cctp/IMessageTransmitter.sol",
					"exportedSymbols": {
						"IAttestable": [
							1481
						],
						"IMessageTransmitter": [
							1580
						],
						"IOwnable2Step": [
							1901
						],
						"IPausable": [
							1933
						]
					},
					"id": 1581,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1412,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "226:23:6"
						},
						{
							"absolutePath": "src/interfaces/cctp/shared/IOwnable2Step.sol",
							"file": "./shared/IOwnable2Step.sol",
							"id": 1414,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1581,
							"sourceUnit": 1902,
							"src": "251:57:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1413,
										"name": "IOwnable2Step",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1901,
										"src": "259:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/cctp/shared/IPausable.sol",
							"file": "./shared/IPausable.sol",
							"id": 1416,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1581,
							"sourceUnit": 1934,
							"src": "309:49:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1415,
										"name": "IPausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1933,
										"src": "317:9:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAttestable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1481,
							"linearizedBaseContracts": [
								1481
							],
							"name": "IAttestable",
							"nameLocation": "370:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "5b99bab45c72ce67e89466dbc47480b9c1fde1400e7268bbf463b8354ee4653f",
									"id": 1420,
									"name": "AttesterEnabled",
									"nameLocation": "392:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"indexed": true,
												"mutability": "mutable",
												"name": "attester",
												"nameLocation": "424:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "408:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "407:26:6"
									},
									"src": "386:48:6"
								},
								{
									"anonymous": false,
									"eventSelector": "78e573a18c75957b7cadaab01511aa1c19a659f06ecf53e01de37ed92d3261fc",
									"id": 1424,
									"name": "AttesterDisabled",
									"nameLocation": "443:16:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"indexed": true,
												"mutability": "mutable",
												"name": "attester",
												"nameLocation": "476:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "460:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:26:6"
									},
									"src": "437:49:6"
								},
								{
									"anonymous": false,
									"eventSelector": "149153f58b4da003a8cfd4523709a202402182cb5aa335046911277a1be6eede",
									"id": 1430,
									"name": "SignatureThresholdUpdated",
									"nameLocation": "496:25:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldSignatureThreshold",
												"nameLocation": "530:21:6",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "522:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"indexed": false,
												"mutability": "mutable",
												"name": "newSignatureThreshold",
												"nameLocation": "561:21:6",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "553:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "553:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:62:6"
									},
									"src": "490:94:6"
								},
								{
									"anonymous": false,
									"eventSelector": "0cee1b7ae04f3c788dd3a46c6fa677eb95b913611ef7ab59524fdc09d3460219",
									"id": 1436,
									"name": "AttesterManagerUpdated",
									"nameLocation": "593:22:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAttesterManager",
												"nameLocation": "637:23:6",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "621:39:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAttesterManager",
												"nameLocation": "682:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "666:34:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "666:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "615:89:6"
									},
									"src": "587:118:6"
								},
								{
									"functionSelector": "9b0d94b7",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "attesterManager",
									"nameLocation": "718:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "733:2:6"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "759:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:9:6"
									},
									"scope": 1481,
									"src": "709:59:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7af82f60",
									"id": 1448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isEnabledAttester",
									"nameLocation": "780:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "attester",
												"nameLocation": "806:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "798:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "797:18:6"
									},
									"returnParameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "839:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1445,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:6"
									},
									"scope": 1481,
									"src": "771:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "51079a53",
									"id": 1453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNumEnabledAttesters",
									"nameLocation": "857:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "879:2:6"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "905:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "905:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "904:9:6"
									},
									"scope": 1481,
									"src": "848:66:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "beb673d8",
									"id": 1460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEnabledAttester",
									"nameLocation": "926:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "953:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "945:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "945:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "944:15:6"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "983:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "983:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "982:9:6"
									},
									"scope": 1481,
									"src": "917:75:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "de7769d4",
									"id": 1465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateAttesterManager",
									"nameLocation": "1005:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "newAttesterManager",
												"nameLocation": "1035:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1027:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:28:6"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1063:0:6"
									},
									"scope": 1481,
									"src": "996:68:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bbde5374",
									"id": 1470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setSignatureThreshold",
									"nameLocation": "1076:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "newSignatureThreshold",
												"nameLocation": "1106:21:6",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "1098:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1098:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1097:31:6"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:0:6"
									},
									"scope": 1481,
									"src": "1067:71:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fae36879",
									"id": 1475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enableAttester",
									"nameLocation": "1150:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "attester",
												"nameLocation": "1173:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "1165:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1165:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1164:18:6"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1191:0:6"
									},
									"scope": 1481,
									"src": "1141:51:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2d025080",
									"id": 1480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "disableAttester",
									"nameLocation": "1204:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "attester",
												"nameLocation": "1228:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "1220:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:18:6"
									},
									"returnParameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1246:0:6"
									},
									"scope": 1481,
									"src": "1195:52:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1581,
							"src": "360:889:6",
							"usedErrors": [],
							"usedEvents": [
								1420,
								1424,
								1430,
								1436
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1482,
										"name": "IAttestable",
										"nameLocations": [
											"1284:11:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1481,
										"src": "1284:11:6"
									},
									"id": 1483,
									"nodeType": "InheritanceSpecifier",
									"src": "1284:11:6"
								},
								{
									"baseName": {
										"id": 1484,
										"name": "IPausable",
										"nameLocations": [
											"1297:9:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1933,
										"src": "1297:9:6"
									},
									"id": 1485,
									"nodeType": "InheritanceSpecifier",
									"src": "1297:9:6"
								},
								{
									"baseName": {
										"id": 1486,
										"name": "IOwnable2Step",
										"nameLocations": [
											"1308:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1901,
										"src": "1308:13:6"
									},
									"id": 1487,
									"nodeType": "InheritanceSpecifier",
									"src": "1308:13:6"
								}
							],
							"canonicalName": "IMessageTransmitter",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1580,
							"linearizedBaseContracts": [
								1580,
								1901,
								1933,
								1481
							],
							"name": "IMessageTransmitter",
							"nameLocation": "1261:19:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036",
									"id": 1491,
									"name": "MessageSent",
									"nameLocation": "1332:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1350:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1344:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1488,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1344:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1343:15:6"
									},
									"src": "1326:33:6"
								},
								{
									"anonymous": false,
									"eventSelector": "58200b4c34ae05ee816d710053fff3fb75af4395915d3d2a771b24aa10e3cc5d",
									"id": 1503,
									"name": "MessageReceived",
									"nameLocation": "1369:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"indexed": true,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "1406:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "1390:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1390:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"indexed": false,
												"mutability": "mutable",
												"name": "sourceDomain",
												"nameLocation": "1425:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "1418:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1494,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1418:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"indexed": true,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1458:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "1443:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1496,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1443:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1477:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "1469:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1498,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1469:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"indexed": false,
												"mutability": "mutable",
												"name": "messageBody",
												"nameLocation": "1495:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "1489:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1489:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1384:126:6"
									},
									"src": "1363:148:6"
								},
								{
									"functionSelector": "8d3638f4",
									"id": 1508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "localDomain",
									"nameLocation": "1524:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1535:2:6"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1561:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1505,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1561:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1560:8:6"
									},
									"scope": 1580,
									"src": "1515:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 1513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "1581:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1588:2:6"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "1614:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1510,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1614:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1613:8:6"
									},
									"scope": 1580,
									"src": "1572:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "af47b9bb",
									"id": 1518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxMessageBodySize",
									"nameLocation": "1634:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:6"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "1678:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1678:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1677:9:6"
									},
									"scope": 1580,
									"src": "1625:62:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8371744e",
									"id": 1523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nextAvailableNonce",
									"nameLocation": "1699:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1717:2:6"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "1743:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1520,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1743:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1742:8:6"
									},
									"scope": 1580,
									"src": "1690:61:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feb61724",
									"id": 1530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "usedNonces",
									"nameLocation": "1763:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1782:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "1774:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1524,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1774:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1773:15:6"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "1812:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1527,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1812:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:6:6"
									},
									"scope": 1580,
									"src": "1754:64:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0ba469bc",
									"id": 1541,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendMessage",
									"nameLocation": "1831:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "destinationDomain",
												"nameLocation": "1855:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "1848:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1531,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1848:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1886:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "1878:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1533,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "messageBody",
												"nameLocation": "1916:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "1901:26:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1535,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1901:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1842:89:6"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "1950:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1538,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1950:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:8:6"
									},
									"scope": 1580,
									"src": "1822:136:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f7259a75",
									"id": 1554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendMessageWithCaller",
									"nameLocation": "1971:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "destinationDomain",
												"nameLocation": "2005:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "1998:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1542,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1998:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2036:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "2028:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1544,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "destinationCaller",
												"nameLocation": "2059:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "2051:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1546,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2051:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "messageBody",
												"nameLocation": "2097:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "2082:26:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1548,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2082:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1992:120:6"
									},
									"returnParameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "2131:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1551,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2131:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2130:8:6"
									},
									"scope": 1580,
									"src": "1962:177:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b857b774",
									"id": 1565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "replaceMessage",
									"nameLocation": "2152:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "originalMessage",
												"nameLocation": "2187:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "2172:30:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2172:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "originalAttestation",
												"nameLocation": "2223:19:6",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "2208:34:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1557,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2208:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "newMessageBody",
												"nameLocation": "2263:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "2248:29:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1559,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2248:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "newDestinationCaller",
												"nameLocation": "2291:20:6",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "2283:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1561,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:149:6"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2324:0:6"
									},
									"scope": 1580,
									"src": "2143:182:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "57ecfd28",
									"id": 1574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "receiveMessage",
									"nameLocation": "2338:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2373:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "2358:22:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2358:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "attestation",
												"nameLocation": "2401:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "2386:26:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1568,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2386:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:64:6"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2440:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "2435:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2435:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2434:14:6"
									},
									"scope": 1580,
									"src": "2329:120:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "92492c68",
									"id": 1579,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMaxMessageBodySize",
									"nameLocation": "2462:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "newMaxMessageBodySize",
												"nameLocation": "2492:21:6",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "2484:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2484:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2483:31:6"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2523:0:6"
									},
									"scope": 1580,
									"src": "2453:71:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1581,
							"src": "1251:1275:6",
							"usedErrors": [],
							"usedEvents": [
								1420,
								1424,
								1430,
								1436,
								1491,
								1503,
								1876,
								1882,
								1905,
								1907,
								1911
							]
						}
					],
					"src": "226:2301:6"
				},
				"id": 6
			},
			"src/interfaces/cctp/ITokenMessenger.sol": {
				"ast": {
					"absolutePath": "src/interfaces/cctp/ITokenMessenger.sol",
					"exportedSymbols": {
						"IMessageTransmitter": [
							1580
						],
						"IOwnable2Step": [
							1901
						],
						"ITokenMessenger": [
							1731
						],
						"ITokenMinter": [
							1868
						]
					},
					"id": 1732,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1582,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "215:23:7"
						},
						{
							"absolutePath": "src/interfaces/cctp/shared/IOwnable2Step.sol",
							"file": "./shared/IOwnable2Step.sol",
							"id": 1584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1732,
							"sourceUnit": 1902,
							"src": "240:57:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1583,
										"name": "IOwnable2Step",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1901,
										"src": "248:13:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/cctp/IMessageTransmitter.sol",
							"file": "./IMessageTransmitter.sol",
							"id": 1586,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1732,
							"sourceUnit": 1581,
							"src": "299:62:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1585,
										"name": "IMessageTransmitter",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1580,
										"src": "307:19:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/cctp/ITokenMinter.sol",
							"file": "./ITokenMinter.sol",
							"id": 1588,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1732,
							"sourceUnit": 1869,
							"src": "362:48:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1587,
										"name": "ITokenMinter",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1868,
										"src": "370:12:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1589,
										"name": "IOwnable2Step",
										"nameLocations": [
											"441:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1901,
										"src": "441:13:7"
									},
									"id": 1590,
									"nodeType": "InheritanceSpecifier",
									"src": "441:13:7"
								}
							],
							"canonicalName": "ITokenMessenger",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1731,
							"linearizedBaseContracts": [
								1731,
								1901
							],
							"name": "ITokenMessenger",
							"nameLocation": "422:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "2fa9ca894982930190727e75500a97d8dc500233a5065e0f3126c48fbe0343c0",
									"id": 1608,
									"name": "DepositForBurn",
									"nameLocation": "465:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"indexed": true,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "500:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "485:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1591,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "485:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"indexed": true,
												"mutability": "mutable",
												"name": "burnToken",
												"nameLocation": "527:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "511:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "550:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "542:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"indexed": true,
												"mutability": "mutable",
												"name": "depositor",
												"nameLocation": "578:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "562:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"indexed": false,
												"mutability": "mutable",
												"name": "mintRecipient",
												"nameLocation": "601:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "593:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1599,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"indexed": false,
												"mutability": "mutable",
												"name": "destinationDomain",
												"nameLocation": "627:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "620:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1601,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "620:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"indexed": false,
												"mutability": "mutable",
												"name": "destinationTokenMessenger",
												"nameLocation": "658:25:7",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "650:33:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1603,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "650:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1606,
												"indexed": false,
												"mutability": "mutable",
												"name": "destinationCaller",
												"nameLocation": "697:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "689:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1605,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "479:239:7"
									},
									"src": "459:260:7"
								},
								{
									"anonymous": false,
									"eventSelector": "1b2a7ff080b8cb6ff436ce0372e399692bbfb6d4ae5766fd8d58a7b8cc6142e6",
									"id": 1616,
									"name": "MintAndWithdraw",
									"nameLocation": "729:15:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"indexed": true,
												"mutability": "mutable",
												"name": "mintRecipient",
												"nameLocation": "761:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "745:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "784:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "776:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"indexed": true,
												"mutability": "mutable",
												"name": "mintToken",
												"nameLocation": "808:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "792:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:74:7"
									},
									"src": "723:96:7"
								},
								{
									"anonymous": false,
									"eventSelector": "4bba2b08298cf59661b4895e384cc2ac3962ce2d71f1b7c11bca52e1169f9599",
									"id": 1622,
									"name": "RemoteTokenMessengerAdded",
									"nameLocation": "829:25:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"indexed": false,
												"mutability": "mutable",
												"name": "domain",
												"nameLocation": "862:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "855:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1617,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "855:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1620,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenMessenger",
												"nameLocation": "878:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "870:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1619,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:39:7"
									},
									"src": "823:71:7"
								},
								{
									"anonymous": false,
									"eventSelector": "3dcea012093dbca2bb8ed7fd2b2ff90305ab70bddda8bbb94d4152735a98f0b1",
									"id": 1628,
									"name": "RemoteTokenMessengerRemoved",
									"nameLocation": "903:27:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"indexed": false,
												"mutability": "mutable",
												"name": "domain",
												"nameLocation": "938:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "931:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1623,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "931:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenMessenger",
												"nameLocation": "954:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "946:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1625,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:39:7"
									},
									"src": "897:73:7"
								},
								{
									"anonymous": false,
									"eventSelector": "109bb3e70cbf1931e295b49e75c67013b85ff80d64e6f1d321f37157b90c3830",
									"id": 1632,
									"name": "LocalMinterAdded",
									"nameLocation": "980:16:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"indexed": false,
												"mutability": "mutable",
												"name": "localMinter",
												"nameLocation": "1005:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "997:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "996:21:7"
									},
									"src": "974:44:7"
								},
								{
									"anonymous": false,
									"eventSelector": "2db49fbf671271826a27b02ebc496209c85fffffb4bccc67430d2a0f22b4d1ac",
									"id": 1636,
									"name": "LocalMinterRemoved",
									"nameLocation": "1027:18:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"indexed": false,
												"mutability": "mutable",
												"name": "localMinter",
												"nameLocation": "1054:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "1046:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1045:21:7"
									},
									"src": "1021:46:7"
								},
								{
									"functionSelector": "9cdbb181",
									"id": 1641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "messageBodyVersion",
									"nameLocation": "1080:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1098:2:7"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "1124:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1638,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1124:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1123:8:7"
									},
									"scope": 1731,
									"src": "1071:61:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2c121921",
									"id": 1647,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "localMessageTransmitter",
									"nameLocation": "1144:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1167:2:7"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "1193:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMessageTransmitter_$1580",
													"typeString": "contract IMessageTransmitter"
												},
												"typeName": {
													"id": 1644,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1643,
														"name": "IMessageTransmitter",
														"nameLocations": [
															"1193:19:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1580,
														"src": "1193:19:7"
													},
													"referencedDeclaration": 1580,
													"src": "1193:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMessageTransmitter_$1580",
														"typeString": "contract IMessageTransmitter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1192:21:7"
									},
									"scope": 1731,
									"src": "1135:79:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cb75c11c",
									"id": 1653,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "localMinter",
									"nameLocation": "1226:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1237:2:7"
									},
									"returnParameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "1263:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ITokenMinter_$1868",
													"typeString": "contract ITokenMinter"
												},
												"typeName": {
													"id": 1650,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1649,
														"name": "ITokenMinter",
														"nameLocations": [
															"1263:12:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1868,
														"src": "1263:12:7"
													},
													"referencedDeclaration": 1868,
													"src": "1263:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITokenMinter_$1868",
														"typeString": "contract ITokenMinter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:14:7"
									},
									"scope": 1731,
									"src": "1217:60:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "82a5e665",
									"id": 1660,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "remoteTokenMessengers",
									"nameLocation": "1289:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "domain",
												"nameLocation": "1318:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "1311:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1654,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1311:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:15:7"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "1349:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1657,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1349:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1348:9:7"
									},
									"scope": 1731,
									"src": "1280:78:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6fd3504e",
									"id": 1673,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositForBurn",
									"nameLocation": "1371:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1399:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "1391:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1391:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "destinationDomain",
												"nameLocation": "1418:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "1411:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1663,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1411:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "mintRecipient",
												"nameLocation": "1449:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "1441:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1665,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1441:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "burnToken",
												"nameLocation": "1476:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "1468:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1468:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:104:7"
									},
									"returnParameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1515:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "1508:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1670,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1508:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1507:14:7"
									},
									"scope": 1731,
									"src": "1362:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f856ddb6",
									"id": 1688,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositForBurnWithCaller",
									"nameLocation": "1535:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1573:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "1565:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1565:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "destinationDomain",
												"nameLocation": "1592:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "1585:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1676,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "mintRecipient",
												"nameLocation": "1623:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "1615:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1678,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1615:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "burnToken",
												"nameLocation": "1650:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "1642:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1642:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "destinationCaller",
												"nameLocation": "1673:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "1665:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1682,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1665:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1559:135:7"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1720:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "1713:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1685,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1713:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1712:14:7"
									},
									"scope": 1731,
									"src": "1526:201:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "29a78e33",
									"id": 1699,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "replaceDepositForBurn",
									"nameLocation": "1740:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "originalMessage",
												"nameLocation": "1782:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "1767:30:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1689,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1767:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "originalAttestation",
												"nameLocation": "1818:19:7",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "1803:34:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1691,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1803:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "newDestinationCaller",
												"nameLocation": "1851:20:7",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "1843:28:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1693,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1843:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "newMintRecipient",
												"nameLocation": "1885:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "1877:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1695,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1877:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1761:144:7"
									},
									"returnParameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1914:0:7"
									},
									"scope": 1731,
									"src": "1731:184:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "96abeb70",
									"id": 1710,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "handleReceiveMessage",
									"nameLocation": "1928:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "remoteDomain",
												"nameLocation": "1961:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1954:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1700,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1954:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1987:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1979:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1702,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1979:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "messageBody",
												"nameLocation": "2014:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1999:26:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1999:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1948:81:7"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "2048:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1707,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2048:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2047:6:7"
									},
									"scope": 1731,
									"src": "1919:135:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "da87e448",
									"id": 1717,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addRemoteTokenMessenger",
									"nameLocation": "2067:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "domain",
												"nameLocation": "2098:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "2091:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1711,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2091:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "tokenMessenger",
												"nameLocation": "2114:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "2106:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1713,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2106:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2090:39:7"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:7"
									},
									"scope": 1731,
									"src": "2058:81:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f79fd08e",
									"id": 1722,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeRemoteTokenMessenger",
									"nameLocation": "2151:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "domain",
												"nameLocation": "2185:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "2178:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1718,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2178:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2177:15:7"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:0:7"
									},
									"scope": 1731,
									"src": "2142:60:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8197beb9",
									"id": 1727,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLocalMinter",
									"nameLocation": "2215:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "newLocalMinter",
												"nameLocation": "2238:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "2230:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2230:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2229:24:7"
									},
									"returnParameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2262:0:7"
									},
									"scope": 1731,
									"src": "2206:57:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "91f17888",
									"id": 1730,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLocalMinter",
									"nameLocation": "2275:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2292:2:7"
									},
									"returnParameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2303:0:7"
									},
									"scope": 1731,
									"src": "2266:38:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1732,
							"src": "412:1894:7",
							"usedErrors": [],
							"usedEvents": [
								1608,
								1616,
								1622,
								1628,
								1632,
								1636,
								1876,
								1882
							]
						}
					],
					"src": "215:2091:7"
				},
				"id": 7
			},
			"src/interfaces/cctp/ITokenMinter.sol": {
				"ast": {
					"absolutePath": "src/interfaces/cctp/ITokenMinter.sol",
					"exportedSymbols": {
						"IOwnable2Step": [
							1901
						],
						"IPausable": [
							1933
						],
						"ITokenController": [
							1808
						],
						"ITokenMinter": [
							1868
						]
					},
					"id": 1869,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1733,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "213:23:8"
						},
						{
							"absolutePath": "src/interfaces/cctp/shared/IOwnable2Step.sol",
							"file": "./shared/IOwnable2Step.sol",
							"id": 1735,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1869,
							"sourceUnit": 1902,
							"src": "238:57:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1734,
										"name": "IOwnable2Step",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1901,
										"src": "246:13:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/cctp/shared/IPausable.sol",
							"file": "./shared/IPausable.sol",
							"id": 1737,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1869,
							"sourceUnit": 1934,
							"src": "296:49:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1736,
										"name": "IPausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1933,
										"src": "304:9:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITokenController",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1808,
							"linearizedBaseContracts": [
								1808
							],
							"name": "ITokenController",
							"nameLocation": "357:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "0d62f22541e067b40918826c6ea1d53a5d3d8cd6db5ea2412f98ee1365806727",
									"id": 1745,
									"name": "TokenPairLinked",
									"nameLocation": "384:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"indexed": false,
												"mutability": "mutable",
												"name": "localToken",
												"nameLocation": "408:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "400:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1741,
												"indexed": false,
												"mutability": "mutable",
												"name": "remoteDomain",
												"nameLocation": "427:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "420:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1740,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "420:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"indexed": false,
												"mutability": "mutable",
												"name": "remoteToken",
												"nameLocation": "449:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "441:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1742,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "441:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "399:62:8"
									},
									"src": "378:84:8"
								},
								{
									"anonymous": false,
									"eventSelector": "a545a3b499d14157d483b3da15afb4c3845531142505def4697f46863750b09e",
									"id": 1753,
									"name": "TokenPairUnlinked",
									"nameLocation": "471:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"indexed": false,
												"mutability": "mutable",
												"name": "localToken",
												"nameLocation": "497:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "489:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "489:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1749,
												"indexed": false,
												"mutability": "mutable",
												"name": "remoteDomain",
												"nameLocation": "516:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "509:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1748,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "509:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"indexed": false,
												"mutability": "mutable",
												"name": "remoteToken",
												"nameLocation": "538:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "530:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1750,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "530:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:62:8"
									},
									"src": "465:86:8"
								},
								{
									"anonymous": false,
									"eventSelector": "6aa98de3efb0f031e70a96b4bd97fafc58474ad59f4e890aa3733bba321ecca2",
									"id": 1759,
									"name": "SetBurnLimitPerMessage",
									"nameLocation": "561:22:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "600:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "584:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"indexed": false,
												"mutability": "mutable",
												"name": "burnLimitPerMessage",
												"nameLocation": "615:19:8",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "607:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "583:52:8"
									},
									"src": "555:81:8"
								},
								{
									"anonymous": false,
									"eventSelector": "bc661161c0cbda8d30350f565f4a00497983a8204ce97d977fa633359160b075",
									"id": 1763,
									"name": "SetTokenController",
									"nameLocation": "645:18:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenController",
												"nameLocation": "672:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "664:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:25:8"
									},
									"src": "639:50:8"
								},
								{
									"functionSelector": "a56ec632",
									"id": 1770,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnLimitsPerMessage",
									"nameLocation": "702:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "731:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "723:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:15:8"
									},
									"returnParameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "761:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "760:9:8"
									},
									"scope": 1808,
									"src": "693:77:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "eed3b9da",
									"id": 1777,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "remoteTokensToLocalTokens",
									"nameLocation": "782:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "sourceIdHash",
												"nameLocation": "816:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "808:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1771,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "808:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "807:22:8"
									},
									"returnParameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "853:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "852:9:8"
									},
									"scope": 1808,
									"src": "773:89:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "eddd9d82",
									"id": 1782,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenController",
									"nameLocation": "874:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "889:2:8"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "915:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "914:9:8"
									},
									"scope": 1808,
									"src": "865:59:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2b2b90e1",
									"id": 1791,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "linkTokenPair",
									"nameLocation": "937:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "localToken",
												"nameLocation": "959:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "951:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "remoteDomain",
												"nameLocation": "978:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "971:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1785,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "971:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "remoteToken",
												"nameLocation": "1000:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "992:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1787,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "992:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:62:8"
									},
									"returnParameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1021:0:8"
									},
									"scope": 1808,
									"src": "928:94:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "11b35fa4",
									"id": 1800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unlinkTokenPair",
									"nameLocation": "1034:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "localToken",
												"nameLocation": "1058:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "1050:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1050:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "remoteDomain",
												"nameLocation": "1077:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "1070:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1794,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1070:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "remoteToken",
												"nameLocation": "1099:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "1091:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1796,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1049:62:8"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1120:0:8"
									},
									"scope": 1808,
									"src": "1025:96:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7235ea0c",
									"id": 1807,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMaxBurnAmountPerMessage",
									"nameLocation": "1133:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "localToken",
												"nameLocation": "1168:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "1160:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1160:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "burnLimitPerMessage",
												"nameLocation": "1188:19:8",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "1180:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1159:49:8"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1217:0:8"
									},
									"scope": 1808,
									"src": "1124:94:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1869,
							"src": "347:873:8",
							"usedErrors": [],
							"usedEvents": [
								1745,
								1753,
								1759,
								1763
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1809,
										"name": "ITokenController",
										"nameLocations": [
											"1248:16:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1808,
										"src": "1248:16:8"
									},
									"id": 1810,
									"nodeType": "InheritanceSpecifier",
									"src": "1248:16:8"
								},
								{
									"baseName": {
										"id": 1811,
										"name": "IPausable",
										"nameLocations": [
											"1266:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1933,
										"src": "1266:9:8"
									},
									"id": 1812,
									"nodeType": "InheritanceSpecifier",
									"src": "1266:9:8"
								},
								{
									"baseName": {
										"id": 1813,
										"name": "IOwnable2Step",
										"nameLocations": [
											"1277:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1901,
										"src": "1277:13:8"
									},
									"id": 1814,
									"nodeType": "InheritanceSpecifier",
									"src": "1277:13:8"
								}
							],
							"canonicalName": "ITokenMinter",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1868,
							"linearizedBaseContracts": [
								1868,
								1901,
								1933,
								1808
							],
							"name": "ITokenMinter",
							"nameLocation": "1232:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "9b5383f8f338b0114c8a37985032531722c23d3266b6304c09d5712c7aa9c53a",
									"id": 1818,
									"name": "LocalTokenMessengerAdded",
									"nameLocation": "1301:24:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"indexed": false,
												"mutability": "mutable",
												"name": "localTokenMessenger",
												"nameLocation": "1334:19:8",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "1326:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1325:29:8"
									},
									"src": "1295:60:8"
								},
								{
									"anonymous": false,
									"eventSelector": "f38224d382e0b9cd3f016a2cc70e00cc46f3c902a50d96f1e32f10a9c9ecc5bc",
									"id": 1822,
									"name": "LocalTokenMessengerRemoved",
									"nameLocation": "1364:26:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"indexed": false,
												"mutability": "mutable",
												"name": "localTokenMessenger",
												"nameLocation": "1399:19:8",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "1391:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1391:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1390:29:8"
									},
									"src": "1358:62:8"
								},
								{
									"functionSelector": "770fc1f0",
									"id": 1827,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "localTokenMessenger",
									"nameLocation": "1433:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1452:2:8"
									},
									"returnParameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "1478:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1478:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1477:9:8"
									},
									"scope": 1868,
									"src": "1424:63:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "78a0565e",
									"id": 1836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLocalToken",
									"nameLocation": "1499:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "remoteDomain",
												"nameLocation": "1520:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "1513:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1828,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1513:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "remoteToken",
												"nameLocation": "1542:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "1534:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1830,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1512:42:8"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "1578:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1578:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1577:9:8"
									},
									"scope": 1868,
									"src": "1490:97:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d54de06f",
									"id": 1847,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1600:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "sourceDomain",
												"nameLocation": "1612:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "1605:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1837,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1605:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "burnToken",
												"nameLocation": "1634:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "1626:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1839,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1626:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1653:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "1645:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1645:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1665:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "1657:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1657:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1604:68:8"
									},
									"returnParameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1681:0:8"
									},
									"scope": 1868,
									"src": "1591:91:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9dc29fac",
									"id": 1854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1694:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "burnToken",
												"nameLocation": "1707:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1699:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "burnAmount",
												"nameLocation": "1726:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1718:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1718:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:39:8"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1746:0:8"
									},
									"scope": 1868,
									"src": "1685:62:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "36a816da",
									"id": 1859,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLocalTokenMessenger",
									"nameLocation": "1760:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "newLocalTokenMessenger",
												"nameLocation": "1791:22:8",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "1783:30:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1783:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1782:32:8"
									},
									"returnParameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1823:0:8"
									},
									"scope": 1868,
									"src": "1751:73:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cec74c03",
									"id": 1862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLocalTokenMessenger",
									"nameLocation": "1836:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1861:2:8"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1872:0:8"
									},
									"scope": 1868,
									"src": "1827:46:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e102baab",
									"id": 1867,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTokenController",
									"nameLocation": "1885:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "newTokenController",
												"nameLocation": "1912:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 1867,
												"src": "1904:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1904:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1903:28:8"
									},
									"returnParameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1940:0:8"
									},
									"scope": 1868,
									"src": "1876:65:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1869,
							"src": "1222:721:8",
							"usedErrors": [],
							"usedEvents": [
								1745,
								1753,
								1759,
								1763,
								1818,
								1822,
								1876,
								1882,
								1905,
								1907,
								1911
							]
						}
					],
					"src": "213:1731:8"
				},
				"id": 8
			},
			"src/interfaces/cctp/shared/IOwnable2Step.sol": {
				"ast": {
					"absolutePath": "src/interfaces/cctp/shared/IOwnable2Step.sol",
					"exportedSymbols": {
						"IOwnable2Step": [
							1901
						]
					},
					"id": 1902,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1870,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "226:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IOwnable2Step",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1901,
							"linearizedBaseContracts": [
								1901
							],
							"name": "IOwnable2Step",
							"nameLocation": "261:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700",
									"id": 1876,
									"name": "OwnershipTransferStarted",
									"nameLocation": "285:24:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "326:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "310:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "310:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "357:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "341:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "309:57:9"
									},
									"src": "279:88:9"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1882,
									"name": "OwnershipTransferred",
									"nameLocation": "376:20:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "413:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "397:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "397:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1880,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "444:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "428:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "396:57:9"
									},
									"src": "370:84:9"
								},
								{
									"functionSelector": "f2fde38b",
									"id": 1887,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nameLocation": "467:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "493:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "485:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:18:9"
									},
									"returnParameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:0:9"
									},
									"scope": 1901,
									"src": "458:54:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "79ba5097",
									"id": 1890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "524:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "539:2:9"
									},
									"returnParameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "550:0:9"
									},
									"scope": 1901,
									"src": "515:36:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8da5cb5b",
									"id": 1895,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "564:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "569:2:9"
									},
									"returnParameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "595:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "595:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "594:9:9"
									},
									"scope": 1901,
									"src": "555:49:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e30c3978",
									"id": 1900,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingOwner",
									"nameLocation": "616:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "628:2:9"
									},
									"returnParameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "654:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:9:9"
									},
									"scope": 1901,
									"src": "607:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1902,
							"src": "251:414:9",
							"usedErrors": [],
							"usedEvents": [
								1876,
								1882
							]
						}
					],
					"src": "226:440:9"
				},
				"id": 9
			},
			"src/interfaces/cctp/shared/IPausable.sol": {
				"ast": {
					"absolutePath": "src/interfaces/cctp/shared/IPausable.sol",
					"exportedSymbols": {
						"IPausable": [
							1933
						]
					},
					"id": 1934,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1903,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "211:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPausable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1933,
							"linearizedBaseContracts": [
								1933
							],
							"name": "IPausable",
							"nameLocation": "246:9:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625",
									"id": 1905,
									"name": "Pause",
									"nameLocation": "266:5:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "271:2:10"
									},
									"src": "260:14:10"
								},
								{
									"anonymous": false,
									"eventSelector": "7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33",
									"id": 1907,
									"name": "Unpause",
									"nameLocation": "283:7:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "290:2:10"
									},
									"src": "277:16:10"
								},
								{
									"anonymous": false,
									"eventSelector": "b80482a293ca2e013eda8683c9bd7fc8347cfdaeea5ede58cba46df502c2a604",
									"id": 1911,
									"name": "PauserChanged",
									"nameLocation": "302:13:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "332:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "316:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "315:28:10"
									},
									"src": "296:48:10"
								},
								{
									"functionSelector": "5c975abb",
									"id": 1916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "357:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "363:2:10"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "389:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1913,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "389:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:6:10"
									},
									"scope": 1933,
									"src": "348:47:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9fd0506d",
									"id": 1921,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pauser",
									"nameLocation": "407:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "413:2:10"
									},
									"returnParameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "439:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "438:9:10"
									},
									"scope": 1933,
									"src": "398:50:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8456cb59",
									"id": 1924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pause",
									"nameLocation": "461:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "466:2:10"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "477:0:10"
									},
									"scope": 1933,
									"src": "452:26:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3f4ba83a",
									"id": 1927,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unpause",
									"nameLocation": "490:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "497:2:10"
									},
									"returnParameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "508:0:10"
									},
									"scope": 1933,
									"src": "481:28:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "554bab3c",
									"id": 1932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updatePauser",
									"nameLocation": "521:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "newPauser",
												"nameLocation": "542:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "534:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "534:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:19:10"
									},
									"returnParameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "561:0:10"
									},
									"scope": 1933,
									"src": "512:50:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1934,
							"src": "236:328:10",
							"usedErrors": [],
							"usedEvents": [
								1905,
								1907,
								1911
							]
						}
					],
					"src": "211:354:10"
				},
				"id": 10
			},
			"src/interfaces/token/IERC20.sol": {
				"ast": {
					"absolutePath": "src/interfaces/token/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							2002
						]
					},
					"id": 2003,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2002,
							"linearizedBaseContracts": [
								2002
							],
							"name": "IERC20",
							"nameLocation": "113:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1943,
									"name": "Transfer",
									"nameLocation": "130:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1937,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "155:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "139:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "139:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1939,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "177:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "161:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "161:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1941,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "189:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "181:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "181:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "138:57:11"
									},
									"src": "124:72:11"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1951,
									"name": "Approval",
									"nameLocation": "205:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "230:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "214:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "214:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1947,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "253:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "237:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1949,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "270:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "262:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "262:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "213:63:11"
									},
									"src": "199:78:11"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1956,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:11"
									},
									"returnParameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "327:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:11"
									},
									"scope": 2002,
									"src": "281:55:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1963,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "348:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "366:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "358:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:17:11"
									},
									"returnParameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "398:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "397:9:11"
									},
									"scope": 2002,
									"src": "339:68:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1972,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "419:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "437:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "429:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "452:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "444:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "428:32:11"
									},
									"returnParameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "484:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:9:11"
									},
									"scope": 2002,
									"src": "410:83:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1981,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "506:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "523:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "515:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "535:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "527:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "514:28:11"
									},
									"returnParameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "561:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1978,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "561:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "560:6:11"
									},
									"scope": 2002,
									"src": "497:70:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1990,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "579:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "595:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "587:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "587:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "612:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "604:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:33:11"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "638:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1987,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "638:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "637:6:11"
									},
									"scope": 2002,
									"src": "570:74:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 2001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "656:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "677:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "669:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "691:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "683:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "703:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "695:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "668:42:11"
									},
									"returnParameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "729:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1998,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "729:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "728:6:11"
									},
									"scope": 2002,
									"src": "647:88:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2003,
							"src": "103:634:11",
							"usedErrors": [],
							"usedEvents": [
								1943,
								1951
							]
						}
					],
					"src": "38:700:11"
				},
				"id": 11
			}
		}
	}
}